
--- INIT.PA	2014-01-26 15:15:18.375398283 -0500
+++ orig2/INIT.PA	2014-01-26 13:35:18.079138898 -0500
@@ -7,7 +7,6 @@
 /	RICHARD BARTLEIN, 1974, 1976
 /	UNIVERSITY OF WISCONSIN - MILWAUKEE
 
-FIELD 2				/INIT LOADS ONTO DISK TRACK 2
 	*0
 	JMP I .+1	/JUST IN CASE WE GET HERE
 	SUPER
@@ -103,7 +102,6 @@
 	GETIN0
 WAIT=	JMP I .
 	WSCHED		/RESCHEDULE
-
 	*200
 /
 /PROGRAM TO OPEN AND MODIFY SINGLE DISC REGISTERS
@@ -161,8 +159,7 @@
 PHACK,	HACK
 PIN,	IN
 PSPACE,	SPACE
-
-/ROUTINE TO INPUT AN OCTAL NUMBER
+/ROUTINE TO INPUT AN OCTAL NUMBER
 /ECHOES INPUT IF IT WAS VALID
 /CALL:	JMS OTIN
 /	 CR TERMINATOR
@@ -262,7 +259,6 @@
 KMZERO,	-"0
 KMEIGH,	-"8
 XDDTA,	7000	/XDDT ADDRESS
-
 	PAGE
 /ROUTINE TO OPEN A DISC LOCATION (REGISTER)
 XOPN,	0
@@ -362,8 +358,7 @@
 K177,	177
 PVALUE, VALUE
 PVALU1, VALUE1
-
-/ROUTINE TO TYPE THE 4 OCTAL DIGITS IN THE ACC
+/ROUTINE TO TYPE THE 4 OCTAL DIGITS IN THE ACC
 /ON THE TELEPRINTER
 
 HACK,	0
@@ -463,7 +458,6 @@
 	JMP I RESTOR
 SAVE1,	0
 SAVE2,	0
-
 	PAGE
 /ROUTINE TO TYPE PACKED MESSAGES.
 /THE CHARACTER '_' CAUSES CR-LF TO BE TYPED.
@@ -522,7 +516,6 @@
 DASH=	.-2
 DDTMES,	TEXT /LOAD XDDT? /
 LDXRS,	TEXT /_LOAD, DUMP, START?? /
-
 	PAGE
 
 /SYSTEM INITIALIZATION
@@ -695,7 +688,6 @@
 C4100,	4100
 C300,	300
 		>
-
 	PAGE
 	IFZERO D680-2 <
 /INITIALIZE 680 SYSTEM
@@ -751,7 +743,6 @@
 	IFZERO CPU-3 <
 	JMP I T8INI	/A BIGGY IF A DC02, ISN'T IT
 	>
-
 	IFZERO D680-2 <
 /INITIALIZATION
 /ENTER WITH NUMBER OF LINES IN AC
@@ -844,7 +835,6 @@
 PT8AX2,	T8AX2
 PT8CT1,	T8CNT1
 	>
-
 	PAGE
 
 CORFRE,	FREE
@@ -966,7 +956,6 @@
 	JMP SKIPS1	/YES - IGNORE IT
 	ISZ SKIPS
 	JMP I SKIPS	/RETURN NORMALLY
-
 	PAGE
 /THIS ROUTINE READS OR WRITES 4K AT A TIME.
 /CALLING SEQUENCE:
@@ -1040,7 +1029,6 @@
 MASAVE,	0
 WCSAVE,	0
 	>
-
 	IFNZRO RK8E <
 /
 /ROUTINE TO HANDLE THE RK08/E DISC.
@@ -1126,8 +1114,7 @@
 DS1002,	1002
 DS7770,	7770
 	>
-
-/
+/
 /SUBROUTINE TO READ A LINE FROM THE KEYBOARD.
 GETIN0,	0
 	TAD INBUF
@@ -1175,7 +1162,6 @@
 CM215,	-215
 C0212,	212
 GETCHR,	IN
-
 	PAGE
 /INIT BOOTSTRAP - LOAD TRACK 2 INTO FIELD 0
 
@@ -1209,8 +1195,7 @@
 B7750,	7750
 B7751,	7751
 S0200,	200	/INIT TRACK
-
-/DATE INPUT
+/DATE INPUT
 /DATE=((YEAR-1974)*12+(MONTH-1))*31+DAY-1
 
 DATMUL,	DMUL
@@ -1278,8 +1263,7 @@
 	DCA I DATEA
 	CHDF
 	JMP I DATEIN
-
-/ROUTINE TO TYPE A MESSAGE AND CHECK FOR A YES-NO RESPONSE.
+/ROUTINE TO TYPE A MESSAGE AND CHECK FOR A YES-NO RESPONSE.
 /CALLING SEQUENCE:
 /	YESNO
 /	 MSGAD	/ADDRESS OF QUESTION
@@ -1316,7 +1300,6 @@
 	TAD AXS1
 	DCA AXS1		/BACK UP POINTER
 	JMP I COMGE0
-
 	PAGE
 
 /NUMBER INPUT
@@ -1328,7 +1311,7 @@
 NUMAGN=	NUMHO+1	/MAGNITUDE
 NUMB17,	17
 NUMCNT,	0	/DIGIT COUNT
-/	IFNZRO NUMOCT-NUMDEC-10	<GLITCH>
+	IFNZRO NUMOCT-NUMDEC-10	<GLITCH>
 NUMDIF=	C0010
 NUMDSP,	JMP NUMDEC
 NUMINU,	-"-
@@ -1422,8 +1405,7 @@
 	CIA
 NUMBI4,	ISZ NUMBI0
 	JMP I NUMBI0
-
-OCI260,	-260
+OCI260,	-260
 OCTINT,	0
 
 OCTIN0,	0
@@ -1448,7 +1430,6 @@
 OCTIN2,	CLA CLL
 	TAD OCTINT
 	JMP I OCTIN0
-
 	PAGE
 
 DMUL,	0
@@ -1498,8 +1479,7 @@
 MP3,	0
 MP5,	0
 M12,	-14
-
-DSKINI,	0		/CLEAR USER DISC REQUEST QUEUE
+DSKINI,	0		/CLEAR USER DISC REQUEST QUEUE
 	DATFLD
 	TAD CORCNT
 	CIA
@@ -1516,8 +1496,7 @@
 	DCMA		/CLEAR THE DISC FLAG
 	CHDF
 	JMP I DSKINI
-
-/TIME INPUT
+/TIME INPUT
 
 TIMULT,	DMUL
 TIMCK2,	-INCLK2-1
@@ -1566,7 +1545,6 @@
 
 INBUFA,	ZBLOCK 12	/INPUT BUFFER FOR INIT RESPONSES
 INBUFZ=	.-1
-
 	PAGE
 /DECTAPE TRANSFER ROUTINE
 /CALLING SEQUENCE:
@@ -1685,7 +1663,6 @@
 DT0200,	200
 DTMF,	0
 		>
-
 		IFZERO CPU-3 <
 DTGO,	0		/SAME CALLING SEQUENCE AS THE 8 VERSION.
 	CLA
@@ -1749,7 +1726,6 @@
 C7000,	7000
 		>
 	>
-
 	IFNZRO TD8E <
 /ROUTINE TO HANDLE THE TD8E DECTAPES FOR LOADING AND
 /DUMPING THE SYSTEM; THEY CANNOT BE USED UNDER TSS/8.
@@ -1889,7 +1865,6 @@
 DTM37,	-37
 DTM110,	-110
 	>
-
 	PAGE
 
 /4K DISC READ OR WRITE
@@ -1941,8 +1916,7 @@
 CMR,	-"R
 CMW,	"R-"W
 C6603,	6603
-
-CLEAR,	0
+CLEAR,	0
 	CLA
 	DISC		/READ MONITOR II INTO FIELD 1
 	 DMAR
@@ -1963,8 +1937,7 @@
 	JMP .-2
 	JMP I ZERO
 CLR2,	0
-
-/SUBROUTINE TO SEND A MESSAGE TO ALL REAL CONSOLE PRINTERS.
+/SUBROUTINE TO SEND A MESSAGE TO ALL REAL CONSOLE PRINTERS.
 PRTAL0,	0
 	TAD I PRTAL0	/GET THE MESSAGE ADDRESS
 	DCA PRAMSG
@@ -2010,7 +1983,6 @@
 QPTR,	0
 QTBL,	DEVTBL
 QTTY,	0
-
 	PAGE
 
 	IFZERO TD8E <
@@ -2140,7 +2112,6 @@
 	7755	/THESE OVERLAY THE BREAK LOCATIONS DURING
 	7755	/ THE INITIAL LOAD
 	>>
-
 	IFNZRO TD8E <	/CONTINUATION OF TD8E DECTAPE HANDLER
 /
 /NOW SET UP TO DO THE READ OR WRITE.
@@ -2246,7 +2217,6 @@
 DTM32,	-32
 DTM201,	-201
 	>
-
 	*3400
 
 /DISC DUMP ON DTA1
@@ -2367,7 +2337,6 @@
 HDBLKA,	TCBLKS
 WRTHDA,	WRTHD
 	>>
-
 	PAGE
 /FILE PHANTOM AND DISC REFRESHER
 /WRITE NEW MFD ON DISC DIRECTLY ABOVE THE SWAPPING AREA
@@ -2471,8 +2440,7 @@
 C0253,	253
 CM4004, -4004
 SEGMAX,	DSKSIZ-JOBMAX-SWDEX^20-1	/MAXIMUM SEGMENT NUMBER
-
-/ROUTINE TO MOVE XDDT INTO DATFLD (HIGH END OF TS8II).
+/ROUTINE TO MOVE XDDT INTO DATFLD (HIGH END OF TS8II).
 
 LODDT,	0
 	TAD KM4300
@@ -2496,7 +2464,6 @@
 KM4300,	-4300
 /
 NEWPAS,	TEXT /_INITIAL MGR1 & MGR2 PASSWORDS ARE 'LOAD'_/
-
 	PAGE
 	JMP I .+1
 	INBOOT
@@ -2619,9 +2586,8 @@
 	7777		/TERMINATE THE STRING
 
 UPMSG,	TEXT '__TSS/8 RESTARTED_PLEASE LOGIN__.'
-
 	PAGE
-/	IFNZRO 4200-.	<GLITCH>
+	IFNZRO 4200-.	<GLITCH>
 /INIT SUPERVISOR
 /OVERLAYS XDDT PERMANENT SYMBOL TABLE
 MANUAL,	JMP SUPER	/STARTED IN 'SI' - DON'T GRAB THE DATE & TIME
@@ -2703,8 +2669,7 @@
 SUPCNT,	0
 UPTM1B,	UPTIM1
 UPTM2B,	UPTIM2
-
-/
+/
 /SYSTEM INITIALIZATION ROUTINE TO TYPE THE SYSTEM RESTARTED
 /MESSAGE ON ALL CONSOLES; WE ALSO PRINT ADDITIONAL INFO
 /ON K00 IF THIS IS AN AUTOMATIC SYSTEM REBOOT.
@@ -2767,8 +2732,7 @@
 QCHAR,	0
 RTYPCH,	0	/SINGLE CHARACTER MESSAGE
 	0
-
-/
+/
 /PATCHES TO 'XDDT'
 	IFNZRO 4434-.&4000	<GLITCH; *.-1>
 
@@ -2789,7 +2753,6 @@
 	4434
 	4434
 /
-
 	*7626
 /BINARY LOADER - SLIGHTLY MODIFIED FROM THE STANDARD LOADER
 /TO ALLOW IT TO OVERLAY ITSELF & TO MAKE THE DATA-BREAK

--- SI.PA	2014-01-25 14:36:30.743061970 -0500
+++ orig2/SI.PA	2014-01-26 13:35:18.079138898 -0500
@@ -199,7 +199,6 @@
 NOMESS=	10	/PRINT NO MESSAGE (CURRENTLY UNUSED)
 /
 /BITS 9-11 CONTAIN # FREE BLOCKS REQUIRED
-
 	PAGE
 
 /SI IS ENTERED HERE FOR EACH COMMAND PROCESSED. WE SCAN
@@ -319,8 +318,7 @@
 COMFND=	IOTP7	/COUNT OF SEARCH MATCHES
 COMLNK=	IOTP5
 COMNXT=	IOTP6
-
-COMFIP,	TAD I COMDSP
+COMFIP,	TAD I COMDSP
 	SNA		/RETURNING FROM SI CALL?
 	JMP COMFI2	/NO - MUST BE ERROR
 	DCA IOTP0	/YES - SAVE DISPATCH ADDRESS
@@ -353,7 +351,6 @@
 	JMP I IOTP0	/NOW DISPATCH
 COMFI2,	JMP I .+1
 	SYSERR
-
 	PAGE
 
 COM41,	DATFLD
@@ -462,7 +459,6 @@
 LOGE4,	"S;"Y;"S;"T;"E;"M;" ;"R;"E;"S;"T;"R;"I;"C;"T;"E;"D;0
 TALKM1,	215;212;207;"*;"*;" ;"K;0
 TALKM2,	"/;0
-
 	PAGE
 
 /ROUTINE TO SEE IF JOB IS RUNNING WHEN COMMAND REQUIRING FIP IS ISSUED.
@@ -529,8 +525,7 @@
 	JMP I CLRPV0	/THEN RETURN
 
 CLRPV1,	-JSPRIV-1
-
-/
+/
 /THIS HANDLES THE 'PROTECT' COMMAND. WE ALTER
 /THE PROTECTION CODE OF A FILE; THIS ALSO
 /ALTERS THE FILE EXTENSION.
@@ -586,7 +581,6 @@
 	CIF
 	JMP I .+1	/OFF TO FIELD 0 FOR BOOTSTRAP
 	RELOAD
-
 	SIERR
 	JMP I IOTEND	/GOOD RETURN FROM FIP
 CLOSE,	NUMBIN		/GET THE INTERNAL FILE INDEX
@@ -613,7 +607,6 @@
 	JMP I SHTIOT
 
 ASSIND,	"A;"S;"S;"I;"G;"N;"E;"D;0
-
 	PAGE
 
 CSWAP,	FSWP+SI
@@ -699,8 +692,7 @@
 	USERM+2
 	OPEN
 	AUTOR
-
-/WE COME HERE TO SET THE PARAMETERS FOR FIP AND START THE
+/WE COME HERE TO SET THE PARAMETERS FOR FIP AND START THE
 /DISC ACCESS TO SWAP FIP IN. FIP IS THEN STARTED WHEN
 /THE OVERLAY IS COMPLETE.
 
@@ -747,8 +739,7 @@
 	0
 	OVERLA
 	0
-
-/'OFFLINE' COMMAND - RESTRICTS NEW LOGINS TO MANAGERS.
+/'OFFLINE' COMMAND - RESTRICTS NEW LOGINS TO MANAGERS.
 /CAN ONLY BE USED BY SYSTEM MANAGER (ACCOUNT # 000X)
 /** MUST ** BE IN EFFECT FOR MANAGER #1 TO LOGIN!
 /THIS EFFECTIVELY REQUIRES 2 PASSWORDS FOR ACCOUNT 1.
@@ -768,7 +759,6 @@
 
 OFFJOB,	F1OFFJ		/POINTER TO LOGIN ACCOUNT-MASK
 ON1=	CALFI1
-
 	PAGE
 
 COMCRF,	PRCRLF
@@ -887,7 +877,6 @@
 JOBNO,	"J;"O;"B;" ;0
 TALKM3,	":;" ;0
 WHERAC,	" ;"A;"C;"=;0
-
 	PAGE
 
 /WE GET HERE WHEN THE LAST CHARACTER OF A COMMAND HAS BEEN REACHED.
@@ -986,8 +975,7 @@
 	SPA CLA		/IS IT SET?
 	ISZ JOBATV	/YES - SKIP NEXT INSTRUCTION
 	JMP I JOBATV
-
-/
+/
 /END-CODE FOR 'ASSIGN'.
 ASSIG9,	ASCOUT		/TELL USER WHAT HE GOT
 	 CRLF
@@ -1036,7 +1024,6 @@
 ASSBUF,	0
 	240
 	0
-
 	PAGE
 
 /GET A TEXT STRING
@@ -1082,8 +1069,7 @@
 	CLA CMA
 	TAD IX1		/NOW RETURN WITH AC = END OF STRING BUFFER
 	JMP I CTEXT
-
-/SUBROUTINE TO CONVERT THE CHARACTER IN THE AC TO UPPER-CASE.
+/SUBROUTINE TO CONVERT THE CHARACTER IN THE AC TO UPPER-CASE.
 
 FIXLC,	0
 	DCA CHAR	/SAVE THE CHARACTER
@@ -1125,8 +1111,7 @@
 	JMP SKIPS1	/YES - IGNORE IT
 	ISZ SKIPS
 	JMP I SKIPS
-
-/GET A CHARACTER FROM COMMAND STRING
+/GET A CHARACTER FROM COMMAND STRING
 /CALL	COMGET	(AC=0 FOR NON-DESTRUCTIVE READ)
 /	NONE
 /	RETURN WITH CHARACTER IN 'CHAR' & AC
@@ -1179,8 +1164,7 @@
 	TAD CHAR	/ AND RETURN WITH IT
 	CHDF
 	JMP I COMGE0
-
-/GET A FREE BLOCK AND RETURN ITS ADDRESS
+/GET A FREE BLOCK AND RETURN ITS ADDRESS
 /CALL	TAD FIELD 0 LINK
 /	GETFBL
 /	NONE AVAILABLE
@@ -1198,7 +1182,6 @@
 	CHDF
 	ISZ GETFB0
 	JMP I GETFB0
-
 	PAGE
 
 /NUMBER INPUT
@@ -1212,7 +1195,7 @@
 NUMB17,	17
 NUMCNT,	0	/DIGIT COUNT
 NUMCOM,	" -",
-/	IFNZRO NUMOCT-NUMDEC-10	<GLITCH>
+	IFNZRO NUMOCT-NUMDEC-10	<GLITCH>
 NUMDIF=	C0010	/NUMOCT-NUMDEC
 NUMDSP,	JMP NUMDEC
 NUMINU,	"+-"-
@@ -1312,8 +1295,7 @@
 	CIA		/YES - NEGATE IT
 NUMBI4,	ISZ NUMBI0
 	JMP I NUMBI0
-
-/OUTPUT ASCII MESSAGE
+/OUTPUT ASCII MESSAGE
 /CALL	TAD ADDR OF DDB OR 0 IF RESPONSE DDB
 /	ASCOUT
 /	POINTER TO MESSAGE (TERMINATED BY 0)
@@ -1345,7 +1327,6 @@
 
 WHERMQ,	" ;"M;"Q;"=;0
 WHERSC,	" ;"S;"C;"=;0
-
 	PAGE
 
 /GET JOB TABLE ADDRESS
@@ -1392,8 +1373,7 @@
 	 FSWP+SI+CJOB
 	CLA
 	JMP I CORSER
-
-/GET RESPONSE DDB ADDRESS
+/GET RESPONSE DDB ADDRESS
 /CALL	RESDDB
 /	ADDR IN AC AND COMRDB
 
@@ -1429,8 +1409,7 @@
 	DCA I COMCNT
 	CHDF
 	JMP I DECRC0
-
-/DELETE BUFFER TO CURRRENT POINTER
+/DELETE BUFFER TO CURRRENT POINTER
 /CALL	JMS BUFDEL
 /	RETURN
 
@@ -1493,7 +1472,6 @@
 BUFDE5,	CHDF
 	JMP I BUFDE0	/THEN RETURN
 
-
 /ASCII TO SIXBIT CONVERT
 /CALL	ASCSIX
 /	 SOURCE-1	(TERMINATED BY 0)
@@ -1535,7 +1513,6 @@
 	DATFLD
 	DCA I CHDFA	/STORE THE IOT
 	CALFIP		/ AND OFF TO FIP
-
 	PAGE
 /TEST FOR END OF COMMAND STRING
 /CALL	ENDTST	WITH CHARACTER IN CHAR
@@ -1709,7 +1686,6 @@
 HASITM,	" ;"H;"A;"S;" ;0
 BELMSG,	207;207;0
 PERIOD,	".;0
-
 	PAGE
 /RETURN PARAMETERS
 /CALL	RETPAR
@@ -1737,8 +1713,7 @@
 	DCA I IOTP7	/JOBLNK:=0
 	CHDF
 	JMP I RETPA0
-
-/RESTORE BUFFER POINTERS
+/RESTORE BUFFER POINTERS
 /CALL	JMS RESTBP
 /	RETURN
 
@@ -1832,8 +1807,7 @@
 
 ACC1=	RESTBP
 ACCOMA,	-",
-
-/ROUTINE TO TYPE A MESSAGE ON EVERYBODY'S CONSOLE AT ONCE
+/ROUTINE TO TYPE A MESSAGE ON EVERYBODY'S CONSOLE AT ONCE
 /THE USER MUST BE LOGGED-IN ON A SYSTEM ACCOUNT.
 
 BROAD,	CHKACT		/CHECK THE TYPE OF USER
@@ -1886,7 +1860,6 @@
 
 BROLN,	-BRDMAX-1	/ONLY BROADCAST TO EXISTING TTY'S
 BROTAK,	TALK5
-
 	PAGE
 /
 /HANDLER FOR THE 'LOGIN' COMMAND - WE PICK UP THE ACCOUNT
@@ -2041,7 +2014,6 @@
 LOGME4,	LOGE4-LOGE5
 LOGME5,	LOGE5
 LOGMIN,	-STOMIN	/MINIMUM FREE STORAGE FOR NEW JOB
-
 	PAGE
 /
 /COMPLETION OF THE 'PRE-FIP' LOGIN HANDLING
@@ -2082,8 +2054,7 @@
 LOGPMA,	 0		/DEST ADDR
 	 -10		/-COUNT
 	CALFIP		/GO CHECK HIS ACCOUNT # AND PASSWORD
-
-/
+/
 /ERROR RETURN FROM LOGIN IOT IN FIP - UNDO ALL OUR TABLES
 LOGINE,	JMS LOGIE0
 	SIERR
@@ -2187,7 +2158,6 @@
 	JMP I COMERA
 	DCA IOTP2	/ AND THE NUMBER OF SEGMENTS TO ADD/DELETE
 	JMP I LNGIOT	/THEN OFF TO FIP
-
 	PAGE
 
 ASSTBL,	.
@@ -2328,7 +2298,6 @@
 
 SPACES,	240;240;240
 SPACE,	240;0
-
 	PAGE
 
 	SIERR
@@ -2479,7 +2448,6 @@
 DTJOBA,	DTJOB
 DTSTP,	F1DTST
 RKJOBA,	RKJOB
-
 	PAGE
 
 STBITS,	-JSRUN-JSHLT-JSINER-7-1
@@ -2548,8 +2516,7 @@
 	0	/DEVICE STATUS
 	JSWAIT	/WAIT MASK 1
 	0	/DEVICE WAIT MASK
-
-/  SOMEDAY 8/E VERSION SHOULD PRINT OUT EAE MODE AS A OR B
+/  SOMEDAY 8/E VERSION SHOULD PRINT OUT EAE MODE AS A OR B
 /	AND ALSO THE GT FLAG.  FOR NOW MODE IS BIT 0 OF SC.
 /	0-MODE A AND 1-MODE B.
 /
@@ -2627,7 +2594,6 @@
 	 COMBUF-1
 	 IOTP2-1
 	JMP I LNGIOT	/THEN OFF TO FIP
-
 	PAGE
 /
 /ROUTINE TO FORCE A STRING INTO AN INPUT BUFFER
@@ -2748,7 +2714,6 @@
 	4164	/AT
 
 LOGE5,	"P;"R;"E;"C;"E;"D;"E;" ;"L;"O;"G;"I;"N;" ;"B;"Y;" ;"^;"B;0
-
 	PAGE
 
 /THIS HANDLES THE 'F' COMMAND - WE PRINT OUT SOME
@@ -2819,8 +2784,7 @@
 FSIXAS,	SIXASC
 FMSG,	3465; 4644; 3600	/ "<UFD>" IN SIX-BIT
 FXMSG,	"X;" ;0
-
-/'USER' COMMAND - WE TYPE OUT THIS (OR ANY) JOB'S
+/'USER' COMMAND - WE TYPE OUT THIS (OR ANY) JOB'S
 /JOB NUMBER AND ITS KEYBOARD NUMBER.
 
 USEJOB=	FOUT
@@ -2888,7 +2852,6 @@
 	 COMBUF+2
 	NOP
 	JMP I USRPR
-
 	PAGE
 
 /THIS CODE HANDLES THE 'R' AND 'RUN' COMMANDS.
@@ -2996,8 +2959,7 @@
 RRFILE,	RFILE
 RLOAD4,	LOAD4
 RLSA,	RLS
-
-/'SYSTAT' COMMAND - SAME AS TYPING 'R SYSTAT'.
+/'SYSTAT' COMMAND - SAME AS TYPING 'R SYSTAT'.
 
 	JMP RERR
 	JMP R1
@@ -3065,7 +3027,6 @@
 
 ODT1,	TAD C7000	/GET 'ODTHI'S START-ADDRESS
 	JMP R1		/ AND START IT
-
 	PAGE
 /THIS HANDLES THE 'SAVE' COMMAND; NOTE THAT THIS COMMAND
 /SHARES MUCH OF THE 'LOAD' COMMAND HANDLER.
@@ -3166,8 +3127,7 @@
 	0	/ (-) WORD COUNT
 	OVERLA
 	READFI
-
-/SUBROUTINE CALLED BY "R", "RUN", "LOAD", & "SAVE" TO
+/SUBROUTINE CALLED BY "R", "RUN", "LOAD", & "SAVE" TO
 /SET UP THE FILE TRANSFER BLOCK POINTED TO BY 'JOBLNK'.
 
 RETTMP,
@@ -3228,7 +3188,6 @@
 	JMP I RETBK0	/YES - RETURN
 	RETDBL		/NO - RETURN THE BLOCK
 	JMP .-3		/ AND CHECK AGAIN
-
 	PAGE
 
 C7766,	7766
@@ -3321,8 +3280,7 @@
 DEDEA,	 0	/TO ADDR
 DECNT,	 0	/-COUNT
 	JMP I DEMOVE
-
-EXAMIN,	NUMBIN		/STARTING ADDRESS
+EXAMIN,	NUMBIN		/STARTING ADDRESS
 	 -"7
 	JMP I COMERA
 	DCA IOTP5
@@ -3363,7 +3321,6 @@
 	JMP I EXAM1A
 
 FORJOB,	" ;"F;"O;"R;" ;"J;"O;"B;" ;0
-
 	PAGE
 /THIS HANDLES THE 'SWITCH', 'RESTART', & 'BREAK' COMMANDS.
 /THEY SET THE REGISTERS OR, IF NO PARAMETER IS GIVEN, THEY
@@ -3411,8 +3368,7 @@
 
 WHERLK,	" ;"L;"=;0
 WHERSW,	" ;"S;"W;"=;0
-
-/THIS HANDLES THE 'TALK' COMMAND. "TALK NN ...MSG..."
+/THIS HANDLES THE 'TALK' COMMAND. "TALK NN ...MSG..."
 /CAUSES THE MESSAGE '...MSG...' TO BE SENT TO KEYBOARD 'NN'.
 
 	IFNZRO DTALK-1	<GLITCH>
@@ -3505,7 +3461,6 @@
 
 C0140,	140
 TALKMX,	-TLKMAX-1	/(-) FIRST ILLEGAL KEYBOARD
-
 	PAGE
 
 CLK1A,	CLK1
@@ -3563,8 +3518,7 @@
 	TAD TICLK2
 	CHDF
 	JMP TIME4
-
-/ROUTINE TO CONVERT VALUE IN NUMHO AND NUMHO+1 (IN TICKS)
+/ROUTINE TO CONVERT VALUE IN NUMHO AND NUMHO+1 (IN TICKS)
 /TO HOURS, MINUTES AND SECONDS. 
 /THE RESULT IS STORED IN COMBUF AS HH:MM:SS
 
@@ -3643,7 +3597,6 @@
 QQEST,	"?
 QEST,	"?;0
 WHERPC,	"P;"C;"=;0
-
 	PAGE
 /'SEGS' COMMAND - TYPE THE NUMBER OF FREE DISC SEGMENTS
 
@@ -3664,8 +3617,7 @@
 	JMP I COMEXA	/THEN EXIT
 /
 SEGCNT,	NFSEGS
-
-/ROUTINE TO CONVERT CONTENTS OF AC INTO DECIMAL ASCII
+/ROUTINE TO CONVERT CONTENTS OF AC INTO DECIMAL ASCII
 /CALL:	TAD (VALUE)
 /	JMS I (DECOUT
 /	 BUFFER-1
@@ -3713,8 +3665,7 @@
 	-1750	/1000
 	-144	/100
 	-12	/10
-
-/ROUTINE TO SET UP 'JOBDAT' FOR DIFFERENT JOB NUMBERS
+/ROUTINE TO SET UP 'JOBDAT' FOR DIFFERENT JOB NUMBERS
 
 DECPRT,
 SETJB0,	0
@@ -3739,16 +3690,14 @@
 SETJB1,	DCA I JOBDAT
 	CHDF
 	JMP I SETJB0	/RETURN
-
-COMLGM,	"L;"O;"G;"I;"N;240;"P;"L;"E;"A;"S;"E;0
+COMLGM,	"L;"O;"G;"I;"N;240;"P;"L;"E;"A;"S;"E;0
 UNACCT,	"U;"N;"A;"U;"T;"H;"O;"R;"I;"Z;"E;"D;240
 	"A;"C;"C;"O;"U;"N;"T
 CRLF,	215
 LINE,	212
 	0
 ILLREQ,	"I;"L;"L;"E;"G;"A;"L;240;"R;"E;"Q;"U;"E;"S;"T;0
-
-/
+/
 /COMMAND BUFFER AND ASCII OUTPUT BUFFER
 	0
 COMBUF,	0
@@ -3910,8 +3859,7 @@
 	-"A
 	-"V
 	-"E
-
-CL18,	CL19			/LOAD O1 S1 O2 O3 O4;
+CL18,	CL19			/LOAD O1 S1 O2 O3 O4;
 	USAVE+UREST+USERM+2
 	OPEN
 	LOAD
@@ -3970,8 +3918,7 @@
 	-"L
 	-"E
 	-"X
-
-CL32,	CL33		/R S1
+CL32,	CL33		/R S1
 	USERM+2		/S1=FILE NAME
 	OPEN
 	R
@@ -4110,8 +4057,7 @@
 	-"E
 	-"G
 	-"S
-
-CL48,	CL49		/HALF-DUPLEX HARDWARE (IGNORE 'DUP' IOTS)
+CL48,	CL49		/HALF-DUPLEX HARDWARE (IGNORE 'DUP' IOTS)
 	0
 	0
 	SETH
@@ -4144,8 +4090,7 @@
 	-"T
 	-"Q
 CL52,	0
-
-NONSUC,	"N;"O;"T;" ;"A;"V;"A;"I;"L;"A;"B;"L;"E;0
+NONSUC,	"N;"O;"T;" ;"A;"V;"A;"I;"L;"A;"B;"L;"E;0
 
 SYBCLR,	SICLR
 SYJSER,	-JSERR-1
@@ -4264,8 +4209,7 @@
 SYSET3,	"S;"W;"A;"P;" ;"E;"R;"R;"O;"R;0
 SYSET5,	"D;"I;"S;"C;" ;"E;"R;"R;"O;"R;0
 SYSET6,	"H;"U;"N;"G;" ;"D;"E;"V;"I;"C;"E;0
-
-/RETURN FOR FILE COMMANDS
+/RETURN FOR FILE COMMANDS
 
 FIPEND,	GETWRD
 	 JOBREG+2
@@ -4378,15 +4322,14 @@
 VERSIM,	215;212;"U;"W;"M;"';"S;" ;"T;"S;"S;"-
 	IFNZRO CPU-3  <
 	"8
-		IFZERO CPU	<257;"I>   / "/;"I
-		IFZERO CPU-2	<257;"E>   / "/;"E
-		IFZERO CPU-4	<257;"A>   / "/;"A
+		IFZERO CPU	<"/;"I>
+		IFZERO CPU-2	<"/;"E>
+		IFZERO CPU-4	<"/;"A>
 	>
 	IFZERO CPU-3  <"1;"2>
 	".;"0+VERDG1;"0+VERDG2
 	" ;" ;" ;0
-
-VERBRK=	-130	/SPACE FOR 'BROADCAST' TEXT (87 CHARACTERS)
+VERBRK=	-130	/SPACE FOR 'BROADCAST' TEXT (87 CHARACTERS)
 	IFNZRO VERBRK-.&4000	<GLITCH>
 	*VERBRK
 /NOTE THAT THE 'VERBRK' BUFFER CAN OVERLAY
@@ -4402,7 +4345,6 @@
 FM5000,	"D;"I;"R;"E;"C;"T;"O;"R;"Y;" ;"F;"U;"L;"L;0
 FM6400,	"B;"A;"D;" ;"F;"I;"L;"E;"N;"A;"M;"E;0
 FM7400,	"D;"I;"S;"C;" ;"F;"U;"L;"L;0
-
 	IFNZRO 7745-.&4000	<GLITCH>
 	*7745
 /

--- TS8.PA	2014-01-26 13:41:01.268725395 -0500
+++ orig2/TS8.PA	2014-01-26 13:35:18.083138832 -0500
@@ -125,8 +125,7 @@
 C7600,	7600
 C7770,	7770
 C7776,	7776
-
-/SUBROUTINE DISPATCHES
+/SUBROUTINE DISPATCHES
 BLT=	JMS I .
 	BLT0	/BLOCK TRANSFER
 BREAK=	JMS I .
@@ -200,7 +199,6 @@
 CONGEA,	CONGET
 CONO1A,	CONOU1
 CONSEA,	CONSET
-
 	PAGE
 /PRIORITY LEVEL 0 (HIGHEST PRIORITY)
 /KEEPS TRACK OF REAL TIME
@@ -239,8 +237,7 @@
 CLKIN1,	-33	/DIVIDE CLOCK RATE BY 27 & 28 SO THE
 CLKIN2,	-34	/ EFFECTIVE RATE IS 550/27.5 = 20 TICKS/SEC
 	>
-
-/INTERRUPTS OTHER THAN 680 (LEVEL 1)
+/INTERRUPTS OTHER THAN 680 (LEVEL 1)
 /DISMISSES TO LEVEL 2 IF NOT FROM LEVEL 1 OR 2.
 
 INTAC,	0		/AC AT LEVEL 1
@@ -356,8 +353,7 @@
 F1RTN,	JMP I DTCHK	/ (DEVICE HANDLERS RETURN HERE)
 
 /*F1RTN		/RETURN FROM FIELD 1 INTERRUPT HANDLERS
-
-/DISMIS ROUTINE
+/DISMIS ROUTINE
 /ENTERED FROM INTERRUPT HANDLER TO ENTER LEVEL 2 FROM LEVEL 1
 /AC = ADDRESS OF LEVEL 2 SERVICE ROUTINE
 /OR 0 IF NO LEVEL 2 SERVICE REQUIRED
@@ -418,8 +414,7 @@
 	RUNABL		/JOB STILL RUNNABLE?
 	WAIT		/NO - RESCHEDULE
 	EXIT		/YES - EXIT
-
-/
+/
 /RETURN CONTENT OF STATUS WORD IN AC
 /CALL:	TAD POINTER TO JOB-STATUS BLOCK
 /	GETJTI
@@ -440,7 +435,6 @@
 	CDF
 	ISZ GETJI0
 	JMP I GETJI0	/ AND RETURN
-
 	IFNZRO .-400&4000	<PAGE>
 /STORE  CHARACTER  (ENTER AND EXIT WITH 'DATFLD' SET)
 /CALL WITH ADDRESS OF DDB IN AC, CHARACTER IN TTCHAR
@@ -538,8 +532,7 @@
 GIRSCT,	0
 GIRSIZ,	-12	/10 (DECIMAL) CHARACTERS/BLOCK
 GIRST,	0
-
-/DECTAPE HANDLER CODE
+/DECTAPE HANDLER CODE
 /FOR DISC TRANSFERS TO OR FROM USER SWAP AREA
 /AND FOR ALL LEVEL-2 COMPLETION.
 
@@ -602,7 +595,6 @@
 /DISC COMPLETION DISPATCHER FOR SYSTEMIC OVERLAYS.
 OVRLA1,	JMS I FIUSER
 	WAIT
-
 	PAGE
 
 /RETURN TTY BUFFER TO FREE LIST
@@ -750,8 +742,7 @@
 	IFNZRO JSERR-2	<GLITCH; *.-1>
 SUJERR=	C0002	/JSERR
 SUJUDF,	UDFSET
-
-/IF THE USER EXECUTES A FLAG TEST IOT (EG KSF, TSF, ETC.)
+/IF THE USER EXECUTES A FLAG TEST IOT (EG KSF, TSF, ETC.)
 /THEN IT IS USEFUL TO KNOW IF HE IS IN A "WAIT LOOP"
 /(I.E. KSF; JMP .-1) OR IF HE IS JUST CHECKING TO SEE
 /IF THERE IS ANYTHING WORTH LOOKING AT.  IN THE FORMER
@@ -780,7 +771,6 @@
 
 CP0177,	177
 C5200,	5200
-
 	PAGE
 /
 /PAPER TAPE READER SERVICE FOR TSS/8
@@ -822,8 +812,7 @@
 	TAD I PTRDEV	/CLEAR THE ENTIRE READER BUFFER
 	CLRBUF
 	UUOEXT
-
-PSTWT0,	STA
+PSTWT0,	STA
 L2PTR1,	DCA PTRSET	/REMEMBER WHY WE ARE HERE
 	CDF CIF		/SELECT F0 AND INHIBIT IMTERRUPTS
 	TAD I PTRTIM	/IS THE READER BUSY
@@ -862,8 +851,7 @@
 	SMA CLA
 PTRSI2,	JMS PTRSET	/SET THE READER FLAG IN STR1
 	JMP I PTRSIZ
-
-L2PTR,	JMS PTRSET	/WAKE HIM UP - HE'S HUNG
+L2PTR,	JMS PTRSET	/WAKE HIM UP - HE'S HUNG
 	TAD I PTRDEV
 	SNA		/STILL HAVE A DDB?
 	EXIT		/NO
@@ -1018,8 +1006,7 @@
 OUTLIM,	25
 LPTSIZ,	-DEVTBE-3
 OUTOFF,	-OUTDIF
-
-/SEARCH FOR JOB IN CORE
+/SEARCH FOR JOB IN CORE
 /CALL	TAD JOB #
 /	CORE
 /	 MASK
@@ -1082,7 +1069,6 @@
 CORSR2,	0
 CORSR4,	0
 CORTBP,	CORTBL	/PERMANENT "ROUND-ROBIN" POINTER
-
 	PAGE
 /*GETB		/GET A FREE-BLOCK
 /GET A BUFFER FROM FREE LIST
@@ -1125,8 +1111,7 @@
 GETB1,	CLA CLL
 GETB2,	0		/YES - RESET THE FIELD
 	JMP I GETB	/ AND RETURN
-
-/GET A DATA BLOCK
+/GET A DATA BLOCK
 /CALL	TAD LINK
 /	GETDDB
 /	NONE AVAILABLE
@@ -1225,8 +1210,7 @@
 TIMCOA,	TIMCON
 TTIMEB,	TTIMER
 TTOFLC,	TTOFLG
-
-/SET KEYBOARD BREAK-MASK OR RETURN CURRENT MASK
+/SET KEYBOARD BREAK-MASK OR RETURN CURRENT MASK
 
 	IFNZRO DDBBRK-2	<GLITCH; *.-1>
 UKSBRK=	C0002	/DDBBRK
@@ -1283,7 +1267,6 @@
 UKSB1,	DCA I JOBSWA	/ AND SAVE IN THE JOB DATA AREA
 UKSB2,	DCA L2SA	/THEN CLEAR HIS AC
 	UUOEXT		/ AND EXIT
-
 	PAGE
 
 /HANDLER FOR THE NONSTANDARD CHARACTER INPUT DEVICES.
@@ -1444,8 +1427,7 @@
 	UUOEXT
 
 CMDUPL,	-DUPL-1
-
-PAGE
+	PAGE
 /
 /SINGLE INSTRUCTION NULL-JOB - AC INCREMENTED WHEN SCHEDULED.
 NULJOB,	JMP .
@@ -1563,8 +1545,7 @@
 	TAD CONNSF
 	JMS I SETFLG	/ AND SET THE 'STR1' FLAG
 	JMP CONIN2
-
-/CLEAR BUFFER
+/CLEAR BUFFER
 /CALL	TAD DDB ADDRESS
 /	CLRBUF
 /	RETURN	('DATFLD' SET)
@@ -1597,7 +1578,6 @@
 	JMP I CLRBF0	/ AND RETURN
 
 CLRBU1,	0
-
 	PAGE
 
 /HANDLER FOR NONSTANDARD CHARACTER OUTPUT DEVICES.
@@ -1746,8 +1726,7 @@
 	ISZ UKT1
 	CLL RAR
 	JMP I UKT1	/INDEX RETURN
-
-/*SLEEP		/PUT THE JOB TO SLEEP
+/*SLEEP		/PUT THE JOB TO SLEEP
 /WE GOT A 'DRL' ERROR ON THE DISC - ASSUME IT WAS THE
 /ACTIVE JOB DOING 'EAE' STUFF AND PUT IT TO SLEEP.
 
@@ -1888,8 +1867,7 @@
 UUOT1A,	UUOT1E
 UUOT2A,	UUOT2E
 UUOUDF,	UDFSET
-
-/THIS ROUTINE COPIES THE PARAMETERS SUPPLIED BY THE
+/THIS ROUTINE COPIES THE PARAMETERS SUPPLIED BY THE
 /USER PROGRAM INTO *BLOCK IN FREE CORE, WHICH IS POINTED
 /TO BY JOBLNK.
 /THE IOT ITSELF IS SAVED IN THE FIRST WORD OF THE PARAMETER BLOCK
@@ -1936,7 +1914,6 @@
 	DCA I UUOLNK	/AND SAVE IT IN APPROPRIATE PLACE
 	CDF
 	JMP I GETUSP	/RETURN
-
 	PAGE
 
 /LEVEL-2 CLOCK HANDLER:
@@ -2000,8 +1977,7 @@
 CLKTMR,	CLKMIS
 	>
 TIMERA,	TIMER0
-
-/SCHEDULE NEXT RESIDENT JOB
+/SCHEDULE NEXT RESIDENT JOB
 /THIS IS THE ENTRY FOR "SCHED"
 /WE ONLY COME HERE AFTER FINDING THE JOB WE REALLY
 /WANT TO RUN IS CURRENTLY INDISPOSED TO RUNNING. SCHED
@@ -2104,7 +2080,6 @@
 NXTFAN,	JSIOT+7
 NXTFLD,	-CORTBL+1
 NXTMSK,	FSWP+LOCK+FIP+SI
-
 	PAGE
 
 	IFNZRO JSIOT-100	<GLITCH; *.-1>
@@ -2257,7 +2232,6 @@
 SCHSWP=	CLA CLL CML RAR	/AC=4000
 SCSWAP,	SWAPIN
 SUJT2=	WS0
-
 	PAGE
 /ROUTINE TO RECOGNIZE AND REPLY TO ^C
 /CALLED ONLY FROM 'GIR':
@@ -2364,8 +2338,7 @@
 GIRECH,	DECHO
 	IFNZRO SICOM-100	<GLITCH; *.-1>
 GIRSCM=	C0100
-
-/COMBINED RESIDENT IOTS
+/COMBINED RESIDENT IOTS
 
 P=	4000	/PRIVILEGE REQUIRED
 L=	2000	/LONG 'FIP' IOT (PARAMETER PACKET RETURNED)
@@ -2615,7 +2588,6 @@
 	SZL CLA		/IS IT NOW -1?
 	JMS I FIUSER	/NO - START THE NEXT TRANSFER
 	JMP I DSKCON	/YES - THEN THERE IS NO MORE
-
 	IFZERO CPU-3 <
 DC02EN,	0			/THIS SUBROUTINE ENABLES ALL STATIONS AND ALL GROUPS
 	CLA CMA
@@ -2708,7 +2680,6 @@
 KTBUF,	0
 DC0220,	20			/GROUP STARTER UPPER
 	>
-
 	PAGE
 /TSS/8 CRASH-RECOVERY BOOTSTRAP
 /WE JUST LOAD 'INIT' AND START IT.
@@ -2756,8 +2727,7 @@
 	IFZERO RF08-40 <
 BTFLD,	200+INFLD	/FIELD & TRACK
 	>
-
-/THIS CODE RE-STARTS THE CLOCK & ALLOWS THE CONTINUATION
+/THIS CODE RE-STARTS THE CLOCK & ALLOWS THE CONTINUATION
 /OF A SYSTEM THAT WAS STOPPED IN 'NULJOB'.
 
 CONTIN,
@@ -2966,7 +2936,6 @@
 	TAD UDFCDF	/ & FORM A CDF INSTR.
 	DCA UUDF
 	JMP I UDFSET
-
 	PAGE
 /QUEUE DISC REQUEST
 /CALL	TAD ADDRESS OF TRANSFER BLOCK
@@ -3003,8 +2972,7 @@
 	DATFLD
 	DCA I JOBSWA
 	JMP I COMBND	/THEN RETURN
-
-/RETURN CONTENT OF JOB STATUS FOR CURRENT JOB
+/RETURN CONTENT OF JOB STATUS FOR CURRENT JOB
 /CALL:	GETJTW
 /	 RELATIVE ADDRESS OF WORD
 /	RETURN (VALUE IN AC, ADDRESS IN 'JOBSWA')
@@ -3019,8 +2987,7 @@
 	 0
 	ISZ GETJW0	/SKIP PAST THE PARAMETER
 	JMP I GETJW0	/ AND RETURN
-
-/*L2EXIT	/LEVEL-2 EXIT ROUTINE
+/*L2EXIT	/LEVEL-2 EXIT ROUTINE
 /LEVEL-2 EXIT ROUTINE -- WE CHECK THE KEYBOARD INPUTS,
 /THEY HAVE TO BE HIGHEST PRIORITY; THEN WE CHECK FOR
 /ANYTHING ELSE ON THE LEVEL-2 QUEUE.  IF WE'RE ALL CAUGHT
@@ -3132,7 +3099,6 @@
 	TAD L2SV0	/BACK UP HIS PC
 	DCA L2SV0
 	WAIT		/ AND RESCHEDULE
-
 	PAGE
 	IFNZRO .-4200	<GLITCH; *.-1>
 
@@ -3187,8 +3153,7 @@
 	DCA L2SVLK	/ AND SAVE HIS LINK
 	UUOEXT
 	>
-
-/HANDLER FOR THE 'HLT' AND 'OSR' INSTRUCTIONS
+/HANDLER FOR THE 'HLT' AND 'OSR' INSTRUCTIONS
 /
 UHALSA,	L2SA
 
@@ -3243,8 +3208,7 @@
 
 UHBITS,	-JSRUN-JSHLT-JSINER-1
 UJSHLT,	JSHLT
-
-/SET BUFFER CONTROL FLAGS
+/SET BUFFER CONTROL FLAGS
 
 USBCSI,	CHKSI
 	IFNZRO DFULL-400	<GLITCH; *.-1>
@@ -3305,7 +3269,6 @@
 	SNA CLA		/IF ANY ONE WAS BUSY, AC .NE. 0
 	ISZ DSKACT	/NOPE - INDEX RETURN
 	JMP I DSKACT
-
 	PAGE
 
 /ROUTINE USED BY 'SI' AND 'FIP' TO CLEAR DEVICE BUFFERS.
@@ -3372,8 +3335,7 @@
 	SCHED
 
 SCHREM,	REMJOB
-
-FILERC,	0		/ROUTINE TO RECOVER FROM DISC ERRORS
+FILERC,	0		/ROUTINE TO RECOVER FROM DISC ERRORS
 FILUSA,	0		/AND SET ERROR CODES FOR USER
 FILEWC,	0		/ERROR CODES ARE:
 FILER1=	WS2		/	1  PARITY
@@ -3475,7 +3437,6 @@
 	TAD FILERC
 	DCA I FILUSA	/PASS THE ERROR CODE ON TO USER
 	JMP FILER3	/AND BACK
-
 	PAGE
 
 /RFILE AND WFILE IOTS
@@ -3622,7 +3583,6 @@
 UFIGJF,	GETJFX
 UFIQUE,	DSQUE
 UFJSPV,	JSPRIV
-
 	PAGE
 
 /RETURN NUMBER OF NEXT RUNABLE JOB IN AC.
@@ -3669,8 +3629,7 @@
 	JMP NXTJ1	/NO, CONTINUE JOB TABLE ROUND ROBIN
 	TAD NXTJBN	/YES, RETURN WITH JOB NO. IN AC
 	JMP I NXTJOB
-
-/CONSTRUCT TRANSFER BLOCK
+/CONSTRUCT TRANSFER BLOCK
 /CALL	TAD SEGMENT WINDOW POINTER
 /	JMS FILCTB
 /	POINTER TO FILPAR
@@ -3777,7 +3736,6 @@
 	JMP I FILCTB	/RETURN
 
 FIBAS1,	SWDEX+JOBMAX
-
 	PAGE
 /BLOCK TRANSFER
 /CALL	BLT
@@ -3819,8 +3777,7 @@
 	JMP BLT1	/NO
 BLTF,	0		/RETURN
 	JMP I BLT0
-
-/TEST JOB FOR RUNABILITY
+/TEST JOB FOR RUNABILITY
 /CALL	TAD JOB #
 /	RUNABL
 /	 NOT RUNNABLE
@@ -3865,8 +3822,7 @@
 RUNTS3,	ISZ RUNTST	/YES - HE'S RUNNABLE
 RUNTS4,	CDF
 	JMP I RUNTST
-
-/SET SYSTEM ERROR CODE
+/SET SYSTEM ERROR CODE
 /CALL	TAD JOB #
 /	ERROR
 /	 ERROR CODE
@@ -3910,8 +3866,7 @@
 ICDPTR,	RINT
 ICDL2,	CDL20
 ICDTIM,	TIMCDR
-
-/
+/
 /BLOCK-FULL SIZE-CHECKING ROUTINE FOR GIR INPUT.
 
 GIRLIM,	0
@@ -3947,7 +3902,6 @@
 GIRLMP=	BLT1
 GIROFF,	-70
 GIRTYP,	TYPE
-
 	PAGE
 
 /RETURN FILE WINDOW INDEX
@@ -4023,8 +3977,7 @@
 
 FILISN,	0
 FILICN,	0
-
-/RETURN USER RUN TIME
+/RETURN USER RUN TIME
 /USER CALLS WITH ADDRESS OF THREE WORD BLOCK
 /WORD 1 CONTAINS THE JOB #
 /THE HI AND LO ORDER RUN TIMES ARE RETURNED IN WORDS 2 AND 3
@@ -4073,8 +4026,7 @@
 
 /*NFSEGS	/NUMBER OF FREE DISC SEGMENTS
 NFSEGS,	7777	/ (UPDATED BY 'FIP')
-
-/RETURN THE USER'S STATUS REGISTERS
+/RETURN THE USER'S STATUS REGISTERS
 /CALLED WITH ADDRESS OF THREE WORD BLOCK IN AC
 
 UCKS,	GETJTW
@@ -4125,7 +4077,6 @@
 	TAD I DEVJO0	/GET WORD 1
 	AND C0037	/IGNORE JUNK
 	JMP I DEVJOB	/RETURN
-
 	PAGE
 
 /WE ENTER THIS ROUTINE AT LEVEL 2
@@ -4256,8 +4207,7 @@
 	JMP I DSURE4	/ AND RETURN
 
 DSHOLD,	NOTRUN+NOHOLD+CJOB
-
-DSUCOR,	0	/POINTER TO CORE TABLE ENTRY
+DSUCOR,	0	/POINTER TO CORE TABLE ENTRY
 DSUJST,	0	/POINTER TO JOB STATUS
 DSUJTE,	0	/JOB TABLE ENTRY
 
@@ -4299,8 +4249,7 @@
 	UUOEXT
 
 TTYTBB,	TTYTBL
-
-SWGOOD,	TAD CORTBA	/GET A POINTER TO THIS FIELD'S
+SWGOOD,	TAD CORTBA	/GET A POINTER TO THIS FIELD'S
 	TAD FINISH	/ ENTRY IN CORTBL
 	DCA SQREQ
 	TAD FIT		/JOB SWAPPED IN
@@ -4335,8 +4284,7 @@
 	IFNZRO SWPRER-2	<GLITCH; *.-1>
 SWERER=	C0002	/SWPRER
 	IFNZRO SWPWER-3	<GLITCH; *.-1>
-
-/SAVE JOB REGISTER
+/SAVE JOB REGISTER
 /THIS ROUTINE IS USED TO SAVE THE LEVEL 2 REGISTERS
 /IN THE JOB DATA AREA.  AFTER SAVING THIS
 /INFORMATION, JOB IS SET TO 0 TO INDICATE
@@ -4428,8 +4376,7 @@
 
 SAVJO4,	COMBND
 QUATIM,	-QUANT
-
-/ROUTINE TO SET UP SWAP
+/ROUTINE TO SET UP SWAP
 /CORTBL POINTER TO FIELD TO BE SWAPPED OUT IN WS0
 /FINISH= +FIELD # FOR SWAP IN ;FINISH= -FIELD# FOR SWAP OUT
 /FIT=JOB TO BE SWAPPED IN OR PHANTOM TO BE BROUGHT IN
@@ -4481,7 +4428,6 @@
 	JMP I TRAC	/RETURN
 
 SWBASE,	SWDEX-1		/SWAP TRACK OF JOB 1
-
 	PAGE
 /*GIR00		/GENERAL INPUT ROUTINE
 /GENERAL INPUT ROUTINE
@@ -4638,7 +4584,6 @@
 GIRSQA,	CONSQ
 MCC,	-203		/- ^C
 TYPEB,	TYPE
-
 	PAGE
 
 /SERVICE ALL AC TRANSFER OUTPUT DEVICES (TTY'S, HSP, LPT, ETC.)
@@ -4818,8 +4763,7 @@
 	DCA I WS0
 	JMP I .+1
 	CONOU2
-
-TOFA1,
+TOFA1,
 TTIME,	0
 	AND C1000
 C7740,	SZA SMA CLA	/SMA HERE TO MAKE CONSTANT
@@ -4856,8 +4800,7 @@
 	SPA CLA		/CALLED FROM INPUT OR OUTPUT HANDLER?
 	JMS I CONSEA	/SET OUTPUT FLAGS
 	JMP I TOFSET
-
-/RETRIEVE A CHARACTER FROM LINKED BUFFER
+/RETRIEVE A CHARACTER FROM LINKED BUFFER
 /CALL:	DDB ADDRESS IN AC
 /	JMS TOF
 /	RETURN BUFFER EMPTY
@@ -4943,7 +4886,6 @@
 
 TC7766,	7766
 TOFCLR,	CLSTR1
-
 	IFNZRO CORTBL-.&4000	<GLITCH; *.-1>
 	*CORTBL
 /*CORTBL	/CORE ALLOCATION TABLE (FIXED)
@@ -4981,8 +4923,7 @@
 /
 ALLOKC,	-DFULL-1
 ALLOKM,	-131		/BUFFER FULL TRIPS AT 90 CHARACTERS
-
-/*DEVCHK	/CHECK DEVICE OWNERSHIP
+/*DEVCHK	/CHECK DEVICE OWNERSHIP
 /CHECK DEVICE ASSIGNMENT.
 /CALL:	JMS DEVCHK
 /	 DEVTBL POINTER
@@ -5033,8 +4974,7 @@
 CDL20,	CIF DATFLD-1
 	JMP I .+1	/THEN OFF TO FIELD 1
 	CDL21
-
-/ROUTINE TO CHECK IF A CHARACTER IS A BREAK-CHARACTER.
+/ROUTINE TO CHECK IF A CHARACTER IS A BREAK-CHARACTER.
 /CALL:	TAD (BREAK-MASK)	/CHARACTER IN 'TTCHAR'
 /	JMS BRKTST
 /	 NOT A BREAK
@@ -5076,7 +5016,6 @@
 	"[-377-1;	377-377+1;	4	/RUBOUT
 	377-376-1;	376-375+1;	2	/ALTMODES
 	375-377-1;	377-0+1;	1	/ANYTHING ELSE
-
 	PAGE
 /RETURN ADDRESS OF LINKED TABLE ENTRY
 /CALL	TAD TABLE ENTRY ADDRESS
@@ -5114,8 +5053,7 @@
 GETJT1,	0
 GETJT2,	0
 GETJM7,	-7
-
-/GET JSFX
+/GET JSFX
 /CALL	TAD FILE #
 /	JMS GETJFX
 /	RETURN WITH JSFX IN AC
@@ -5129,8 +5067,7 @@
 	ISZ GETJF0	/DONE?
 	JMP .-2
 	JMP I GETJFX	/YES, EXIT WITH BIT SET IN AC
-
-/RESTORE JOB REGISTERS
+/RESTORE JOB REGISTERS
 /CALL	TAD JOB #
 /	RESJOB
 /	RETURN
@@ -5202,8 +5139,7 @@
 	 L2SV0
 	 -3
 	JMP I RESJO0	/ALL RESTORED
-
-/ROUTINE TO FIND THE BEST FIELD TO SWAP. THIS ALGORITHM
+/ROUTINE TO FIND THE BEST FIELD TO SWAP. THIS ALGORITHM
 /GIVES A SYSTEM PHANTOM PRIORITY OVER NON-RUNNABLE JOBS
 /BUT NOT OVER RUNNABLE JOBS. SINCE INACTIVE JOBS THUS TEND
 /TO BE SWAPPED OUT, MORE CORE IS AVAILABLE FOR ACTIVE JOBS
@@ -5245,8 +5181,7 @@
 SCNPTR,	CORTBP	/SEARCH POINTER IN 'CORE'
 SCNSAV,	CORTBL+1
 SCN12A,	SCHE12
-
-/SEARCH FOR TTY; RETURN POINTER TO INPUT DDB
+/SEARCH FOR TTY; RETURN POINTER TO INPUT DDB
 /CALL	TAD JOB #
 /	TTYUSE
 /	RETURN WITH DDB ADDR IN AC, 0 IF NOT FOUND
@@ -5271,7 +5206,6 @@
 UPEEK,	CIF+10		/OFF TO FIELD 1
 	JMP I .+1
 	UPEEK1
-
 	*7400
 	IFNZRO DC08A <
 /*JMPDC8	/SKIP OVER DC08A VECTORS
@@ -5322,8 +5256,7 @@
 /*ENDIOT	/JMP TO EXIT HANDLER
 OUTIOT=	ISZ ACFLG
 ENDIOT=	JMP ACINT6
-
-ACINT,	CLL STA RAL	/AC=-2
+ACINT,	CLL STA RAL	/AC=-2
 	DCA ACFLG	/START BY CHECKING FOR INPUT
 	TAD ACTBLA	/ADDRESS OF THE SKIP IOT'S
 	DCA ACX10
@@ -5367,8 +5300,7 @@
 	SNA CLA		/SHOULD WE SCHEDULE LEVEL 2?
 	TAD EXITA	/YES
 	DISMIS
-
-ACINT5,	CLA IAC
+ACINT5,	CLA IAC
 	TAD ACINT2
 	DCA .+1
 HICNT,	.-.		/TCF, PCF OR LCF
@@ -5428,7 +5360,6 @@
 ACOUT,	OUTREG-SKPTBL-NULINE-CONTTY-CDVIN-CDVGAP-1
 L2QBOT,	-L2QTB+1
 
-
 	PAGE
 	
 SWPIO,	0
@@ -5526,8 +5457,7 @@
 SWIN1,	ISZ DSERRI	/TRY 3 TIMES ON ERROR
 	JMP SOUT5
 	JMP SOUTR4	/GIVE UP
-
-/START DISC TRANSFER
+/START DISC TRANSFER
 /CALL:	TAD ADDRESS OF PARAMETERS
 /	DSGO
 /	RETURN

--- TS8II.PA	2014-01-27 13:23:07.278621297 -0500
+++ orig2/TS8II.PA	2014-01-26 13:35:18.083138832 -0500
@@ -169,7 +169,6 @@
 F1TCNT,	0		/DDB CHARACTER COUNT
 F1ECNT,	0		/DDB EMPTY COOUNT
 F1BUF,	0		/DDB EMPTY BLOCK
-
 	*OUTREG
 	ZBLOCK SKPTBL-OUTREG
 
@@ -215,7 +214,6 @@
 
 IFZERO DC08A <*SKPTBL+NULINE+CONTTY+CDVIN+CDVGAP
 	OUTIOT >	/SWITCH TO OUTPUT SIDE
-
 	TSF		/K00	/SKIP IOT FOR CONSOLE TELEPRINTER
 IFZERO DC08A <
 	TSKIP+410	/K01	/TELEPRINTER SKIP IOTS FOR PT08 AND KL8E
@@ -274,15 +272,14 @@
 	IFZERO CDVOUT-5&4000	<NOP>	/Y2 - 4015
 	IFZERO CDVOUT-6&4000	<NOP>	/Y3 - 4017
 	ENDIOT		/TERMINATES LIST
-
 	*RINGIN
 /ADDITIONAL FREE CORE GENERATION TABLE; REFERENCED BY 'INIT'
 /	THE FOLLOWING AREAS WILL BECOME PART OF FREE CORE
 
-IFZERO TC01&RK05&CDR <
+IFZERO TC01 RK05 CDR <
 	ENDBUF;FCE4	>
 
-IFNZRO TC01+RK05+CDR <
+IFNZRO TC01 RK05 CDR <
 IFZERO TC01 <
 	ENDBUF;FCE1	>
 IFZERO RK05 <
@@ -307,8 +304,7 @@
 	ZBLOCK 201	/DECTAPE BUFFER
 	ENPUNCH
 	*.
-
-/DECTAPE LEVEL 1 ENTRY
+/DECTAPE LEVEL 1 ENTRY
 
 /*DTL11		/LEVEL-1 INTERRUPT FOR DECTAPE
 DTL11,	TAD DTREMB	/PREVIOUS ERRORS FROM THIS TRANSFER
@@ -407,8 +403,7 @@
 	DTRA
 	AND K0204	/CLEAR GO & INTERRUPT ENABLE
 	JMP DTSRCH	/TO STOP THE TAPE
-
-DTWCP,	7754
+DTWCP,	7754
 K7701,	7701
 K0014,	14
 
@@ -448,8 +443,7 @@
 	TAD DTL2	/WE'RE DONE - SCHEDULE LEVEL 2
 	INTRTN
 DTL2,	DTL20
-
-/*DTL21		/DECTAPE LEVEL-2 COMPLETION
+/*DTL21		/DECTAPE LEVEL-2 COMPLETION
 DTL21,	TAD DTBUF	/WHAT KIND OF COMPLETION?
 	SNA
 	JMP DTEND4	/END OF A SEARCH - TAPE NOW IN POSITION FOR THE WRITE
@@ -496,8 +490,7 @@
 	JMS I BLTF1A	/L=0 FOR READ, L=1 FOR WRITE; AC=-201
 	ISZ DTDATA	/SKIP - DATA HAS ALREADY BEEN MOVED
 	JMP I DTDATA
-
-DTDA1,	IAC
+DTDA1,	IAC
 	TAD DTUCA
 	CLL IAC
 	TAD K0200
@@ -548,8 +541,7 @@
 	CIF CDF
 	JMP I .+1	/GO REPORT THE ERROR - MAKE IT SWPRER
 	DTDEF0
-
-DTDCMP,	TAD DTDWC
+DTDCMP,	TAD DTDWC
 	CIA
 	TAD M201
 	SNA		/DO WE NEED A SECOND PASS
@@ -583,7 +575,6 @@
 	TAD DTDATA	/NOW WE HAVE THE "XOR" OF THE "PRESENT" AND THE "DESIRED" STATUS A
 	DTXA		/"XOR" IT INTO THE CONTROLLER
 	JMP I DTLOAD	/THE RESULT WILL BE THE DESIRED STATUS A
-
 	IFNZRO .&100	<PAGE>
 /START OR RESTART A DECTAPE READ OR WRITE FOR THE USER
 
@@ -666,8 +657,7 @@
 DTGETW,	DTDATA
 DTXORA,	DTXOR
 DTLOAA,	DTLOAD
-
-DTIMER,	0
+DTIMER,	0
 	JMS I DTRKJA	/FIND A JOB IN DECTAPE TIMER WAIT
 	 -2
 	JMP DTIME3	/ALL DONE
@@ -722,8 +712,7 @@
 	DTL20
 	JMP I .+1	/BACK THROUGH THE TIMER CODE
 	DTIMEX
-
-FCE1=	.+1&7770
+FCE1=	.+1&7770
 DTRKER,	0
 	CIF CDF
 	JMS I DTRKHA	/REPORT THE HUNG DEVICE
@@ -777,8 +766,7 @@
 	TAD K0010	/DISPLACE TO RK05 DDB'S
 	JMP UDTXAD
 DTDEVA,	DEVTBE+20
-
-/SEARCH FOR A JOG WAITING FOR A "WAIT 2" CONDITION
+/SEARCH FOR A JOG WAITING FOR A "WAIT 2" CONDITION
 /CALLING SEQUENCE:
 /	AC=0 COMPLETE PASS; AC NON-ZERO FINISH CURRENT PASS
 /	JMS DTRKJB
@@ -816,8 +804,7 @@
 	JMP I DTRKJB
 
 DTRKEN,	-CLKTBL+1
-
-/MOVE DATA TO/FROM DATFLD FROM/TO USER CORE
+/MOVE DATA TO/FROM DATFLD FROM/TO USER CORE
 /	USER'S POINTER IN "A16"
 /	DATFLD POINTER IN "A17"
 /CALLING SEQUENCE:
@@ -859,8 +846,7 @@
 	DCA I TEMP0	/TAKE HIM OUT OF WAIT
 	ISZ WAKEUP
 	JMP I WAKEUP
-
-FCB2=	.+7&7770
+FCB2=	.+7&7770
 RKREDO,	REDO0
 RK05GO,	CIF CDF
 	TAD RKJOB	/WHO OWNS THE CONTROLLER?
@@ -921,8 +907,7 @@
 	JMP RKEND2
 RKGOA,	RKGO
 FCE2=	.+1&7770
-
-/ROUTINE TO SET WAIT 2 CONDITION FOR THE CURRENT USER
+/ROUTINE TO SET WAIT 2 CONDITION FOR THE CURRENT USER
 /	(FOR DECTAPE,RK05 OR CARDREADER)
 /	ENTER WITH DISIRED WAIT 2 STATUS IN THE AC
 
@@ -972,8 +957,7 @@
 	JMS I AWAKEN	/TAKE HIM OUT OF WAIT STATUS
 CDBUF,	0
 	EXITF1
-
-/*CDL11		/LEVEL-1 INTERRUPT FOR CARD READER
+/*CDL11		/LEVEL-1 INTERRUPT FOR CARD READER
 CDL11,	TAD I CDTIMR
 	SNA CLA		/WERE WE EXPECTING A INTERRUPT?
 	JMP CDIOT	/NO
@@ -1020,8 +1004,7 @@
 	JMP I SLEEPB	/PUT HIM TO SLEEP FOR A COUPLE SECONDS
 *2000
 FCE3=	.&7770
-
-FCB4=	.+7&7770
+FCB4=	.+7&7770
 
 /*RKL11		/LEVEL-1 INTERRUPT FOR RK05
 RKL11,	DRST		/GET CONTROLLER STATUS
@@ -1070,8 +1053,7 @@
 	DCA RKTIME
 	DCLR
 	INTRTN
-
-RKSR5,	TAD SLEEPB
+RKSR5,	TAD SLEEPB
 	DCA INTS2
 	CLL CMA RTL	/AC=-3
 	TAD IX3		/POINTER TO DDB WORD 4 (-1)
@@ -1126,7 +1108,6 @@
 	TAD RKDRST
 	DCA RKL11	/FIX FIRST WORD OF INTERRUPT SERVICE
 	DSKP		/ARE WE TRYING TO DO SOMETHING BAD?
-
 	JMP I RKGO	/NO - EVERYTHING IS PEACHY
 RKDRST,	DRST
 	DCA I RKERRA	/SAVE ERROR STATUS - NO RE-TRIES WILL BE MADE
@@ -1159,8 +1140,7 @@
 	JMP I RKNXT
 PAGE
 FCE4=	.&7770
-
-IFNZRO DC08A <
+IFNZRO DC08A <
 T8ASSM,	0
 	AND T83770	/THE CHARACTER ONLY
 	SNA
@@ -1187,8 +1167,7 @@
 T83770,	3770
 T8IN1A,	T8IN1
 T8T,	0
-
-T8TTI,	TTI
+T8TTI,	TTI
 	DC08LO^10+0	/LSW  LINE # PT08+DC08LO+1
 	2000		/CAW
 	JMS T8ASSM	/CHARACTER FULLY ASSEMBLED
@@ -1243,7 +1222,6 @@
 	TTI
 	DC08LO^10+150	/LSW  LINE # PT08+DC08LO+16
 	2000		/CAW
-
 	JMS T8ASSM	/CHARACTER FULLY ASSEMBLED
 	TTI
 	DC08LO^10+160	/LSW  LINE # PT08+DC08LO+17
@@ -1274,8 +1252,7 @@
 	JMP I .+1	/BACK TO THE REST OF THE DC08A SERVICE
 	T8OUT1
 
-
-FCB5=	.+7&7770
+FCB5=	.+7&7770
 *2360
 
 FCE5=	.&7770
@@ -1319,8 +1296,7 @@
 	DCA DFCNTR	/COUNTER FOR COMPARISONS
 	CTG		/CLEAR GROUP COUNTER
 	JMP I DFCSET
-
-DFCARR,	JMS DFCSET	/INITIALIZE STATUS
+DFCARR,	JMS DFCSET	/INITIALIZE STATUS
 DFCAR1,	RCS		/READ CARRIER STATUS
 	DCA I DFCNWI	/PLACE ON TABLE
 	ISZ DFCNWI
@@ -1367,8 +1343,7 @@
 	TAD TEMP4
 	DCA I DFL2SI
 	JMP I DFCAR6
-
-DFL200,	TAD DFL2ST	/INITIALIZE PSEUDO GROUP CTR
+DFL200,	TAD DFL2ST	/INITIALIZE PSEUDO GROUP CTR
 	DCA DFL2SG
 
 DFL22,	TAD K7770	/EIGHT PHONES
@@ -1423,7 +1398,6 @@
 DFL2ST,	DFL2S0
 DFUMES,	UHLTMS
 	>
-
 	PAGE
 
 /*TIMER0	/FIELD 1 TIMER ROUTINE
@@ -1600,7 +1574,6 @@
 	CLA
 	JMP I FXPT08	/ AND RETURN
 	>
-
 	PAGE
 	IFNZRO D689-4 <	IFNZRO CPU-3 <
 	IFZERO TC01-1 <	IFZERO TD8E <
@@ -1721,8 +1694,7 @@
 	CIF
 	JMP I .+1	/OFF TO THE AUTO-RESTART CODE
 	RELOAD
-
-/
+/
 /*F1DTST	/DECTAPE STOP ROUTINE
 /ROUTINE TO STOP ANY DECTAPE ACTIVITY FOR A JOB FOR ^C OR ^BS.
 /CALL:	TAD JOB #
@@ -1777,8 +1749,7 @@
 DTSJOB,	0
 DTSTIM,	DTIMER
 K7776,	-2
-
-DEVDMB=	JOBTBL-2		/DUMMY POINTER FOR NONEXISTENT DEVICES
+DEVDMB=	JOBTBL-2		/DUMMY POINTER FOR NONEXISTENT DEVICES
 
 	IFNZRO DEVTBL-1-.&4000	<GLITCH>
 	*DEVTBL-1
@@ -1821,7 +1792,6 @@
 JOBTBL,	0
 
 /THE REMAINING CONTROL TABLES ARE CLEARED DURING START-UP.
-
 		IFZERO DEBUG&7-3&4000 <
 		IFZERO CDR <
 	*1710
@@ -1872,7 +1842,6 @@
 RCSAVE,	2361
 RETBA,	RETB
 		>>
-
 	IFNZRO D689-4 <
 	IFZERO TC01-1 <
 	IFZERO TD8E <
@@ -1920,7 +1889,6 @@
 	ENPUNCH
 CBOOTA,	CDUMP	/TO OVERLAY IN CASE RESTARTED AT 'CRASH'
 	>
-
 	*6200
 	NOPUNCH
 	*200
@@ -2027,7 +1995,6 @@
 QSKIP,	50	/INTER-BLOCK GAP + BLOCK-SIZE
 QXFLD,	-40	/DUMP FIELDS 0 - 3
 QXTBK,	-SWDEX-JOBMAX	/ -(# OF DISC TRACKS TO DUMP)
-
 	*6400
 	NOPUNCH
 	*400
@@ -2164,7 +2131,6 @@
 QK400,	400
 QK7174,	7174
 QM200,	-200
-
 	*6600
 	NOPUNCH
 	*600
@@ -2220,8 +2186,7 @@
 WTHELP,	"B;"A;"D;" ;"D;"E;"C;"T;"A;"P;"E;"?;0
 WTSMS,	"D;"E;"C;"T;"A;"P;"E;" ;"S;"E;"L;"E;"C;"T;" ;"E;"R;"R;"O;"R;0
 	>>>>
-
-/*WINBAS	/BASIC RETRIEVAL WINDOW
+/*WINBAS	/BASIC RETRIEVAL WINDOW
 	*FIPBLK
 FIPBLK,	ZBLOCK 10	/FIP I/O PARAMETER BLOCK
 WINBAS,	ZBLOCK -.	/SPECIAL BASIC WINDOW (TO END OF FIELD)
brad@mwave:/files/code/cpus/pdp8/tss8_uwm$ mv TS8II.PA TS8II.PA.1
brad@mwave:/files/code/cpus/pdp8/tss8_uwm$ cp orig2/TS8II.PA .
brad@mwave:/files/code/cpus/pdp8/tss8_uwm$ make
rm -f ts8ii.err ts8ii.lst
../utils/macro/macro8x -o ts8ii UWM.PA PARA.PA PARB.PA PARC.PA TS8II.PA
      4 detected errors
make: *** [ts8ii.bin] Error 1
brad@mwave:/files/code/cpus/pdp8/tss8_uwm$ ls *.err
ts8ii.err
brad@mwave:/files/code/cpus/pdp8/tss8_uwm$ dos2unix TS8II.PA
dos2unix: converting file TS8II.PA to Unix format ...
brad@mwave:/files/code/cpus/pdp8/tss8_uwm$ make
rm -f ts8ii.err ts8ii.lst
../utils/macro/macro8x -o ts8ii UWM.PA PARA.PA PARB.PA PARC.PA TS8II.PA
brad@mwave:/files/code/cpus/pdp8/tss8_uwm$ make clean
rm -f *.bin *.prm *.lst *.err *.mem *.dump
brad@mwave:/files/code/cpus/pdp8/tss8_uwm$ make
rm -f init.err init.lst
../utils/macro/macro8x -o init UWM.PA PARA.PA PARB.PA PARC.PA INIT.PA
rm -f fip.err fip.lst
../utils/macro/macro8x -o fip UWM.PA PARA.PA PARB.PA PARC.PA FIP.PA
rm -f si.err si.lst
../utils/macro/macro8x -o si UWM.PA PARA.PA PARB.PA PARC.PA SI.PA
rm -f ts8.err ts8.lst
../utils/macro/macro8x -o ts8 UWM.PA PARA.PA PARB.PA PARC.PA TS8.PA
rm -f ts8ii.err ts8ii.lst
../utils/macro/macro8x -o ts8ii UWM.PA PARA.PA PARB.PA PARC.PA TS8II.PA
#it's a bin format papertape encoded as ascii bytes
#but we dumped it as binary
../tapes/tools/asc <orig2/INIT.XD >INIT.XD.bin
brad@mwave:/files/code/cpus/pdp8/tss8_uwm$ 
