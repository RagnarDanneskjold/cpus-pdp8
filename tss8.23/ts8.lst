
      /TSS/8 CONFIGURATION FOR UWM                                        Page 1


    1             /TSS/8 CONFIGURATION FOR UWM
    2             /CONFIGURATION PARAMETERS FOR THE TSS/8 MONITOR
    3             /COPYRIGHT 1971
    4             /DIGITAL EQUIPMENT CORP. -MAYNARD, MASS
    5             /
    6             /TSS/8 PDP-8/E HARDWARE OPTIONS
    7             /THIS SECTION DEFINES THE HARDWARE CONFIGURATION ON
    8             /WHICH THIS TSS/8 MONITOR WILL BE RUN
    9             /FOR EACH STATEMENT THE COMMENT INDICATES THE
   10             /POSSIBLE RESPONSES
   11             
   12       0002  CPU=    2       /0 IF CPU IS PDP-8/I; 1 IF PDP-8
   13                             / 2 IF PDP-8/E; 3 IF PDP-12
   14             
   15       0000  EAE=    0       /20 IF CPU INCLUDES EAE; 0 IF NOT
   16             
   17       0070  CORMEM= 70      /HIGHEST DATA FIELD SELECT; FOR 12K SYS,
   18                             / RESPOND 20; FOR 16K, RESPOND 30; FOR 32K, 70
   19             
   20       0000  D680=   0       /2 IF TTY INTERFACING IS 680 OR DC08;
   21                             / 0 IF TTY INTERFACING IS PT08'S
   22             
   23       0000  D689=   0       /4 IF 680 OR DC08 INCLUDES 689 OR DC08F;
   24                             / 0 IF IT DOESN'T OR TTY INTERFACING IS PT08'S
   25             
   26       0000  RF08=   0       /40 IF SYSTEM DISC IS DF32; 0 IF RF08
   27             
   28       0001  RS08=   1       /# OF DISCS IN SYSTEM, WHETHER RF08 OR DF32
   29             
   30       0000  RK8E=   0       /# OF RK8E DRIVES; ONLY FIRST IS USED FOR SYSTEM
   31                             / THE REMAINDER ARE TREATED AS PERIPHERALS
   32             
   33       0001  READER= 1       /1 IF SYSTEM INCLUDES HIGH-SPEED READER; 0 IF NOT
   34             
   35       0001  PUNCH=  1       /1 IF SYS HAS HSP, 0 IF NOT
   36             
   37       0001  TC01=   1       /1 IF SYS HAS DECTAPES; 0 IF NOT
   38             
   39       0000  TU55=   0       /1 IF SYSTEM INCLUDES MORE THAN TWO DECTAPES
   40                             / 0 IF 0, 1, OR 2 DRIVES
   41             
   42       0000  TD8E=   0       /1 IF TD8E DECTAPES AVAILABLE FOR LOADING & DUMPING
   43                             / 0 IF NOT; NOTE THAT TD8E TAPES CANNOT BE USED UNDER
   44                             / TSS/8, THEY REQUIRE CONTINUOUS CPU ATTENTION
   45             
   46       0000  PLOTTER=0       /NO SYSTEMS CAN HAVE PLOTTER
   47             
   48       0000  LPT=    0       /0 IF NO PRINTER ON SYS; 1 IF LP08; 2 IF LS8E
   49             
   50       0000  CDR=    0       /NO SYS CAN HAVE CARD READER
   51             /
   52             /MONITOR OPTIONS 
   53             /FILL IN THE FOLLOWING LINES TO INDICATE THE 
   54             /MONITOR CAPACITY FOR THIS SYSTEM
   55             
   56                     DECIMAL
   57       0024  JOBMAX= 20      /NUMBER OF SIMULTANEOUS USERS (.LE. 20)

      /TSS/8 CONFIGURATION FOR UWM                                        Page 2


   58             
   59       0017  NULINE= 15      /NUMBER OF TTYS TO BE ATTACHED TO SYS.
   60                             / SIMULTANEOUSLY, NOT COUNTING CONSOLE (.LE. 19)
   61                             / GENERALLY .GE. JOBMAX; IF SYS. USES 680 OR DC08,
   62                             / NULINE MUST BE A MULTIPLE OF 5 (FIVE); IF CPU IS
   63                             / A PDP-12, NULINE MUST BE MULTIPLE OF 8 (EIGHT)
   64             
   65       0011  TRUKBD= 9       /NUMBER OF ACTUAL KEYBOARDS ON SYSTEM (NOT COUNTING
   66                             / CONSOLE TTY). THIS MUST BE .LE. NULINE; NULINE
   67                             / MAY INCLUDE DUMMY TERMINALS, THIS MAY NOT.
   68             
   69       0011  FRCMAX= TRUKBD  /THE HIGHEST KEYBOARD # A '00XX' ACCT # MAY FORCE
   70                             / NOTE THAT A '000X' ACCOUNT MAY FORCE UP TO 'NULINE'
   71             
   72       0011  TLKMAX= TRUKBD  /THE HIGHEST KEYBOARD # WHICH MAY BE 'TALK'ED TO
   73             
   74       0011  BRDMAX= TRUKBD  /THE HIGHEST KEYBOARD WHICH WILL RECEIVE BROADCASTS
   75                     OCTAL
   76             
   77       0002  DTAMIN= 2       /THE FIRST DECTAPE DRIVE WHICH WILL BE ASSIGNED
   78                             / FOR 'ASSIGN D' COMMAND; NORMALLY =0, BUT MAY
   79                             / VARY FOR SLIGHTLY RESTRICTED DRIVE USE.
   80             
   81       0007  BILLNG= 7       /THE ACCOUNT NUMBER OF THE BILLING SYSTEM
   82                             / 0, IF NO BILLING SYSTEM USED
   83             /
   84             /SYSTEM CONSTANTS
   85             
   86       37777777776  QUANT=  -2      /NUMBER OF SYSTEM TICKS PER TIME SLICE  (-)
   87       0005  SWDEX=  5       /DISC TRACK OF FIRST SWAP AREA
   88       0001  TTYEVEN=1       /1 INDICATES PARITY TTY MAY BE USED WITH SYS
   89                             / 0 ALLOWS ONLY DEC MODIFIED TTYS
   90       0020  INFLD=  20      /FIELD SELECT THAT 'INIT' SHOULD BE BOOTED INTO
   91                             / MAKING IT 20 AVOIDS PROBLEMS SHOULD A
   92                             / FIELD NEED REPAIR & SYSTEM IS RUN ON 12K
   93             
   94             ///     END OF SYSTEM CONFIGURATION PARAMETERS

      /TSS/8 CONFIGURATION FOR UWM                                        Page 3


   95                96             /PARAMETERS - UWM VERSION 23
   97             /
   98             /COPYRIGHT 1971                 DIGITAL EQUIPMENT CORPORATION
   99             /                               MAYNARD, MASSACHUSETTS
  100             /
  101             /
  102       0027  VERNUM= 27      /SYSTEM VERSION NUMBER
  103             /
  104       0005  STOMIN= 5       /MINIMUM # FREE STORAGE BLOCKS FOR NEW JOB
  105                     IFZERO RK8E <
  106                     IFZERO RF08-40 <
  107             DSKSIZ= RS08^10
  108                     >
  109                     IFZERO RF08 <
  110       0100  DSKSIZ= RS08^100        /# OF 4K DISC TRACKS
  111                     >
  112                     >
  113                     IFNZRO RK8E <
  114             DSKSIZ= 400     /# OF 4K DISC TRACKS
  115                     >
  116       0062  CLOCKR= 62      /50 MILLISECONDS
  117       2260  TICMIN= 2260    /1200
  118       0645  INCLK2= 0645    /1,728,000 TICKS PER DAY
  119       7000  INCLK1= 7000
  120       0024  TICSPS= 24      /NUMBER OF SYSTEM TICKS PER SECOND
  121       0010  INIDEX= 10      /INIT DISC EXTENSION
  122       0030  TS8DEX= 30      /FIELD 0 DISC EXTENSION*2^3
  123       0000  ERPDEX= 0       /ERP DISC EXTENSION*4
  124       0000  ERPWC=  0       /ERP WORD COUNT
  125       0004  FIPDEX= 4       /FIP DISC EXTENSION*4
  126       0000  FIPWC=  0       /FIP WORD COUNT
  127       0000  SIDEX=  ERPDEX  /SI DISC EXTENSION*4
  128       0000  SIWC=   ERPWC   /SI WORD COUNT
  129       0002  LIBACT= 2       /LIBRARY ACCOUNT #
  130       4000  BRKINI= 4000    /INITIAL USER BREAK MASK
  131       0400  WRDSEG= 400     /#WORDS PER DISC SEGMENT
  132             
  133             /IOT DEFINITIONS
  134             
  135                     IFZERO D680-2 <
  136             TTINCR= 6401    /INCREMENT LINE REGISTER
  137             TTI=    6402    /TELETYPE INPUT COMMAND
  138             TTO=    6404    /TELETYPE OUTPUT COMMAND
  139             TTCL=   6411    /CLEAR LINE REGISTER
  140             TTSL=   6412    /SET LINE REGISTER, CLEAR AC
  141             TTRL=   6414    /READ LINE REGISTER
  142             T8SKP=  6421    /SKIP ON CLOCK FLAG
  143             T8OFF=  6422    /TURN CLOCK OFF
  144             TT8ON=  6424    /TURN CLOCK ON
  145             TTRINC= 6461    /INCREMENT THE R REG.
  146             TT8CLR= 6473    /CLEAR AND LOAD THE R REG.
  147                     >

      /TSS/8 CONFIGURATION FOR UWM                                        Page 4


  148             /EXTENDED MEMORY
  149             
  150       6201  CDF=    6201    /CHANGE TO DATA FIELD 0
  151       6202  CIF=    6202    /CHANGE TO INSTRUCTION FIELD 0
  152       6204  CIOT=   6204    /CLEAR USER IOT
  153             
  154       6214  RDF=    6214    /READ DATA FIELD
  155       6224  RIF=    6224    /READ INSTRUCTION FIELD
  156       6234  RIB=    6234    /READ INTERRUPT BUFFER
  157       6244  RMF=    6244    /RESTORE MEMORY FIELD
  158       6254  SKPIOT= 6254    /SKIP ON USER IOT
  159       6264  UFF=    6264    /USER FLAG OFF
  160       6274  UFN=    6274    /USER FLAG ON
  161             
  162             /EAE
  163                     IFZERO EAE-20 <
  164             MUY=    7405    /MULTIPLY
  165             DVI=    7407    /DIVIDE
  166             NMI=    7411    /NORMALIZE
  167             SHL=    7413    /SHIFT ARITHMETIC LEFT
  168             ASR=    7415    /ARITHMETIC SHIFT RIGHT
  169             LSR=    7417    /LOGICAL SHIFT RIGHT
  170             MQL=    7421    /LOAD MQ
  171             SCL=    7403    /STEP COUNTER LOAD FROM MEMORY
  172             SCA=    7441    /STEP COUNTER TO AC
  173             MQA=    7501    /MQ TO AC
  174             
  175                     IFZERO CPU-2 <
  176             SAM=    7453    /SUBTRACT AC FROM MQ
  177             SKB=    7671    /SKIP IF MODE B (MESSES UP AC AND MQ)
  178             SWBA=   7447    /CHANGE MODE TO A
  179             SWAB=   7431    /CHANGE MODE TO B (ALSO DOES MQL)
  180             ACS=    7403    /AC(7:11) TO SC; AC CLEARED 
  181                     >>
  182       6006  SGT=    6006    /SKIP ON GT FLAG
  183                             /SOMEDAY FIX 'WHERE' COMMAND TO PRINT MODE & GT
  184             
  185             /LINE PRINTER IOTS
  186       6661  LSF=    6661    /SKIP ON CHAR FLAG SET
  187       6662  LCF=    6662    /CLEAR CHAR FLAG
  188       6663  LSRP=   6663    /SKIP ON NOT READY OR ON ERROR
  189       6664  LLC=    6664    /TRANSMIT CHAR TO PRINTER
  190       6665  LSP=    6665    /SET PROGRAM INTERRUPT
  191       6666  LPC=    6666    /TRANSMIT CHAR & CLEAR FLAG
  192       6667  LCP=    6667    /CLEAR PROGRAM INTERRUPT

      /TSS/8 CONFIGURATION FOR UWM                                        Page 5


  193             /CTY
  194             
  195       6044  TPC=    6044    /LOAD TELEPRINTER AND PRINT
  196             
  197             /DISC (DF32)
  198             
  199       6601  DCMA=   6601    /CLEAR
  200       6603  DMAR=   6603    /READ
  201       6605  DMAW=   6605    /WRITE
  202       6611  DCEA=   6611    /CLEAR DISC EXTENDED ADDRESS
  203       6615  DEAL=   6615    /LOAD EXTENDED ADDRESS
  204       6621  DFSE=   6621    /SKIP ON ERROR
  205       6622  DFSC=   6622    /SKIP ON COMPLETION
  206       6616  DEAC=   6616    /READ EXTENDED ADDRESS
  207             
  208             /DISC (RF08)
  209             
  210       6615  DIML=   6615
  211       6616  DIMA=   6616
  212       6643  DXAL=   6643
  213             
  214                     IFNZRO RK8E <
  215             DCLR=   6742    /CLEAR THE CONTROLLER
  216             DLAG=   6743    /LOAD DISC ADDRESS & GO
  217             DLDC=   6746    /LOAD THE COMMAND REGISTER
  218             DRST=   6745    /READ THE STATUS
  219             DSKP=   6741    /SKIP IF DONE OR ERROR
  220             DLCA=   6744    /LOAD CURRENT CORE ADDRESS
  221                     >
  222             
  223             /
  224             /STANDARD DECTAPE CONTROLLER IOTS
  225       6761  DTRA=   6761    /READ A-REGISTER
  226       6762  DTCA=   6762    /CLEAR A-REGISTER
  227       6764  DTXA=   6764    /XOR INTO A-REGISTER
  228       6771  DTSF=   6771    /SKIP ON DECTAPE FLAG
  229       6772  DTRB=   6772    /READ STATUS-REGISTER (B)
  230       6774  DTLB=   6774    /LOAD STATUS-REGISTER (B)
  231             
  232                     IFZERO CPU-3 <
  233             CLAB=   6133
  234             CLLR=   6132
  235             CLEN=   6134
  236             CLSA=   6135
  237             CLSK=   6131
  238             
  239             MTPF=   6113
  240             MINT=   6115
  241             MTON=   6117
  242             MKTF=   6123
  243             MINS=   6125
  244             MTRS=   6127
  245             
  246             MKSF=   6111
  247             MKCC=   6112
  248             MKRS=   6114
  249             MKRB=   6116

      /TSS/8 CONFIGURATION FOR UWM                                        Page 6


  250             
  251             MTSF=   6121
  252             MTCF=   6122
  253             MTPC=   6124
  254             MTLS=   6126
  255                     >
  256             
  257                     IFZERO CPU <
  258             /KW8I           REAL TIME CLOCK
  259             
  260             CECI=   6137    /CLEAR AND ENABLE CLOCK AND INTERRUPT
  261             CSCF=   6133    /SKIP AND CLEAR FLAG IF FLAG
  262                     >
  263             
  264                     IFZERO CPU-1 <
  265             CECI=   6315    /CLOCK ENABLE
  266             CSCF=   6301    /SKIP ON CLOCK FLAG
  267             CCF=    6302    /CLEAR CLOCK FLAG, CLEAR ENABLE AND CLEAR BUFFER
  268             CLB=    6304    /LOAD BUFFER FROM AC
  269                     >
  270             
  271                     IFZERO CPU-2 <
  272       6131  CECI=   6131    /CLOCK ENABLE
  273       6133  CSCF=   6133    /SKIP AND CLEAR FLAG IF FLAG
  274       6007  CAF=    6007    /CLEAR ALL FLAGS
  275                     >
  276             
  277                     IFZERO D689-4 <
  278             /689AG
  279             
  280             SRF=    6701    /SKIP IF RING FLAG
  281             SCF=    6711    /SKIP IF CARRIER FLAG
  282             DFCRF=  6742    /CLEAR RING FLAG
  283             CTG=    6721    /CLEAR GROUP COUNTER
  284             RRS=    6702    /READ RING STATUS
  285             ITG=    6731    /INCREMENT GROUP COUNTER
  286             STR=    6722    /SET TERMINAL READY
  287             EDF=    6704    /ENABLE DATAPHONE FEATURES
  288             DDF=    6714    /DISABLE DATAPHONE FEATURES
  289             CTR=    6724    /CLEAR TERMINAL FLAG
  290             CCF=    6741    /CLEAR CARRIER FLAG
  291             RCS=    6712    /READ CARRIER STATUS
  292                     >

      /TSS/8 CONFIGURATION FOR UWM                                        Page 7


  293             /TSS/8 IOTS
  294       0406  SEGS=   406     /RETURN NUMBER OF FREE SEGMENTS ON DISC
  295       0440  ASD=    440     /ASSIGN DEVICE
  296       0442  REL=    442     /RELEASE DEVICE
  297       0600  REN=    600     /RENAME FILE
  298       6601  OPEN=   6601    /OPEN FILE
  299       0602  CLOS=   602     /CLOSE
  300       6603  RFILE=  6603    /READ FILE
  301       0604  PROT=   604     /PROTECT
  302       6605  WFILE=  6605    /WRITE FILE
  303       6606  XOPEN=  6606    /OPEN FILE WITH EXCLUSIVE USE
  304       0607  CPASS=  607     /CHANGE A USER'S PASSWORD
  305       0610  CRF=    610     /CREATE
  306       0611  EXT=    611     /EXTEND
  307       0612  RED=    612     /REDUCE
  308       6613  FINF=   6613    /FILE INFORMATION
  309       0614  LIN=    614     /LOGIN
  310       0615  LOUT=   615     /LOGOUT
  311       0620  BCLR=   620     /CLEAR MFD BILLING INFORMATION
  312             
  313             /DEVICE DATA BLOCK
  314             
  315       0000  DDBSTS= 0               /WORD 1.  STATUS AND UNIT NUMBER
  316       2000          DXON=   2000    /XOFF SENT FLAG
  317       1000          DSI=    1000    /DESTINATION IS S.I. FLAG
  318       0400          DXOUT=  400     /BIT TO CAUSE 'XOFF' TO GO OUT
  319       0200          DUPL=   200     /CONSOLE IN DUPLEX MODE
  320       0100          SICOM=  100     /COMMAND WAITING
  321       0040          CTRLC=  40      /USER TYPED CTRL/C
  322             
  323                     /DEVICE UNIT NUMBER IS IN BITS 6-11
  324             
  325       0001  DDBJN=  1       /WORD 2. JOB NUMBER IN 7-11
  326       0002  DDBBRK= 2       /BREAK MASK
  327       0204  SIBRKM= 204     /SI BREAK MASK
  328       0003  DDBTIM= 3       /TIME THAT DEVICE WAS ASSIGNED
  329       0004  DDBINP= 4       /BUFFER FILL POINTER
  330       0005  DDBINC= 5       /BUFFER FILL COUNT
  331       0006  DDBOUP= 6       /BUFFER EMPTY POINTER
  332       0007  DDBOUC= 7       /BUFFER EMPTY COUNT

      /TSS/8 CONFIGURATION FOR UWM                                        Page 8


  333             /JOB DATA AREA
  334             
  335       0000  JOBSTS= 0               /STATUS
  336                     /STR0
  337       4000          JSRUN=  4000    /RUN BIT
  338       2000          JSEREN= 2000    /USER ERROR ENABLE
  339       1000          JCOMBD= 1000    /LAST TIME THE JOB RAN AS COMPUTE BOUND
  340       0400          JSHLT=  400     /PROGRAM EXECUTED 'HLT'
  341       0200          JSPRIV= 200     /LIBRARY PROGRAM (HAS PRIVILEGES)
  342       0100          JSIOT=  100     /NON-RESIDENT IOT
  343       0040          JSIOTC= 40      /COPY IOT RESULT TO USER
  344       0020          JSEXON= 20      /EXECUTE ONLY
  345                     /BITS 9-11 ARE SYSTEM ERROR CODE
  346       0001          UUOERF= 1       /IOT ERROR
  347       0002          SWPRER= 2       /SWAP READ ERROR
  348       0003          SWPWER= 3       /SWAP WRITE ERROR
  349       0005          DSKERR= 5       /DISC ERROR
  350       0006          HUNGDV= 6       /HUNG DEVICE
  351             
  352                     /STR1
  353       4000          JSTIME= 4000    /TIME IS UP
  354       2000          JSF0=   2000    /FILE 0 NOT BUSY
  355       1000          JSF1=   1000    /FILE 1 IS NOT BUSY
  356       0400          JSF2=   400     /FILE 2 IS NOT BUSY
  357       0200          JSF3=   200     /FILE 3 IS NOT BUSY
  358       0100          JSDEL=  100     /DELIMITER SEEN
  359       0020          JSTEL=  20      /OUTPUT BUFFER NOT FULL
  360       0010          JSPTR=  10      /CHARACTER IN READER BUFFER
  361       0004          JSPTP=  4       /PUNCH BUFFER IS NOT FULL
  362       0002          JSERR=  2       /SYSTEM ERROR DETECTED
  363       0001          JSWAIT= 1       /JOB NOT IN WAIT STATE
  364             
  365       0001  STR2=   1       /TC01&1!PUNCH&1!PLOTTER&1!LPT&1!CDR&1
  366             
  367       1000          JSPLT=  1000    /PLOTTER DONE
  368       0400          JSCDR=  400     /CHARACTER IN CDR BUFFER
  369       0200          JSCRNR= 200     /CDR NOT READY
  370       0100          JSCREF= 100     /CDR END FILE
  371       0004          JSDTC=  4       /DECTAPE CONTROLLER FLAG
  372       0002          JSDTE=  2       /DT ERROR FLAG
  373       0001          JSDTF=  1       /DT DONE FLAG
  374             
  375       0003  JOBWMK= 2+STR2          /WAIT MASK
  376       0005  JOBSRA= JOBWMK+1+STR2   /JOB RESTART ADDRESS
  377       0006  JOBERR= JOBSRA+1        /JOB ERROR RESTART ADDRESS
  378       0007  JOBLNK= JOBERR+1        /IOT LINKAGE
  379       0010  JOBSWR= JOBLNK+1        /SWITCH REGISTER
  380       0011  JOBREG= JOBSWR+1        /PC, AC, & LINK (W/MODE, GT, & SC)
  381       0014  JOBEAE= JOBREG+3        /MQ REGISTER
  382       0015  JOBACT= JOBEAE+1        /USER'S ACCOUNT #
  383       0016  JOBRTM= JOBACT+1        /LOW ORDER RUN TIME
  384       0017  JOBRTH= JOBRTM+1        /HIGH ORDER RUN TIME
  385       0020  JOBF0=  JOBRTH+1        /POINTER TO FILE 0 CONTROL
  386       0021  JOBF1=  JOBF0+1         /POINTER TO FILE 1 CONTROL
  387       0022  JOBF2=  JOBF1+1         /POINTER TO FILE 2 CONTROL
  388       0023  JOBF3=  JOBF2+1         /POINTER TO FILE 3 CONTROL
  389       0024  JOBSTB= JOBF3+1         /DECTAPE STATUS REGISTER B

      /TSS/8 CONFIGURATION FOR UWM                                        Page 9


  390             
  391             /TUNING PARAMETERS
  392             
  393       0010  MAXBUF= 10      /MAXIMUM PERMITTED # OF OUTPUT BUFFERS
  394       0003  MINBUF= 3       /RESTART JOB WHEN ONLY MINBUF BUFFERS ARE STILL FULL
  395             
  396             /FILE CONTROL BLOCK - POINTED TO BY JOBFX, X=0,1,2,3
  397             
  398       0000  FILWPT= 0       /POINTER TO FILE RETRIEVAL WINDOW
  399       0001  FILSCT= 1       /SEGMENT NUMBER OF FIRST WINDOW ENTRY
  400       0002  FILPRO= 2       /FILE PROTECTION - BIT 9
  401       0003  FILPAR= 3       /POINTER TO RFILE OR WFILE PARAMETER BLOCK
  402       0004  FILDA=  4       /DISC ADDRESS OF RFILE OR WFILE
  403       0006  FILWC=  6       /-WORD COUNT OF RFILE OR WFILE
  404       0007  FILRES= 7       /POINTER TO FILPIF IN USER AREA
  405             
  406             /FILE  RETRIEVAL WINDOW
  407             /WORD 0:        UFD LINK TO NEXT GROUP OF 7 SEGMENT POINTERS
  408             /WORDS 1-7:     SEVEN SEGMENT ADDRESSES
  409             
  410             /RFILE OR WFILE PARAMETER BLOCK - POINTED AT BY FILPAR
  411             
  412       0000  FILPFN= 0       /FUNCTION: 0603 OR 0605
  413       0001  FILPDX= 1       /DISC EXTENSION
  414       0002  FILPIF= 2       /INTERNAL FILE # (BITS 10-11) AND FIELD # (BITS 7-9)
  415       0003  FILPWC= 3       /-WORD COUNT FOR THIS TRANSFER
  416       0004  FILPCA= 4       /CORE ADDRESS FOR THIS TRANSFER
  417       0005  FILPDA= 5       /DISC ADDRESS
  418       0006  FILPRA= 6       /EXEC RETURN ADDRESS FOR THIS TRANSFER
  419       0007  FILPCT= 7       /POINTER TO FILE CONTROL BLOCK
  420             
  421             /CORE TABLE CONTROL FLAGS
  422             
  423       4000  FSWP=   4000    /SWAP REQUEST
  424       2000  LOCK=   2000    /LOCK IN CORE
  425       1000  NOTRUN= 1000    /HAS NOT BEEN SCHEDULED TO RUN
  426       0400  FIP=    400     /FILE PHANTOM (NOTE: FIP HAS BEEN ASSUMED EQUAL TO SEGISZ)
  427       0200  SI=     200     /SYSTEM COMMAND INTERPRETER PHANTOM
  428       0100  FIX=    100     /JUST FINISHED DISC TRANSFER
  429             /BITS 7-11 CONTAIN THE JOB #
  430             
  431             /FIP TABLE DEFINITIONS
  432             
  433       0530  SATSIZ= 530
  434       5600  ENTABL= 5600
  435       6040  UTABLE= ENTABL+JOBMAX+JOBMAX+JOBMAX+JOBMAX+JOBMAX+JOBMAX+JOBMAX+JOBMAX
  436       6160  RTABLE= UTABLE+JOBMAX+JOBMAX+JOBMAX+JOBMAX

      /TSS/8 CONFIGURATION FOR UWM                                       Page 10


  437       0020  SIDATA=20       /SYSTEM INTERPRETER DATA
  438       0020          *SIDATA
  439             
  440 00020 0020  COMPTR, .       /POINTER TO LAST DEVTBL ENTRY SCANNED. INITIALIZE TO DEVTBL-1
  441 00021 0021  SIBUF,  .       /BUFFER STATE
  442 00022 0022  SICNT,  .
  443 00023 0023  COMDSP, .       /FIP RETURN DISPATCH
  444 00024 0024  SIFLG,  .       /COMMAND FLAGS
  445 00025 0025  SICHAR, .       /SAVE LAST CHAR FROM COMMAND SCAN
  446 00026 0026  SIREG,  .       /USER AC, LINK, PC
  447 00027 0027          .
  448 00030 0030          .
  449 00031 0031  TTCHAR, .       /TTY CHARACTER
  450             
  451       0032  CONSTANTS=SIDATA+12
  452       0032  *CONSTANTS
  453 00032 0002  C0002,  2
  454 00033 0003  C0003,  3
  455 00034 0004  C0004,  4
  456 00035 0007  C0007,  7
  457 00036 0037  C0037,  37
  458 00037 0100  C0100,  100
  459 00040 1000  C1000,  1000
  460 00041 7770  C7770,  7770
  461             
  462       0043  JOBCON=CONSTANTS+11     /JOB CONTROL
  463       0043  *JOBCON
  464             
  465 00043 0043  JOBTIM, .       /-#TICKS REMAINING TO RUN
  466 00044 3256  JOBTBA, JOBTBL  /JOB TABLE ADDRESS
  467             
  468       0046  FRSTOR=JOBCON+3
  469       0046  *FRSTOR
  470             
  471 00046 0046  FREE,   .       /POINTER TO HEAD OF FREE STORAGE
  472 00047 0047  FRECNT, .       /# FREE BLOCKS AVAILABLE

      /TSS/8 CONFIGURATION FOR UWM                                       Page 11


  473       0050  TIMDAT= FRSTOR+2        /CLOCK AND DATE
  474       0050  *TIMDAT
  475             
  476             /CLOCK
  477 00050 0050  CLK2,   .
  478 00051 0051  CLK1,   .
  479             
  480       0052  SCHDAT=TIMDAT+2
  481       0052  *SCHDAT         /SCHEDULING DATA
  482             
  483 00052 0052  COMCNT, .       /NUMBER OF COMMANDS WAITING EXECUTION
  484 00053 0053  SQREQ,  .       /SWAP REQUEST FLAG
  485 00054 0054  FINISH, .       /+(I)-(O) FIELD OF JOB BEING SWAPPED
  486 00055 0055  FIT,    .       /JOB # TO BE SWAPPED IN
  487 00056 0056  FORCE,  .       /FIELD TO BE SWAPPED OUT
  488             
  489       0060  DATEND= 60      /END OF FIELD 0 PAGE 0 DATA
  490             
  491       0156  FIPDAT=156      /DATA REFERENCED BY FIP
  492       0156          *FIPDAT
  493             
  494 00156 0400  C0400,  400
  495                     IFNZRO WRDSEG-400       <GLITCH>
  496       0156  SEGSIZ= C0400   /WRDSEG
  497 00157 0031  FIBASE, SWDEX+JOBMAX    /BASE ADDRESS OF ALLOCATABLE DISC STORAGE
  498 00160 0160  JOB,    .       /# OF CURRENT JOB
  499 00161 0161  JOBDAT, .       /ADDRESS OF CURRENT JOB DATA LIST. MUST RESIDE IN DATA FIELD.
  500 00162 7077  CORTBA, CORTBL-1        /CORE ALLOCATION TABLE
  501 00163 3200  DEVTBA, DEVTBL  /DEVICE TABLE
  502 00164 3451  DSUTBA, DSUTBL  /USER DISC REQUEST QUEUE
  503 00165 0165  DSBUSY, .       /DISC BUSY COUNT
  504             
  505             /THE DATE IS KEPT AS A 12 BIT NUMBER IN THE FORMAT
  506             /DATE=((YEAR-1974)*12+(MONTH-1))*31+DAY-1
  507             
  508 00166 0166  DATE,   .

      /TSS/8 CONFIGURATION FOR UWM                                       Page 12


  509       0167  FISUBR=FIPDAT+11        /INST FIELD INDEPENDENT SUBROUTINES
  510       0167          *FISUBR
  511             
  512       0400  FISUBL=400
  513             
  514       1600  BLT0=   FISUBL+1200
  515 00167 1600  BLTA,   BLT0            /BLOCK TRANSFER
  516       4567  BLT=    JMS I Z BLTA
  517 00170 1302  CORSRA, CORSRC
  518       4570  CORE=   JMS I CORSRA
  519 00171 1400  GETBA,  GETB
  520       4571  GETBLK= JMS I GETBA
  521 00172 1451  GETDBA, GETDB0          /GET A DATA BLOCK
  522       4572  GETDDB= JMS I GETDBA
  523 00173 2200  TOFA,   TOF             /FETCH CHARACTER
  524       4573  FETCH=  JMS I Z TOFA
  525 00174 6600  GETJT0, GETJTB          /GET JOB DATA TABLE ADDRESS
  526       4574  GETJTA= JMS I Z GETJT0
  527 00175 0404  GIRSCA, GIRSC           /STORE CHARACTER IN BUFFER
  528       4575  STORE=  JMS I Z GIRSCA
  529 00176 0600  RETBA,  RETB            /RETURN BLOCK TO FREE STORAGE
  530       4576  RETBLK= JMS I Z RETBA
  531 00177 2455  WAITA,  WSCHED
  532       5577  WAIT=   JMP I WAITA
  533             
  534             /TABLES
  535                     IFNZRO CPU-3 <
  536       7100  DATA=   7100    /START OF FIELD 0 TABLES AND BUFFERS
  537                     >
  538             
  539                     IFZERO CPU-3 <
  540             DATA=   7200    /IF DC02 THERE LEAVE ROOM FOR THE CODE
  541                     >
  542       7100  CORTBL= DATA    /CORE ASSIGNMENT TABLE
  543       7107  L2QTB=  CORTBL+7
  544                     IFZERO D680-2 <
  545             T8OBF=  L2QTB+20        /TTY CHAR OUT BUFFER 1. # LINES
  546             T8OBF2= T8OBF+NULINE    /TTY CHAR OUT BUFFER 2.  # LINES
  547             T8IBF=  T8OBF2+NULINE   /TTY CHAR IN BUFFER. 2*# LINES
  548             T8IN=   T8IBF+NULINE+NULINE     /TTI LIST. 4*#LINES+1
  549             TYBEND= T8IN+NULINE+NULINE+NULINE+NULINE+1
  550                     >
  551                     IFZERO D680 <
  552       7127  TIBUFF= L2QTB+20                /TTY INPUT BUFFER. # LINES
  553       7147  TOBUFF= TIBUFF+NULINE+1 /TTY OUTPUT BUFFER. # LINES
  554       7167  TIDEV=  TOBUFF+NULINE+1 /DEVICE CODES (INPUT)
  555                             IFNZRO CPU-3 <
  556       7207  TODEV=  TIDEV+NULINE+1  /DEVICE CODES (OUTPUT)
  557       7227  TYBEND= TODEV+NULINE+1
  558                             >
  559             
  560                             IFZERO CPU-3 <
  561             TODEV=  TIDEV+1
  562             TYBEND= TODEV+1
  563                             >
  564                     >
  565             

      /TSS/8 CONFIGURATION FOR UWM                                       Page 13


  566             IFZERO TC01     <DTASIZ=0>      /SIZE OF DTA CODE+BUFFERS
  567       1400  IFZERO TC01-1   <DTASIZ=1400>
  568             
  569       0000  IFZERO D689     <D689SIZ=0>     /SIZE OF 689AG CODE
  570             IFZERO D689-4   <D689SIZ=200>
  571             
  572       0200  PTRSIZ= 200
  573       0200  PTPSIZ= 200
  574       0200  PTPBUF= 200                     /START OF DEVICE BUFFERS
  575       0400  PTRBUF= PTPBUF+PTPSIZ
  576       0600  DTBUF1= PTRBUF+PTRSIZ
  577       1001  DTBUF2= DTBUF1+201
  578             
  579       6211  DATFLD=6211                     /MONITOR DATA FIELD SELECT
  580             
  581             IFZERO EAE-20   <MQREG=1>
  582       0001  IFZERO EAE      <IFZERO CPU-2 <MQREG=1>
  583                              IFNZRO CPU-2 <MQREG=0>>

      /TSS/8 CONFIGURATION FOR UWM                                       Page 14


  584             /SUPER CRITICAL LOCATIONS
  585             /THESE LOCATIONS ARE USED TO LINK TS8 AND TS8II
  586             
  587             /IT MAY BE NECESSARY TO ADJUST THEM ACCORDINGLY
  588             
  589             /DEFINED IN TS8:
  590             
  591       1600  BLT0=   1600
  592       1302  CORSRC= 1302    /SEARCH CORE TABLE
  593       0166  DATE=   166
  594       0300  DISMI0= 300     /DISMIS
  595       0273  DTINT=  273     /DECTAPE SLOT IN INTERRUPT CHAIN
  596       2375  IFNZRO CPU-3  <DTL20=   2375>
  597             IFZERO CPU-3   <DTL20=  6575>
  598       1400  GETB=   1400    /GET A BLOCK OF FREE CORE
  599       1451  GETDB0= 1451    /GET A DDB
  600       6600  GETJTB= 6600    /GETJTA
  601       0404  GIRSC=  404     /STORE A CHARACTER
  602       6013  GIR00=  6013    /ENTRY TO GIR (GENERAL INPUT ROUTINE)
  603       5770  INTCOM= 5770    /COMPLETION OF INTERRUPT CODE
  604       0354  L2EXIT= 354     /LEAVE LEVEL 2
  605       0104  L2SV0=  104     /LEVEL 2 SAVED PC
  606       2175  OVERLA= 2175    /FILE STUFF
  607       0576  OVRLA1= 0576
  608       5333  NFSEGS= 5333    /NUMBER OF FREE DISC SEGMENTS
  609       7420  PTPEMP= 7420    /PTP BUFFER EMPTY PTR
  610       7457  PTPFIL= 7457    /PTP BUFFER FILL PTR
  611       0211  IFZERO D680     <PTP1=  211>    /IOTS TO BE OVERLAYED
  612             IFZERO D680-2   <PTP1=  234>
  613       7477  PTP2=   7477
  614       7531  PTP3=   7531
  615       7533  PTP4=   7533
  616       7537  PTP5=   7537
  617       3604  READFI= 3604    /MORE FILE STUFF
  618       3400  RELOAD= 3400    /AUTOMATIC SYSTEM RESTART
  619       0600  RETB=   600     /RETURN A BLOCK TO FREE CORE
  620       0112  SOURCE= 112     /CHARACTER SOURCE FOR GIR
  621       6402  T8K9=   6402
  622       6401  T8LC=   6401
  623       6400  T8MNC=  6400    /DC08 COMMON STORAGE LOCATIONS
  624       0151  UUDF=   151     /USER DATA FIELD SELECT
  625       5172  UUOERR= 5172
  626       0326  UUOEX1= 326     /UUO (RESIDENT IOT HANDLERS) EXIT
  627       2455  WSCHED= 2455    /ADDRESS FOR WAIT
  628             
  629             /DEFINED IN TS8II
  630             
  631       0032  DTBST1= 32      /DT BUFFER 1 STATUS
  632       2000  DTL21=  PTRSIZ+PTPSIZ+DTASIZ    /DT LEVEL 2 DISPATCH
  633       7720  FIPBLK= 7720    /FIXED BLOCK FOR FIP I/O
  634       0151  F1OFFJ= 151     /FOR OFF /ON COMMANDS USED BY SI
  635       1400  UDTXA=  DTL21-400       /DT UUO SERVICE
  636       0174  UPTIM1= 174     /UPTIME COUNTER IN FIELD 1
  637       0173  UPTIM2= 173
  638       7730  WINBAS= 7730    /ADDRESS OF THE BASIC WINDOW
  639             
  640                     IFNZRO CPU-3 <

      /TSS/8 CONFIGURATION FOR UWM                                       Page 15


  641       2001  DTL11=  DTL21+1 /DT LEVEL 1 DISPATCH
  642                     >
  643             
  644                     IFZERO CPU-3 <
  645             DTL11=  DTL21+1+1       /DT LEVEL 1 DISPATCH; TO ALLOW FOR DISPLAY CHARACTERS
  646                     >
  647       2200  TOF=    DTL21+200       /FETCH A CHARACTER
  648       2316  BUFTST= TOF+116
  649       2400  CRASH=  TOF+200
  650       2401  CNTRLC= CRASH+1 /DECTAPE CTRL/C HANDLER
  651       2505  BRKTST= CRASH+105
  652       2600  TIMER0= CRASH+200
  653       2700  UPEEK1= TIMER0+100
  654       2734  DFINT1= UPEEK1+34
  655       3000  SWK1=   UPEEK1+D689SIZ+100
  656       3200  IFNZRO CPU-3    <DATA1= SWK1+200>
  657             
  658                     IFZERO CPU-3 <
  659             PDPBAS= SWK1
  660             DATA1=  PDPBAS+1000
  661             PDPEXT= PDPBAS
  662             PDPIDE= PDPEXT+2
  663             DSCX=   PDPBAS&6000+1
  664                     >
  665       3000  DEVCHK= DATA1-200
  666       3100  KSFPRA= DATA1-100
  667       3200  DEVTBL= DATA1
  668       3240  DEVTBE= DEVTBL+NULINE+NULINE+2
  669       3256  JOBTBL= DEVTBE+16
  670       3303  CLKTBL= JOBTBL+JOBMAX+1
  671       3330  TTYTBL= CLKTBL+JOBMAX+1
  672       3355  PRGTBL= TTYTBL+JOBMAX+1
  673       3451  DSUTBL= PRGTBL+JOBMAX+JOBMAX+JOBMAX
  674             
  675       4201  AUTOST= 4201    /SYSTEM RESTART ADDRESS IN INIT
  676             
  677             ///     END OF PARAMETERS & COMMON DATA

      /TSS/8 CONFIGURATION FOR UWM                                       Page 16


  678               679             /TS8 - UWM VERSION 23
  680             /
  681             /COPYRIGHT 1971                 DIGITAL EQUIPMENT CORPORATION
  682             /                               MAYNARD, MASSACHUSETTS
  683             /
  684             /PAGE 0
  685             
  686             FIELD 3                         /LOAD THIS INTO TRACK 3 ON DISK
  687       0001          *1
  688 30001 5402          JMP I .+1
  689 30002 0200          INT
  690             
  691 30003 0000  WS0,    0       /WORKING STORAGE FOR MAIN FLOW
  692 30004 0000  WS1,    0
  693 30005 0000  JOBSWA, 0
  694             
  695       0010  T8AX1=  10      /680 SERVICE
  696       0011  T8AX2=  11      /680 SERVICE
  697       0013  L2Q=    13      /LEVEL 2 QUEUE
  698       0014  L2QE=   14      /LEVEL 2 QUEUE EMPTY POINTER
  699       0015  AXS1=   15      /MISCELLANEOUS LEVEL 2 AUTO-INDEX
  700       0016  AXS2=   16      /  "
  701       0017  DSKPTR= 17      /DISC REQUEST QUEUE POINTER

      /TSS/8 CONFIGURATION FOR UWM                                       Page 17


  702             /SUBROUTINE DISPATCHES
  703             
  704       0060  SUBDSP= DATEND
  705       0060  *SUBDSP
  706             
  707       4460  IOR=    JMS I .
  708 30060 3427          IOR0    /INCLUSIVE OR
  709       5461  UUOEXT= JMP I .
  710 30061 0326          UUOEX1  /UUO EXIT
  711 30062 1753  FIUSER, DSUSER  /QUEUE FILE REQUEST IN DSUTBL
  712       4463  ERROR=  JMS I .
  713 30063 1673          SYSERR  /SYSTEM ERROR
  714       4464  TTYUSE= JMS I .
  715 30064 6731          TTYSRC  /FIND USER TTY
  716       5465  SCHED=  JMP I .
  717 30065 2464          SCHEDI  /SCHEDULE NEXT JOB NOW CORE RESIDENT
  718       5466  RSCHED= JMP I .
  719 30066 2447  RSCHEA,SCHED0   /FIND NEXT JOB TO BE RUN
  720       5467  EXIT=   JMP I .
  721 30067 0354  EXITA,  L2EXIT  /LEAVE LEVEL 2
  722       5470  REDO=   JMP I .
  723 30070 5735          REDO0   /REPEAT IOT LATER WHEN (HOPEFULLY) IT CAN BE COMPLETED
  724       4471  BREAK=  JMS I .
  725 30071 2505          BRKTST  /TEST IF CHARACTER IS A DELIMITER
  726       4472  GIR=    JMS I .
  727 30072 6013          GIR00   /ROUTE CHARACTERS TO JOBS AND TELETYPES
  728       4473  SAVJOB= JMS I .
  729 30073 3063          SAVJO0  /SAVE THE STATUS OF THE CURRENT JOB
  730       4474  RESJOB= JMS I .
  731 30074 6647          RESJO0  /RESTORE THE PREVIOUSLY SAVED STATUS
  732       5475  START=  JMP I . /START USER JOB
  733 30075 0630          SUJ
  734       4476  DSGO=   JMS I .
  735 30076 7702          DSGO0   /START DISC REQUEST
  736       4477  GETJTW= JMS I .
  737 30077 3653          GETJW0  /GET CONTENT OF JOB STATUS WORD (CURRENT JOB)
  738       4500  GETJTI= JMS I .
  739 30100 3350          GETJI0  /GET CONTENT OF JOB STATUS WORD (ANY JOB)
  740       5501  DISMIS= JMP I .
  741 30101 0300          DISMI0  /DISMIS INTERRUPTS
  742       4502  RUNABL= JMS I .
  743 30102 1635          RUNTST  /TEST IF SPECIFIED JOB IS RUNABLE
  744             
  745       0103  L2CON=  SUBDSP+23       /LEVEL 2 (EXEC) CONTROL
  746       0103  *L2CON
  747             
  748 30103 0103  L2SF,   .       /RELOCATION AND MODE
  749 30104 0104  L2SV0,  .       /SAVED PC
  750 30105 0105  L2SVLK, .       /SAVED LINK
  751 30106 0106  L2SA,   .       /SAVED ACCUMULATOR
  752       0107  TT8PG0= L2CON+4         /680 CONSTANTS

      /TSS/8 CONFIGURATION FOR UWM                                       Page 18


  753       0107          *TT8PG0
  754 30107 0000  T8SL,   0               /-STARTING LINE NUMBER
  755 30110 7761  T8NL,   -NULINE         /-NUMBER OF LINES
  756 30111 0000  T8LN,   0
  757       0112          *SOURCE
  758 30112 0112          .               /CHARACTER SOURCE FOR GIR
  759             
  760                     IFZERO D680-2 <
  761             T8INFL,   0          /INPUT READY FLAG
  762             T8BFK,  T8IBF-1     /TO RESET INPUT BUFFER POINTER
  763             T8NUML, NULINE          /NUMBER OF LINES
  764             T8K0,   0
  765             T8K7,     T8OBF      /K FOR 1ST OUTPUT BUFFER
  766             T8OUTK,   T8OBF      /POINTER TO FIRST OUTPUT BUFFER
  767             T8OTK2,   T8OBF2     /POINTER TO 2ND OUTPUT BUFFER
  768             T8K14,  0
  769             T8K36,    T8OBF2     /K FOR 2ND OUTPUT BUFFER
  770             T8CNT1,   -10        /HOLD MAJOR LOOP COUNTER
  771             T8CNT2,   0          /MINOR LOOP COUNTER
  772             T8CNT3,   0          /COUNTER FOR INPUT BUFFER
  773             T8K8,   T8COM
  774             T8K99,  T8KFLL
  775             T8SOF=  JMS I T8SOUT
  776             T8SOUT, T8OUTS
  777                     >
  778                     IFZERO D680 <
  779                             IFNZRO CPU-3 <
  780 30113 7206  TDEV,   TODEV-1 /START OF PT08 OUTPUT DEVICE CODE TABLE
  781 30114 7166  KDEV,   TIDEV-1 /START OF PT08 INPUT DEVICE CODE TABLE
  782                             >
  783             
  784                             IFZERO CPU-3 <
  785             DC02CH, 0                       /FREQUENTLY USED CHARACTER WORD FOR DC02
  786                             >
  787             
  788 30115 7127  KBUFF,  TIBUFF  /INPUT CHARACTER BUFFER (INDEXED BY LINE #)
  789 30116 7147  TBUFF,  TOBUFF  /OUTPUT CHARACTER BUFFER (INDEXED BY LINE #)
  790 30117 7166  TBUFFE, TOBUFF+NULINE   /END OF BUFFER
  791 30120 7146  KBUFFE, TIBUFF+NULINE   /END OF BUFFER
  792 30121 6006  C6006,  6006
  793 30122 6431  TSERI,  TSER    /PT08 INTERRUPT HANDLER-OUTPUT
  794 30123 6446  KSERI,  KSER    /PT08 INTERRUPT HANDLER-INPUT
  795             
  796                             IFNZRO CPU-3 <
  797 30124 6460  INT21,  INT2    /PT08 INTERRUPT SEARCH
  798                             >
  799       4525  REBOOT= JMS I .
  800 30125 3402          RBOOT   /INITIATE AUTOMATIC SYSTEM RESTART
  801             
  802       0132          *132            /SO REST OF PAGE 0 LINE UP
  803                     >
  804             
  805 30132 0000  KCHAR,  0       /CTY INPUT CHARACTER
  806 30133 0000  TCHAR,  0       /CTY OUTPUT CHARACTER
  807                     IFNZRO WRDSEG+7400      <GLITCH; *.-1>
  808             C7400,
  809 30134 7400  SEGLMK, -WRDSEG /MASK TO GET LOW-ORDER SEGMENT NUMBER

      /TSS/8 CONFIGURATION FOR UWM                                       Page 19


  810 30135 0047  BASWIN, -WINBAS-1
  811             
  812       4536  T8SIR=  JMS I T8SIN
  813 30136 6401  T8SIN,    T8INS      /SKIP IF INPUT READY
  814       0161  CJOBDA= JOBDAT
  815 30137 0006  C0006,  6
  816 30140 0070  C0070,  70
  817 30141 0200  C0200,  200
  818 30142 0377  C0377,  377
  819                     IFNZRO WRDSEG-1-377     <GLITCH; *.-1>
  820       0142  SEGSM1= C0377   /WRDSEG-1 (FOR GETTING ADDRESS WITHIN SEG)
  821             PTRCHK,         /IS PTR ASSIGNED?
  822 30143 3000  PTPCHK, DEVCHK  /IS PTP ASSIGNED
  823 30144 0600  C0600,  600
  824 30145 6203  C6203,  6203
  825 30146 7776  C7776,  7776
  826 30147 5172  UUOERA, UUOERR
  827       0150          *UUDF-1
  828       4150  UDF=    JMS .   /SELECT FIELD OF CURRENT JOB
  829 30150 0000  WS2,    0
  830 30151 0000          0       /DATA FIELD SELECT FOR FIELD OF CURRENT JOB
  831 30152 5550          JMP I .-2
  832 30153 0000  INTRC,  0               /TRAC # TO BE SWAPPED IN (DF32 0X00 ) ( RF08 000X)
  833 30154 0000  OUTTRC, 0               /TRAC # TO BE SWAPPED OUT
  834 30155 6677  CNOTR,  -1-NOTRUN-FIX
  835       0042  *42 
  836 30042 7101  FANCOR, CORTBL+1                /FIELD OF PHANTOM  IE FIELD 2
  837       0057  *57
  838 30057 0000  BONUS,  0               /JOB # JUST BROKEN OUT OF I/O WAIT
  839             
  840       0157  *157
  841 30157 7600  SWPIOA, SWPIO
  842       0045  *45
  843 30045 3025  SWPGD2, SWGOOD

      /TSS/8 CONFIGURATION FOR UWM                                       Page 20


  844                     PAGE
  845             /PRIORITY LEVEL 0 (HIGHEST PRIORITY)
  846             /KEEPS TRACK OF REAL TIME
  847             /ALWAYS ENTERED BY CLOCK FLAG
  848             /DISMISSES TO LEVEL 1 IF INTERRUPT WAS NOT FROM LEVEL 1
  849             /OTHERWISE, DISMISSES TO INTERRUPTED LOCATION.
  850             /
  851 30200 6254  INT,    SKPIOT          /USER IOT? (HAS TO BE CHECKED FIRST!!!)
  852             
  853                     IFZERO D680 <
  854 30201 5206          JMP INT0        /NO - GO CHECK THE REST
  855                     >
  856                     IFZERO D680-2 <
  857                     SKP             /NO - CHECK THE DC08
  858                     >
  859 30202 5605          JMP I UUOA      /YES, GO SAVE LEVEL 2 STUFF
  860             
  861                     IFZERO D680-2 <
  862                     T8SKP           /CLOCK TICK?
  863                     JMP INT0        /NO - KEEP LOOKING
  864                     ISZ CLKCNT      /YES - IS A SYSTEM TICK UP YET?
  865                     JMP I T8DISA    /NO - RUN DC08 INTERRUPT SERVICE
  866                     DCA CLKIT       /YES - SAVE THE AC
  867                     TAD L2TIMA
  868                     JMS I L2QPSH    / AND SCHEDULE 'L2TIME'
  869                     TAD CLKIN1
  870                     DCA CLKCNT      /RESET THE TICK COUNTER
  871                     TAD CLKIN2
  872                     DCA CLKIN1      /THEN SWAP COUNTERS SO SYSTEM CLOCK RATE
  873                     TAD CLKCNT      / IS THE SAME FOR ALL HARDWARE
  874                     DCA CLKIN2
  875                     TAD CLKIT       /GET AC AT INTERRUPT
  876                     JMP I .+1       /RUN DC08 SERVICE
  877             T8DISA, T8DIS
  878             CLKCNT, -34
  879             CLKIN1, -33     /DIVIDE CLOCK RATE BY 27 & 28 SO THE
  880             CLKIN2, -34     / EFFECTIVE RATE IS 550/27.5 = 20 TICKS/SEC
  881                     >

      /TSS/8 CONFIGURATION FOR UWM                                       Page 21


  882             /INTERRUPTS OTHER THAN 680 (LEVEL 1)
  883             /DISMISSES TO LEVEL 2 IF NOT FROM LEVEL 1 OR 2.
  884             
  885 30203 0000  INTAC,  0               /AC AT LEVEL 1
  886 30204 0000  INTLK,  0               /LINK AT LEVEL 1
  887 30205 3516  UUOA,   UUO0
  888             
  889                     IFNZRO PTP1-3-.&4000    <GLITCH; *.-1>
  890       0206          *PTP1-3
  891 30206 3203  INT0,   DCA INTAC       /SAVE AC AND LINK
  892 30207 7012          RTR
  893 30210 3204          DCA INTLK
  894             PTP1,
  895 30211 6021  PINT,   PSF             /PUNCH?
  896 30212 5215          JMP CLKINT      /NO
  897 30213 5614          JMP I .+1       /YES
  898 30214 7521          PTPINT
  899             
  900             CLKINT,
  901                     IFZERO D680 <
  902                             IFNZRO CPU-3 <
  903 30215 6133          CSCF            /SKIP AND CLEAR FLAG IF FLAG
  904                             >
  905                             IFZERO CPU-3 <
  906                     CLSK            /SKIP IF IT'S THE 12 CLOCK.
  907                             >
  908 30216 5227          JMP DTINT0
  909                             IFZERO CPU-1 <
  910                     CLA CMA         /RESET KW08 CLOCK
  911                     CCF CLB         /CLEAR FLAG AND LOAD BUFFER
  912                     CECI            / & ENABLE
  913                             >
  914                             IFZERO CPU-3 <
  915                     CLSA            /CLEAR THE CLOCK FLAG AND READ IN STATUS.
  916                     CLA             / THEN IGNORE THE STATUS
  917                             >
  918                             IFNZRO CPU-3 <
  919 30217 2225          ISZ CLKCNT      /IT WAS CLOCK - WAS IT A SYSTEM TIC?
  920 30220 5256          JMP CLKCHK      /NO - CHECK TO SEE IF WE'RE STILL UP
  921 30221 1226          TAD CLKINI      /YES - SET FOR NEXT SYSTEM TIC
  922 30222 3225          DCA CLKCNT
  923                             >
  924 30223 1254          TAD L2TIMA      /SCHEDULE L2TIME ON L2QUE
  925 30224 5300          JMP DISMI0
  926             
  927                     IFZERO CPU-2 <
  928 30225 7772  CLKCNT, -6      /NUMBER OF CLOCK TICKS/SYSTEM TICK = 6
  929 30226 7772  CLKINI, -6
  930                     >
  931                     IFNZRO CPU-2&4000 <
  932             CLKCNT, -3      /# OF CLOCK TICKS/SYSTEM TICK = 3
  933             CLKINI, -3
  934                     >>
  935             
  936             DTINT0,
  937                     IFZERO TC01-1 <
  938 30227 4272          JMS DTCHK       /CHECK & DISPATCH IF DECTAPE

      /TSS/8 CONFIGURATION FOR UWM                                       Page 22


  939                     >
  940             
  941 30230 6011  RINT,   RSF             /READER?
  942 30231 5234          JMP DFINT       /NO
  943 30232 5633          JMP I .+1       /YES
  944 30233 1142          PTRINT
  945             
  946             DFINT,
  947                     IFZERO RF08-40 <
  948                     DFSC            /DISC INTERRUPT?
  949                     >
  950                     IFZERO RF08 <
  951 30234 6623          DFSC DFSE       /DISC INTERRUPT?
  952                     >
  953 30235 5242          JMP KINT        /NO
  954 30236 6621          DFSE            /SKIP ON NO ERROR (IF DF32)
  955                     IFZERO RF08-40 <
  956                     SKP
  957                     >
  958 30237 2241          ISZ DSWAIT      /EXIT TO HANDLER+1 TO INDICATE ERROR
  959 30240 5641          JMP I DSWAIT
  960 30241 0000  DSWAIT, 0               /SET BY DISC SERVICE
  961             
  962                     IFZERO D680-2 <
  963             KINT,   KSF             /KEYBOARD?
  964                     JMP TINT        /NO
  965                     KRB             /INPUT CHAR AND CLEAR FLAG
  966                     TAD C1000
  967                     DCA KCHAR
  968                     JMP I KECHOA    /SCHEDULE ECHOING IF NECESSARY
  969             TINT,   TSF             /TELEPRINTER?
  970                     JMP I DFINTA    /CHECK DATA PHONES
  971                     JMP I .+1       /YES
  972                     TINT2
  973             DFINTA, DFINTD
  974             KECHOA, KECHO
  975                     >
  976             
  977                     IFZERO D680 <
  978                             IFNZRO CPU-3 <
  979 30242 1114  KINT,   TAD KDEV        /DEVICE CODE LIST-1
  980 30243 4524          JMS I INT21     /SEARCH LIST FOR INTERRUPT
  981 30244 7207           TIDEV+NULINE+1
  982 30245 5523          JMP I KSERI     /FOUND - SERVICE THE KEYBOARD
  983 30246 1113  TINT,   TAD TDEV        /SEARCH
  984 30247 4524          JMS I INT21
  985 30250 7227           TODEV+NULINE+1
  986 30251 5522          JMP I TSERI     /SERVICE THE TELEPRINTER
  987 30252 5653          JMP I .+1       /CONTINUE IN THE INTERRUPT CHAIN
  988 30253 1275          DFINTD
  989                             >
  990             
  991                             IFZERO CPU-3 <
  992             KINT,   JMS I   KDC21           /CHECK FOR TTY INPUT INTERUPT
  993                     JMP I   KSERI           /YEP. IT'S THE ONE
  994             TINT,   JMS I   TDC21           /CHECK FOR KEYBOARD INTERUPT
  995                     JMP I   TSERI           /IT'S THE KEYBOARD. DO IT, BABY!

      /TSS/8 CONFIGURATION FOR UWM                                       Page 23


  996                     REBOOT          /NEITHER - TIME TO RESTART
  997             
  998             KDC21,  DC02K
  999             
 1000             JBDCY,  JMS I   JBDCSL
 1001                     TAD     DC02CH          /THE CHARACTER NOW.
 1002                     MTLS                    /SEND OUT THE SELECTED CHARACTER
 1003                     JMP I   JBPTLS          /AND RETURN NOW
 1004             
 1005             JBDCSL, DC02SL
 1006             JBPTLS, JBBTSL
 1007             TDC21,  DC02T
 1008                             >
 1009                     >
 1010 30254 2406  L2TIMA, L2TIME
 1011 30255 0000  CLKIT,  0       /TEMPORARY FOR AC
 1012             
 1013                     IFNZRO 262-.&4000 <
 1014             CLKCHK= DISMI2
 1015                     >
 1016                     IFZERO 262-.&4000 <
 1017 30256 7604  CLKCHK, LAS
 1018 30257 1266          TAD OPCHK
 1019 30260 7650          SNA CLA         /OPERATOR FORCED RESTART?
 1020 30261 4525          REBOOT          /YES
 1021 30262 2265          ISZ CLKMIS      /MISSED TOO MANY TICKS?
 1022 30263 5374          JMP DISMI2
 1023 30264 4525          REBOOT          /YES - RESTART THE SYSTEM
 1024 30265 0000  CLKMIS, 0
 1025 30266 3457  OPCHK,  -4321   /TOP SECRET RESTART CODE (SHH!)
 1026                     >
 1027                     IFZERO TC01-1 <
 1028                     IFNZRO DTINT-1-.&4000   <GLITCH; *.-1>
 1029       0272          *DTINT-1
 1030             /ROUTINE TO CHECK FOR A DECTAPE INTERRUPT.
 1031             /BY MAKING IT A SUBROUTINE, WE CAN CALL IT SEVERAL TIMES
 1032             /IN OUR INTERRUPT CHECKING, THEREBY MAKING IT HIGHLY
 1033             /UNLIKELY THAT WE WOULD MISS AN INTERRUPT & GET A 'TIM' ERROR.
 1034 30272 0000  DTCHK,  0
 1035 30273 7000  DTINT,  NOP             /DTSF WHEN DECTAPE IS RUNNING
 1036 30274 5672          JMP I DTCHK     /NOT DECTAPE - JUST RETURN
 1037 30275 6213          CIF DATFLD      /UP TO FIELD 1 DISPATCH
 1038 30276 5677          JMP I .+1
 1039 30277 2001          DTL11           /DECTAPE LEVEL 1 DISPATCH
 1040                     >

      /TSS/8 CONFIGURATION FOR UWM                                       Page 24


 1041             /DISMIS ROUTINE
 1042             /ENTERED FROM INTERRUPT HANDLER TO ENTER LEVEL 2 FROM LEVEL 1
 1043             /AC = ADDRESS OF LEVEL 2 SERVICE ROUTINE
 1044             /OR 0 IF NO LEVEL 2 SERVICE REQUIRED
 1045             
 1046                     IFNZRO DISMI0-.&4000    <GLITCH; *.-1>
 1047       0300          *DISMI0
 1048 30300 7450  DISMI0, SNA             /DISMIS INTERRUPTS
 1049 30301 5374          JMP DISMI2      /NO-BACK TO WHATEVER WAS GOING ON BEFORE
 1050 30302 3255          DCA CLKIT       /SAVE DISPATCH
 1051 30303 6234          RIB             /MODE BIT = 100
 1052 30304 0037          AND C0100
 1053 30305 7650          SNA CLA         /FROM USER MODE?
 1054 30306 5372          JMP DISMI1      /NO - QUEUE REQUEST UNTIL LATER
 1055 30307 1203          TAD INTAC       /MOVE THE AC TO LEVEL 2
 1056 30310 3106          DCA L2SA
 1057 30311 1204          TAD INTLK       /MOVE LINK TO LEVEL 2
 1058 30312 3105          DCA L2SVLK
 1059 30313 1000          TAD 0           /MOVE PC TO LEVEL 2
 1060 30314 3104          DCA L2SV0
 1061 30315 6234          RIB
 1062 30316 3103  INT81,  DCA L2SF        /FIELDS AND MODE TO LEVEL 2
 1063 30317 7300  L2EXT1, CLA CLL         /AC & LINK = 0 UPON ENTRANCE TO LEVEL-2 CODE
 1064 30320 6203          CDF CIF         /DISMISS TO EXEC MODE, FIELD 0, LEVEL 2
 1065 30321 6001          ION
 1066 30322 5655          JMP I CLKIT
 1067             
 1068 30323 2133  L2QPSH, L2QUER  /PUSH ADDRESS ONTO L2QUE
 1069             
 1070             /ROUTINE TO CAUSE AN EFFECTIVE SKIP BEFORE ENTERING UUOEXT.
 1071 30324 2104  UUOEX2, ISZ L2SV0       /POSITIVE FLAG TEST EXIT
 1072 30325 7000          NOP
 1073             /
 1074             /'UUOEXT' - EXIT ROUTINE FOR RESIDENT IOT HANDLERS.
 1075             /ENTERED WITH AC = WAIT-BITS TO CLEAR IN STR1 & SET IN WAIT-MASK 1
 1076 30326 7450  UUOEX1, SNA             /ANY WAIT CONDITIONS?
 1077 30327 5350          JMP UUOEX4      /NO - JUST CLEAN UP
 1078 30330 3003          DCA WS0         /YES - SAVE BITS TO CLEAR
 1079 30331 1370          TAD USKIOT
 1080 30332 7650          SNA CLA         /WAS IT A NEGATIVE SKIP-TEST?
 1081 30333 5337          JMP UUOEX3      /NO - SET THE WAIT-MASK
 1082 30334 3370          DCA USKIOT      /YES - CLEAR OUR SKIP-TEST SWITCH
 1083 30335 4766          JMS I IOLOOP    /IS IT COUPLED TO A 'JMP .-1'?
 1084 30336 5350          JMP UUOEX4      /NO - THEN WE DON'T MAKE HIM WAIT
 1085 30337 4477  UUOEX3, GETJTW          /YES - SET UP THE WAIT-MASK
 1086 30340 0003           JOBWMK
 1087 30341 7201          CLA IAC
 1088 30342 1003          TAD WS0         /WAIT ON THIS FLAG+JSWAIT
 1089 30343 6211          DATFLD
 1090 30344 3405          DCA I JOBSWA    /SET WAIT MASK 1
 1091 30345 2005          ISZ JOBSWA
 1092 30346 3405          DCA I JOBSWA    /CLEAR WAIT MASK 2
 1093 30347 1003          TAD WS0         /BITS TO CLEAR
 1094 30350 4771  UUOEX4, JMS I UUOWAT    /CHECK FOR WAIT
 1095 30351 1160          TAD JOB
 1096 30352 4502          RUNABL          /JOB STILL RUNABLE?
 1097 30353 5577          WAIT            /NO - RESCHEDULE

      /TSS/8 CONFIGURATION FOR UWM                                       Page 25


 1098                                     /YES - DROP THROUGH TO 'EXIT'
 1099             
 1100             /LEVEL-2 EXIT ROUTINE.
 1101             /BEFORE DISMISSING BACK TO USER JOB, IT IS A GOOD IDEA TO
 1102             /CHECK AND SEE IF ANY OTHER LEVEL-2 PROCESSING HAS BEEN
 1103             /SCHEDULED WHILE WE WERE WORKING ON THE LAST REQUEST.
 1104             /WE CAN ASCERTAIN IF THIS IS THE CASE BY COMPARING THE
 1105             /LEVEL-2 (L2QUE) EMPTY AND FILL POINTERS; IF THEY ARE
 1106             /EQUAL, THEN WE'RE DONE AND CAN GO TO L2EX1, WHERE BOTH
 1107             /POINTERS ARE RESET. IF THEY ARE UNEQUAL, WE GET THE NEXT
 1108             /QUEUE ENTRY & DISPATCH TO IT.
 1109             
 1110 30354 6201  L2EXIT, CDF
 1111 30355 6002          IOF             /NO INTERRUPTS WHILE CHECKING L2QUE STATUS
 1112 30356 1013          TAD L2Q
 1113 30357 7041          CIA
 1114 30360 1014          TAD L2QE        /-FILL PTR + EMPTY PTR
 1115 30361 7650          SNA CLA         /ARE FILL & EMPTY POINTERS EQUAL?
 1116 30362 5767          JMP I L2EX1A    /YES - WE ARE CAUGHT UP
 1117 30363 1414          TAD I L2QE      /NO; GET ADDRESS FROM L2QUE
 1118 30364 3255          DCA CLKIT
 1119 30365 5317          JMP L2EXT1      /GO CLEAR AC & LINK AND DISPATCH
 1120             
 1121 30366 0744  IOLOOP, IOWAIT
 1122 30367 3700  L2EX1A, L2EX1
 1123 30370 0000  USKIOT, 0
 1124 30371 1510  UUOWAT, DEVWAT
 1125             
 1126 30372 1255  DISMI1, TAD CLKIT
 1127 30373 4723          JMS I L2QPSH    /QUEUE REQUEST AND CHECK FOR OVERFLOW
 1128 30374 1204  DISMI2, TAD INTLK       /RESTORE LINK AND AC
 1129 30375 7106          CLL RTL
 1130 30376 1203          TAD INTAC
 1131 30377 6244          RMF             /RESTORE IF, DF & MODE
 1132 30400 6001          ION
 1133 30401 5400          JMP I 0         /BACK TO INTERRUPTED PROGRAM

      /TSS/8 CONFIGURATION FOR UWM                                       Page 26


 1134                     IFNZRO GIRSC-.&4000     <GLITCH; *.-1>
 1135       0404          *GIRSC
 1136             /STORE  CHARACTER
 1137             /CALL WITH ADDRESS OF DDB IN AC, CHARACTER IN TTCHAR
 1138             /       STORE
 1139             /       WON'T FIT
 1140             /       OK
 1141             
 1142 30404 0000  GIRSC,  0
 1143 30405 1034          TAD DBINPA
 1144 30406 3365          DCA GIRSB       /POINTS TO ADDRESS OF BUFFER (FILL-POINTER)
 1145 30407 6214          RDF             /FIGURE OUT WHERE WE CAME FROM...
 1146 30410 1145          TAD C6203       /AND SET UP EXIT BACK THERE
 1147 30411 3311          DCA GIRFLD
 1148 30412 6211          DATFLD
 1149 30413 1365          TAD GIRSB       /ADDRESS OF WORD 5 OF DDB
 1150 30414 7001          IAC
 1151 30415 3366          DCA GIRSCT      /ADDRESS OF FILL COUNT IN DDB
 1152 30416 1765          TAD I GIRSB
 1153 30417 7650          SNA CLA         /IS BUFFER SET UP? (I.E. IS FILL POINTER NON-ZERO?)
 1154 30420 5341          JMP GIRSC8      /NO-GO GET A BUFFER
 1155 30421 2766          ISZ I GIRSCT    /ANY ROOM LEFT?
 1156 30422 5277          JMP GIRSC4      /YES
 1157 30423 1365          TAD GIRSB       /CAN WE GET ANOTHER BUFFER
 1158 30424 1032          TAD C0002
 1159 30425 4770          JMS I GRBUFS    /TEST TO SEE IF HE ALREADY HAS "MAXBUF" BUFFERS
 1160 30426 7770           -MAXBUF
 1161 30427 5260          JMP GIRSC2      /NO - GIVE HIM ANOTHER
 1162 30430 1112          TAD SOURCE
 1163 30431 1373          TAD M177
 1164 30432 7650          SNA CLA         /IS THIS 'SI' TYPING?
 1165 30433 5241          JMP GIRSC1      /YES
 1166 30434 1112          TAD SOURCE
 1167 30435 0037          AND C0100
 1168 30436 7640          SZA CLA         /NO - IS IT A PROGRAM TYPING?
 1169 30437 5357          JMP GIRSCX      /YES - NO MORE BUFFERS
 1170 30440 1371          TAD GRPROG      /NO - SET LIMIT FOR KEYBOARD
 1171 30441 1372  GIRSC1, TAD GRSI        / OR FOR 'SI'
 1172 30442 3246          DCA GIRST
 1173 30443 7326          CLA CLL CML RTL
 1174 30444 1365          TAD GIRSB
 1175 30445 4770          JMS I GRBUFS    /HAS HE REACHED HIS ABSOLUTE LIMIT?
 1176 30446 0000  GIRST,   0
 1177 30447 7410          SKP             /NO - SET FLAG FOR 'XOFF' & GIVE HIM ANOTHER
 1178 30450 5357          JMP GIRSCX      /YES - NO MORE BUFFERS; MAYBE RING BELLS NOW
 1179 30451 6201          CDF
 1180 30452 1764          TAD I GIRDB1    /GET THE INPUT DDB ADDRESS FROM 'GIR'
 1181 30453 6211          DATFLD
 1182 30454 7450          SNA             /IS IT ZERO?
 1183 30455 5260          JMP GIRSC2      /YES - WE MUST BE COMING FROM 'SI'
 1184 30456 4460          IOR             /SET THE FLAGS TO SEND AN 'XOFF'
 1185 30457 2400           DXON+DXOUT
 1186 30460 7344  GIRSC2, CLL CLA CMA RAL /IS THERE ENOUGH (I.E. 2 BLOCKS) OF FREE CORE LEFT?
 1187 30461 1047          TAD FRECNT
 1188 30462 7750          SPA SNA CLA
 1189 30463 5357          JMP GIRSCX      /NO-DON'T GIVE HIM ANOTHER BUFFER NOW
 1190 30464 1765          TAD I GIRSB     /OK-GET A BUFFER

      /TSS/8 CONFIGURATION FOR UWM                                       Page 27


 1191 30465 6201          CDF
 1192 30466 4571          GETBLK          /NO. LINK NEW BUFFER
 1193 30467 5357          JMP GIRSCX      /NONE AVAILABLE
 1194 30470 6211          DATFLD
 1195 30471 1765          TAD I GIRSB     /POINTER TO HEAD OF NEW BUFFER
 1196 30472 3246          DCA GIRST
 1197 30473 1646          TAD I GIRST
 1198 30474 3765          DCA I GIRSB     /BUFFERS NOW CHAINED TOGETHER
 1199 30475 1367  GIRSC3, TAD GIRSIZ      /INITIALIZE CHAR COUNT TO -12
 1200 30476 3766          DCA I GIRSCT    /AND SAVE IN DDB
 1201 30477 1766  GIRSC4, TAD I GIRSCT    /ARE WE DOING LAST THREE CHARACTERS IN BLOCK
 1202 30500 1033          TAD C0003
 1203 30501 7500          SMA
 1204 30502 5314          JMP GIRSC6      /YES-THEY ARE SPLIT UP IN LEFTMOST 4 BITS OF BUFFER
 1205 30503 7041          CIA             /NO-GET ADDRESS WITHIN BUFFER
 1206 30504 1765          TAD I GIRSB     /START OF BUFFER
 1207 30505 3365          DCA GIRSB       /ADDRESS TO STORE CHARACTER
 1208 30506 1031          TAD TTCHAR
 1209 30507 3765          DCA I GIRSB     /STORE CHARACTER
 1210 30510 2204  GIRSC5, ISZ GIRSC       /INDICATE SUCCESS
 1211 30511 0000  GIRFLD, 0               /RETURN TO CALLING FIELD
 1212 30512 7300          CLA CLL
 1213 30513 5604          JMP I GIRSC
 1214 30514 7104  GIRSC6, CLL RAL         /LAST 3 CHARS REQUIRE SPECIAL TREATMENT
 1215 30515 1765          TAD I GIRSB     /(CHARACTER COUNT-3)*2+1 IS ADDRESS IN BUFFER FOR HALF CHAR.
 1216 30516 3365          DCA GIRSB       /ADDRESS IN BUFFER
 1217 30517 7346          CLA CLL CMA RTL /AC = -2
 1218 30520 3366          DCA GIRSCT
 1219 30521 1031          TAD TTCHAR
 1220 30522 7106  GIRSC7, CLL RTL; RTL
      30523 7006
 1221 30524 3246          DCA GIRST
 1222 30525 2365          ISZ GIRSB       /GET TO THE PROPER BUFFER-WORD
 1223 30526 1765          TAD I GIRSB
 1224 30527 0142          AND C0377       /SAVE CHARACTER ALREADY IN LOW ORDER 8 BITS
 1225 30530 3765          DCA I GIRSB
 1226 30531 1246          TAD GIRST       /NOW GET HIGH ORDER 4 BITS
 1227 30532 0134          AND C7400
 1228 30533 1765          TAD I GIRSB     /AND SAVE IN CURRENT LOCATION IN BUFFER
 1229 30534 3765          DCA I GIRSB
 1230 30535 1246          TAD GIRST       /GET BACK THE CHARACTER (SHIFTED)
 1231 30536 2366          ISZ GIRSCT      /HAVE WE DONE BOTH HALVES?
 1232 30537 5322          JMP GIRSC7      /NO - DO SECOND HALF
 1233 30540 5310          JMP GIRSC5      /YES - RETURN
 1234             
 1235 30541 6201  GIRSC8, CDF             /ATTACH A BUFFER TO FILL POINTER
 1236 30542 1365          TAD GIRSB       /LINK ADDRESS
 1237 30543 4571          GETBLK
 1238 30544 5311          JMP GIRFLD      /CAN'T GET ONE - TOO BAD
 1239 30545 6211          DATFLD          /OK - SET UP POINTERS
 1240 30546 1366          TAD GIRSCT      /ADDRESS OF FILL COUNT
 1241 30547 7001          IAC             /+1 ..
 1242 30550 3246          DCA GIRST       / ADDRESS OF EMPTY POINTER
 1243 30551 1765          TAD I GIRSB     /SET EMPTY POINTER EQUAL TO FILL POINTER
 1244 30552 3646          DCA I GIRST     /SINCE ITS THE ONLY BUFFER
 1245 30553 2246          ISZ GIRST       /NOW INITIALIZE THE EMPTY COUNT
 1246 30554 1367          TAD GIRSIZ      /TO -12

      /TSS/8 CONFIGURATION FOR UWM                                       Page 28


 1247 30555 3646          DCA I GIRST     / IN THE DDB
 1248 30556 5275          JMP GIRSC3
 1249             
 1250 30557 6211  GIRSCX, DATFLD          /COULDN'T SQUEEZE CHARACTER IN
 1251 30560 7240          STA             /BUT WE ALREADY BUMPED FILL COUNT
 1252 30561 1766          TAD I GIRSCT    /SO NOW WE UNBUMP IT
 1253 30562 3766          DCA I GIRSCT
 1254 30563 5311          JMP GIRFLD      /AND EXIT WITHOUT SKIPPING
 1255             
 1256                     IFNZRO DDBINP-4 <GLITCH; *.-1>
 1257       0034  DBINPA= C0004   /DDBINP
 1258 30564 6012  GIRDB1, GIRDBA
 1259 30565 0000  GIRSB,  0
 1260 30566 0000  GIRSCT, 0
 1261 30567 7766  GIRSIZ, -12     /10 (DECIMAL) CHARACTERS/BLOCK
 1262 30570 3452  GRBUFS, BUFSIZ
 1263 30571 0007  GRPROG, -MAXBUF-1+MAXBUF+MAXBUF
 1264 30572 7760  GRSI,   -MAXBUF-MAXBUF  /SI GETS TWICE NORMAL BUFFER SPACE
 1265 30573 7601  M177,   -177
 1266             
 1267                     IFNZRO OVRLA1-.&4000    <GLITCH; *.-1>
 1268       0576          *OVRLA1
 1269             /
 1270             /DISC COMPLETION DISPATCHER FOR SYSTEMIC OVERLAYS.
 1271 30576 4462  OVRLA1, JMS I FIUSER
 1272 30577 5577          WAIT

      /TSS/8 CONFIGURATION FOR UWM                                       Page 29


 1273                     PAGE
 1274             
 1275             /RETURN TTY BUFFER TO FREE LIST
 1276             /CALL   TAD BUFFER ADDRESS
 1277             /       RETBLK
 1278             /       RETURN WITH LINK IN AC
 1279             
 1280 30600 0000  RETB,   0
 1281 30601 7450          SNA             /LEGAL RELEASE?
 1282 30602 4525          REBOOT          /NO - ERROR *****
 1283 30603 3306          DCA RETB1       /SAVE BLOCK ADDRESS
 1284 30604 6214          RDF
 1285 30605 1145          TAD C6203
 1286 30606 3224          DCA RETF        /FOR RETURNING TO CALLER
 1287 30607 1306          TAD RETB1
 1288 30610 1226          TAD RETFIP
 1289 30611 7650          SNA CLA         /IS THIS THE 'FIP' I/O BLOCK?
 1290 30612 5224          JMP RETF        /YES - IT DOESN'T GET RELEASED
 1291 30613 6211          DATFLD
 1292 30614 1706          TAD I RETB1     /NO - GET THE LINK FROM THE BLOCK
 1293 30615 3305          DCA RETBL
 1294 30616 1046          TAD FREE        /GET OLD START OF FREE LIST
 1295 30617 3706          DCA I RETB1     /PUT IT IN LINK
 1296 30620 1306          TAD RETB1       /PUT ADDRESS OF THIS BLOCK
 1297 30621 3046          DCA FREE        / AS START OF FREE LIST
 1298 30622 2047          ISZ FRECNT      /INCREMENT THE FREE-COUNT
 1299 30623 1305          TAD RETBL
 1300 30624 0000  RETF,   0               /RETURN WITH LINK
 1301 30625 5600          JMP I RETB
 1302             
 1303 30626 0060  RETFIP, -FIPBLK

      /TSS/8 CONFIGURATION FOR UWM                                       Page 30


 1304 30627 0040  SJIOTC, JSIOTC
 1305             
 1306             /START USER JOB
 1307             
 1308 30630 1103  SUJ,    TAD L2SF        /CLEAR NOTRUN FLAG SO JOB CAN BE SWAPPED
 1309 30631 0035          AND C0007       /GET CORTBL INDEX
 1310 30632 1162          TAD CORTBA
 1311 30633 3304          DCA SUJSRC      /POINTS TO ENTRY IN CORTBL FOR THIS JOB
 1312 30634 1704          TAD I SUJSRC    /GET CORTBL ENTRY
 1313 30635 0155          AND CNOTR       /CLEAR NOT RUN BIT
 1314 30636 3704          DCA I SUJSRC    /SAVE ENTRY
 1315 30637 1160          TAD JOB
 1316 30640 0144          AND C0600
 1317 30641 7640          SZA CLA         /IS THIS A PHANTOM?
 1318 30642 5467          EXIT            /YES - WE'RE ALL SET
 1319 30643 4743          JMS I SUJUDF    /SET UUDF
 1320 30644 4477          GETJTW          /NO. IOT RESULTS TO USER?
 1321 30645 0000           JOBSTS
 1322 30646 6211          DATFLD
 1323 30647 0227          AND SJIOTC      /IOTC BIT IN STR0
 1324 30650 7450          SNA
 1325 30651 5325          JMP SUJ4        /NO - WAS THERE A SYSTEM ERROR?
 1326 30652 7040          CMA             /CLEAR THE BIT
 1327 30653 0405          AND I JOBSWA    /JSIOTC:=0
 1328 30654 3405          DCA I JOBSWA    /SAVE NEW STR0
 1329 30655 4477          GETJTW          /GET # ARGUMENTS TO RETURN
 1330 30656 0007           JOBLNK
 1331 30657 3304          DCA SUJSRC      /POINTS TO WORD 1 OF PARAMETER BLOCK
 1332 30660 1105          TAD L2SVLK      /GET THE LINK SAVE-WORD
 1333 30661 7112          CLL RTR
 1334 30662 7012          RTR
 1335 30663 7010          RAR
 1336 30664 0035          AND C0007       /GET THE PARM COPY-COUNT
 1337 30665 7450          SNA             /IS IT A ZERO?
 1338 30666 5315          JMP SUJ3        /YES - JUST BACK FROM WINDOW-TURN
 1339 30667 7041          CIA
 1340 30670 3307          DCA SUJCNT      /SAVE COUNT
 1341 30671 1106          TAD L2SA
 1342 30672 3306          DCA SUJDES      /SET THE USER'S PACKET ADDRESS
 1343 30673 6211          DATFLD
 1344 30674 1704          TAD I SUJSRC    /THEN GET THE VALUE
 1345 30675 3106          DCA L2SA        / TO RETURN IN HIS AC
 1346 30676 2304          ISZ SUJSRC      /POINTS TO WORD 2 OF BLOCK
 1347 30677 1151          TAD UUDF        /TRANSFER RESULTS TO USER'S FIELD
 1348 30700 3305          DCA SUJDFS
 1349 30701 6201          CDF
 1350 30702 4567          BLT             /MOVE RESULTS TO USER
 1351 30703 6211           DATFLD         /FROM FIELD 1
 1352 30704 0000  SUJSRC,  0              /SOURCE ADDRESS
 1353             RETBL,
 1354 30705 0000  SUJDFS,  0              /TO USER FIELD
 1355             RETB1,
 1356 30706 0000  SUJDES,  0              /AT THIS ADDRESS
 1357 30707 0000  SUJCNT,  0              /-WORD COUNT
 1358 30710 7240          CLA CMA
 1359 30711 1304          TAD SUJSRC      /GET THE BLOCK ADDRESS
 1360 30712 4576          RETBLK          / AND RELEASE THE BLOCK

      /TSS/8 CONFIGURATION FOR UWM                                       Page 31


 1361 30713 7600  CM200,  -200            / (ALSO ACTS AS 'CLA')
 1362 30714 5467          EXIT            /OFF TO USER PROGRAM
 1363             
 1364 30715 4477  SUJ3,   GETJTW          /COMING BACK FROM WINDOW TURN; WAIT ON FILE STUFF
 1365 30716 0001           JOBSTS+1
 1366 30717 0146          AND C7776
 1367 30720 6211          DATFLD
 1368 30721 3405          DCA I JOBSWA    /CLEAR THE DUMMY WAIT BIT IN STR1
 1369 30722 1304          TAD SUJSRC      /UFILE RETURN
 1370 30723 5724          JMP I .+1
 1371 30724 4526          SIFILE
 1372             
 1373 30725 1405  SUJ4,   TAD I JOBSWA    /GET STR0
 1374 30726 0035          AND SUJERR
 1375 30727 7650          SNA CLA         /SYSTEM ERROR?
 1376 30730 5467          EXIT            /NO - OFF TO USER JOB
 1377             /
 1378             /THE USER HAS AN ERROR CODE SET. SINCE WE GOT HERE, HE
 1379             /MUST BE ENABLED TO HANDLE IT; WE DO AN EFFECTIVE
 1380             /'JMS' TO HIS ERROR-HANDLING ROUTINE.
 1381 30731 4477          GETJTW          /GET HIS ERROR-ADDRESS
 1382 30732 0006           JOBERR
 1383 30733 3003          DCA WS0         /POINTS TO HIS ROUTINE
 1384 30734 1104          TAD L2SV0
 1385 30735 4150          UDF
 1386 30736 3403          DCA I WS0       /SAVE THE ERROR-ADDRESS IN HIS ROUTINE
 1387 30737 1003          TAD WS0
 1388 30740 7001          IAC
 1389 30741 3104          DCA L2SV0       / AND SET THE NEXT LOCATION AS HIS PC
 1390 30742 5467          EXIT            /THEN JUST EXIT
 1391             
 1392       0035  SUJERR= C0007
 1393 30743 3510  SUJUDF, UDFSET

      /TSS/8 CONFIGURATION FOR UWM                                       Page 32


 1394             /IF THE USER EXECUTES A FLAG TEST IOT (EG KSF, TSF, ETC.)
 1395             /THEN IT IS USEFUL TO KNOW IF HE IS IN A "WAIT LOOP"
 1396             /(I.E. KSF; JMP .-1) OR IF HE IS JUST CHECKING TO SEE
 1397             /IF THERE IS ANYTHING WORTH LOOKING AT.  IN THE FORMER
 1398             /CASE, WE WILL DISMIS THE USER UNTIL THE FLAG TEST IS
 1399             /SATISFIED; IN THE LATTER, THE USER IS ALLOWED TO
 1400             /PROCEED, REGARDLESS OF THIS FLAG'S STATUS.
 1401 30744 0000  IOWAIT, 0               /DETERMINE IF USER'S INSTRUCTION IS JMP .-1
 1402 30745 4150          UDF             /SELECT USER'S FIELD
 1403 30746 1504          TAD I L2SV0     /GET INSTRUCTION FOLLOWING SKIP IOT
 1404 30747 7041          CIA
 1405 30750 3005          DCA JOBSWA      /-INSTRUCTION
 1406 30751 7240          STA
 1407 30752 1104          TAD L2SV0       /COMPUTE .-1
 1408 30753 0371          AND CP0177      /SAVE LOW ORDER 7 BITS
 1409 30754 1372          TAD C5200       /JMP DIRECT CURRENT PAGE
 1410 30755 1005          TAD JOBSWA      /USER'S INSTRUCTION
 1411 30756 7450          SNA             /JMP .-1 ON CURRENT PAGE?
 1412 30757 5367          JMP IOWAT2      /YES
 1413 30760 1313          TAD CM200
 1414 30761 7640          SZA CLA         /NO - PAGE 0?
 1415 30762 5370          JMP IOWAT1      /NO-- NOT A JMP .-1
 1416 30763 7240          CLA CMA
 1417 30764 1104          TAD L2SV0       /ADDRESS OF USER INSTRUCTION
 1418 30765 1313          TAD CM200
 1419 30766 7710          SPA CLA         /WOULD A JMP .-1 LAND ON PAGE 0?
 1420 30767 2344  IOWAT2, ISZ IOWAIT      /YES - INCREMENT RETURN FOR JMP .-1
 1421 30770 5744  IOWAT1, JMP I IOWAIT
 1422             
 1423 30771 0177  CP0177, 177
 1424 30772 5200  C5200,  5200

      /TSS/8 CONFIGURATION FOR UWM                                       Page 33


 1425                     PAGE
 1426             
 1427             /PAPER TAPE READER SERVICE FOR TSS/8
 1428 31000 6212  UPTR,   6212    /FIELD ONE ROUTINE
 1429 31001 4543          JMS I   PTRCHK          /DOES HE OWN DEVICE
 1430 31002 3240  PTRDEV, DEVTBE                  /POINTS TO READER ENTRY IN DEVTBL
 1431 31003 4241          JMS     PTRINI          /GO INITIALIZE IT
 1432             
 1433 31004 4733          JMS I   PTRIOT          /ANALYZE IOT
 1434 31005 5271          JMP     URRS            /READ A STRING
 1435 31006 0010  PTRFL,  JSPTR                   /READER FLAG
 1436 31007 5235          JMP     UPRWX           /FLAG TEST AND EMPTY BUFFER
 1437 31010 7420          SNL                     /RRB?
 1438 31011 5231          JMP     URFC            /NO - CHECK RFC
 1439             
 1440 31012 3003  URRB,   DCA     UUOCAL          /SAVE RFC INDICATOR
 1441 31013 1334          TAD     PTRCNT          /ANYTHING IN BUFFER
 1442 31014 7650          SNA CLA
 1443 31015 5230          JMP     UPRDUM          /NOTHING IN BUF - LEAVE L2SA ALONE
 1444 31016 6211          DATFLD                  /SOMETHING THERE
 1445 31017 1735          TAD I   PTREMP          /PICK UP CHAR
 1446 31020 6201          CDF
 1447 31021 3224          DCA     PTRCH
 1448 31022 1336          TAD     PTRACA          /POINTS TO L2SA
 1449 31023 4460          IOR             /OR CHARACTER INTO L2SA
 1450 31024 0000  PTRCH,   0
 1451 31025 2335          ISZ     PTREMP          /BUMP EMPTY PTR
 1452 31026 2334          ISZ     PTRCNT          /BUMP CHARACTER COUNT
 1453 31027 7000  PTRNOP, NOP                     /DON'T CARE IF COUNT GOES TO 0
 1454 31030 1003  UPRDUM, TAD     UUOCAL          /RESTORE RFC INDICATOR
 1455             
 1456 31031 7650  URFC,   SNA CLA                 /EVENT TIME 4?
 1457 31032 5236          JMP     UPRX            /NO - EXIT TO USER
 1458 31033 4246          JMS     PTRGO           /ANYTHING IN BUFFER?
 1459 31034 5237          JMP UPFLEX              /YES- GO SET HIS READER FLAG
 1460 31035 1206  UPRWX,  TAD     PTRFL           /NO - HAD TO START READER
 1461 31036 5461  UPRX,   UUOEXT                  /EXIT TO USER
 1462             
 1463 31037 7120  UPFLEX, CLL CML         /LINK = 1 FOR UUOEXT DEPARTURE
 1464 31040 5370          JMP UPFLX1
 1465 31041 0000  PTRINI, 0                       /INITIALIZE READER
 1466 31042 3334          DCA     PTRCNT          /CHAR COUNT=0
 1467 31043 1340          TAD     PTRBFA
 1468 31044 3335          DCA     PTRFIL          /FILL POINTER=START OF BUFFER
 1469 31045 5641          JMP I   PTRINI

      /TSS/8 CONFIGURATION FOR UWM                                       Page 34


 1470             /ROUTINE TO START READER IF BUFFERS EMPTY
 1471             /CALLING SEQUENCE=
 1472             /       JMS     PTRGO
 1473             /       RETURN IF CHAR IN READER BUFFER
 1474             /       RETURN IF READER JUST STARTED
 1475             
 1476 31046 0000  PTRGO,  0
 1477 31047 1334          TAD     PTRCNT          /ANYTHING IN BUFFER
 1478 31050 7640          SZA CLA
 1479 31051 5646          JMP I   PTRGO           /YES - RETURN
 1480 31052 6211          DATFLD                  /NO - ARE WE OUT OF TAPE?
 1481 31053 1602          TAD I   PTRDEV          /POINTS TO UNIT # IN DDB
 1482 31054 3003          DCA     WS0             /POINTS TO FLAGS + JOB# IN DDB
 1483 31055 1403          TAD I WS0               /SEE IF IT'S OUT OF TAPE
 1484 31056 6201          CDF
 1485 31057 7006          RTL
 1486 31060 7710          SPA CLA
 1487 31061 5670          JMP I   UPHANG          /YES - THIS HANGS READER
 1488 31062 4241          JMS     PTRINI          /INITIALIZE POINTERS
 1489 31063 1374          TAD PTRGO1      /PICK UP ADDRESS OF PARAMETER
 1490 31064 4741          JMS I PTRTIM            /START TIMER IN SCHED
 1491 31065 6014          RFC                     /START READER GOING.
 1492 31066 2246          ISZ     PTRGO           /INDEX RETURN
 1493 31067 5646          JMP I   PTRGO           /RETURN
 1494             
 1495 31070 2322  UPHANG, UPHANA          /INDICATE HUNG DEVICE

      /TSS/8 CONFIGURATION FOR UWM                                       Page 35


 1496 31071 4150  URRS,   UDF                     /READ A STRING
 1497 31072 1506          TAD I   L2SA            /-# CHARS TO READ
 1498 31073 6201          CDF
 1499 31074 7650          SNA CLA
 1500 31075 5331          JMP     PTRUCK+2                /ALL DONE
 1501             
 1502 31076 4246  UPTRST, JMS     PTRGO           /ANYTHING IN BUFFER
 1503 31077 5304          JMP     PTREDY          /YES
 1504 31100 7240          STA                     /BACK UP USER PC AND WAIT
 1505 31101 1104          TAD L2SV0
 1506 31102 3104          DCA L2SV0
 1507 31103 5235          JMP UPRWX
 1508             
 1509 31104 4150  PTREDY, UDF                     /SELECT USER FIELD
 1510 31105 1106          TAD     L2SA            /POINTS TO -# CHARS
 1511 31106 7001          IAC
 1512 31107 3003          DCA     WS0             /POINTS TO ADD-1 IN USER FIELD
 1513 31110 1403          TAD I   WS0
 1514 31111 3015          DCA     AXS1
 1515 31112 6211  PTRANS, DATFLD
 1516 31113 1735          TAD I   PTREMP          /GET CHAR FROM BUFFER
 1517 31114 2335          ISZ PTREMP              /BUMP POINTER
 1518 31115 4150          UDF
 1519 31116 3415          DCA I   AXS1            /STORE IN USER AREA
 1520 31117 2334          ISZ     PTRCNT          /ANYTHING STILL IN BUFFER
 1521 31120 5327          JMP     PTRUCK          /YES
 1522 31121 1015          TAD     AXS1            /NO - SET UP USER PARAMETERS FOR REDO
 1523 31122 3403          DCA I   WS0
 1524 31123 2506          ISZ I L2SA
 1525 31124 7000          NOP
 1526 31125 6201          CDF
 1527 31126 5276          JMP     UPTRST          /GO RESTART READER
 1528             
 1529 31127 2506  PTRUCK, ISZ I   L2SA            /GOTTEN WHAT HE ASKED FOR?
 1530 31130 5312          JMP     PTRANS          /NO - GIVE HIM ANOTHER CHARACTER
 1531 31131 3106          DCA     L2SA            /YES - SET USER AC=0
 1532 31132 5236          JMP     UPRX            /EXIT - NO WAIT
 1533             
 1534 31133 2067  PTRIOT, UKT1
 1535 31134 0000  PTRCNT, 0
 1536             PTREMP,
 1537 31135 0000  PTRFIL, 0
 1538 31136 0106  PTRACA, L2SA
 1539 31137 7201  PTREND, -PTRBUF-PTRSIZ+1
 1540 31140 0400  PTRBFA, PTRBUF
 1541 31141 3146  PTRTIM, PTTIM

      /TSS/8 CONFIGURATION FOR UWM                                       Page 36


 1542             /READER INTERUPT SERVICE
 1543 31142 6012  PTRINT, RRB                     /READ CHAR AND CLEAR FLAG
 1544 31143 6211          DATFLD
 1545 31144 3735          DCA I   PTRFIL          /DUMP CHARACTER IN BUFFER
 1546 31145 6201          CDF
 1547 31146 7240          STA
 1548 31147 1334          TAD     PTRCNT          /PTRCNT=PTRCNT-1
 1549 31150 3334          DCA     PTRCNT
 1550 31151 1335          TAD     PTRFIL
 1551 31152 1337          TAD     PTREND
 1552 31153 7700          SMA CLA         /STILL ROOM IN THE BUFFER?
 1553 31154 5360          JMP     RINT1           /NO - START THE USER JOB
 1554 31155 2335          ISZ     PTRFIL          /YES - BUMP FILL PTR
 1555 31156 6014          RFC                     /GET ANOTHER CHARACTER
 1556 31157 5501          DISMIS
 1557             
 1558 31160 1362  RINT1,  TAD     .+2             /SCHEDULE LEVEL 2 SERVICE
 1559 31161 5501          DISMIS
 1560 31162 1163          PTRL2
 1561 31163 1340  PTRL2,  TAD     PTRBFA          /SET EMPTY PTR TO START OF BUFFER
 1562 31164 3335          DCA     PTREMP
 1563 31165 1227          TAD     PTRNOP          /KILL PAPER TAPE TIMER IN SCHED
 1564 31166 3775          DCA I   PTRSKP
 1565 31167 7100          CLL             /LINK = 0 FOR RETURN THROUGH 'EXIT'
 1566 31170 1206  UPFLX1, TAD     PTRFL           /GO TURN ON READER BIT AND EXIT
 1567 31171 4773          JMS I   PTSTRT
 1568 31172 3240          DEVTBE
 1569             
 1570 31173 7547  PTSTRT, PTSTAR
 1571             
 1572 31174 1175  PTRGO1, .+1
 1573 31175 2435  PTRSKP, PTRSKA
 1574 31176 2306          PTRISZ
 1575 31177 2505          TIPTR1

      /TSS/8 CONFIGURATION FOR UWM                                       Page 37


 1576                     PAGE
 1577                     IFNZRO .-1200   <GLITCH; *.-1>  /GIR ASSUMES THIS AT 1200
 1578 31200 0000  SWKBD,  0
 1579 31201 1112          TAD SOURCE
 1580 31202 0037          AND C0100       /PROGRAM OR CONSOLE?
 1581 31203 7650          SNA CLA
 1582 31204 5214          JMP SWKIN       /CONSOLE
 1583 31205 1112          TAD SOURCE
 1584 31206 4464          TTYUSE          /GET OUTPUT DDB ADDRESS
 1585 31207 0001           1              / (OUTPUT SIDE)
 1586 31210 4575          STORE           /PUT CHARACTER IN BUFFER
 1587 31211 5600          JMP I SWKBD     /BAD
 1588 31212 2200  SWKEXT, ISZ SWKBD       /GOOD
 1589 31213 5600          JMP I SWKBD
 1590 31214 1112  SWKIN,  TAD SOURCE      /GET CONSOLE #
 1591 31215 0036          AND C0037
 1592 31216 7104          CLL RAL
 1593 31217 1163          TAD DEVTBA      /COMPUTE POSITION IN DEVTBL
 1594 31220 3252          DCA SWIDVA
 1595 31221 1652          TAD I SWIDVA    /ADDRESS OF DDB
 1596 31222 3335          DCA SWIDDB
 1597 31223 6201          CDF
 1598 31224 1335          TAD SWIDDB
 1599 31225 4575          STORE           /CHARACTER TO INPUT BUFFER
 1600 31226 5264          JMP SWIKFL      /DOESN'T FIT
 1601 31227 6211          DATFLD          /DUPLEX MODE?
 1602 31230 1735          TAD I SWIDDB
 1603 31231 0141          AND C0200
 1604 31232 7650          SNA CLA
 1605 31233 5241          JMP SWKIN1      /NO
 1606 31234 2252          ISZ SWIDVA      /YES- GET PTR TO OUTPUT SIDE
 1607 31235 1652          TAD I SWIDVA    /ADDRESS OF OUTPUT DDB
 1608 31236 6201          CDF
 1609 31237 4575          STORE           /CHARACTER TO OUTPUT BUFFER
 1610 31240 7000          NOP
 1611 31241 6211  SWKIN1, DATFLD          /BREAK CHARACTER?
 1612 31242 1335          TAD SWIDDB
 1613 31243 1032          TAD C0002
 1614 31244 3252          DCA SWITMP      /POINTS TO BREAK MASK
 1615 31245 1652          TAD I SWITMP    /BREAK MASK
 1616 31246 6213          CIF DATFLD
 1617 31247 4471          BREAK
 1618 31250 4252          JMS SWKDLM      /YES-SET DELIMITER FLAG
 1619 31251 5212          JMP SWKEXT      /NO
 1620             
 1621             SWIDVA,
 1622             SWITMP,
 1623 31252 0000  SWKDLM, 0               /ROUTINE TO SET DELIMITER FLAG IN STR1
 1624 31253 1335          TAD SWIDDB
 1625 31254 4666          JMS I SWIJOB    /GET JOB #
 1626 31255 1044          TAD JOBTBA
 1627 31256 4574          GETJTA          /GET POINTER TO STR1
 1628 31257 0001           JOBSTS+1
 1629 31260 6211          DATFLD
 1630 31261 4460          IOR             /OR IN DELIMITER BIT (& AWAKEN HIM)
 1631 31262 4100           JSDEL+JSTIME
 1632 31263 5652          JMP I SWKDLM    /AND BACK

      /TSS/8 CONFIGURATION FOR UWM                                       Page 38


 1633             
 1634 31264 4252  SWIKFL, JMS SWKDLM
 1635 31265 5600          JMP I SWKBD     /TAKE ERROR EXIT
 1636             
 1637 31266 7027  SWIJOB, DELBON
 1638             
 1639             /ROUTINE TO HANDLE EASY DECTAPE STUFF
 1640             /LIKE DTSF AND DTRB
 1641             /DTSF ALWAYS SKIPS
 1642             
 1643                     IFZERO TC01-1 <
 1644 31267 2104  UDTRBS, ISZ L2SV0       /BUMP HIS PC
 1645 31270 7000          NOP             /TRICKY, TRICKY
 1646 31271 4477  UDTRB,  GETJTW          /GET LAST VALUE OF STATUS B
 1647 31272 0024           JOBSTB
 1648 31273 3106          DCA L2SA        /GIVE IT TO USER
 1649 31274 5461          UUOEXT          /AND BACK
 1650                     >
 1651             
 1652             DFINTD,
 1653                     IFZERO D689-4 <
 1654                     CIF DATFLD      /DISPATCH TO FIELD ONE
 1655                     JMP I .+1       /AND CHECK TO SEE IF PHONES ARE RINGING
 1656                     DFINT1
 1657                     >
 1658                     IFZERO D689 <
 1659 31275 5676          JMP I .+1
 1660 31276 5770          INTCOM
 1661                     >

      /TSS/8 CONFIGURATION FOR UWM                                       Page 39


 1662             /SEARCH FOR JOB IN CORE
 1663             /CALL   TAD JOB #
 1664             /       CORE
 1665             /        MASK
 1666             /       NOT THERE, AC:=0
 1667             /       THERE, SAVE FIELD IN AC
 1668             
 1669             
 1670             /THESE TWO WORDS MUST IMMEDIATELY PRECEDE CORSRC
 1671             /THEY MUST ALSO BE ORIGINED AT CORSRC-2 OR NOTHING WILL WORK
 1672             /THAT'S TWICE IT GOT ME
 1673             
 1674                     IFNZRO CORSRC-2-.&4000  <GLITCH; *.-1>
 1675       1300          *CORSRC-2
 1676             
 1677 31300 0000  CORCNT, 0       /INIT TO (-) THE NUMBER OF USER FIELDS
 1678 31301 0000  CORTBE, 0       /INIT TO (-) THE FIRST LOCKED 'CORTBL' ENTRY
 1679             
 1680 31302 0000  CORSRC, 0               /ENTER WITH BIT PATTERN TO MATCH
 1681 31303 0702          AND I CORSRC    /MASK AS SPECIFIED
 1682 31304 7041          CIA
 1683 31305 3357          DCA CORSR4      /-WHAT WE WANT
 1684 31306 6214          RDF             /FIGURE OUT WHENCE WE CAME
 1685 31307 1145          TAD C6203
 1686 31310 3335          DCA CORSR3      /SO WE CAN RETURN
 1687 31311 1702          TAD I CORSRC    /GET THE MASK
 1688 31312 3356          DCA CORSR2      /SAVE IT
 1689 31313 2302          ISZ CORSRC      /SKIP PAST MASK IN CALL
 1690 31314 6201          CDF
 1691 31315 1300          TAD CORCNT      /-# ENTRIES TO CHECK
 1692 31316 3015          DCA AXS1        /USED AS COUNTER
 1693 31317 2360  CORSR1, ISZ CORTBP      /INCREMENT TABLE POINTER
 1694 31320 1360          TAD CORTBP
 1695 31321 1301          TAD CORTBE
 1696 31322 7640          SZA CLA         /ARE WE PAST THE END OF 'CORTBL'?
 1697 31323 5326          JMP CORSR5      /NO
 1698 31324 1042          TAD FANCOR
 1699 31325 3360          DCA CORTBP      /YES - REINITIALIZE THE POINTER
 1700 31326 1760  CORSR5, TAD I CORTBP    /GET TABLE ENTRY
 1701 31327 0356          AND CORSR2      /MASK IT
 1702 31330 1357          TAD CORSR4      /COMPARE WITH DESIRED ENTRY
 1703 31331 7650          SNA CLA
 1704 31332 5337          JMP CORSR6      /FOUND IT!
 1705 31333 2015          ISZ AXS1        /NOT YET
 1706 31334 5317          JMP CORSR1      /KEEP GOING
 1707             SWIDDB,
 1708 31335 0000  CORSR3, 0               /RETURN WITH AC=0
 1709 31336 5702          JMP I CORSRC
 1710 31337 1162  CORSR6, TAD CORTBA      /WE HAVE IT; GET CORTBL INDEX
 1711 31340 7041          CIA
 1712 31341 1360          TAD CORTBP
 1713 31342 3015          DCA AXS1        /FIELD #
 1714 31343 1357          TAD CORSR4      /WE HAVE TO SET MODE BIT APPROPRIATELY
 1715 31344 7041          CIA             /RECOMPLEMENT CALLING JOB #
 1716 31345 0144          AND C0600       /A PHANTOM?
 1717 31346 7650          SNA CLA         /EXEC MODE?
 1718 31347 1361          TAD COR10       /NO - SET USER MODE BIT

      /TSS/8 CONFIGURATION FOR UWM                                       Page 40


 1719 31350 1015          TAD AXS1        /SET UP SAVE FIELD
 1720 31351 7106          CLL RTL         /SHIFT AND ADD DATA FIELD
 1721 31352 7004          RAL
 1722 31353 1015          TAD AXS1
 1723 31354 2302          ISZ CORSRC      /SKIP TO INDICATE SUCCESS
 1724 31355 5335          JMP CORSR3      /BACK
 1725 31356 0000  CORSR2, 0
 1726 31357 0000  CORSR4, 0
 1727 31360 7100  CORTBP, CORTBL  /PERMANENT "ROUND-ROBIN" POINTER
 1728 31361 0010  COR10,  10

      /TSS/8 CONFIGURATION FOR UWM                                       Page 41


 1729             /ROUTINE TO SEE IF DSI IS SET IN DDB
 1730             /THIS ROUTINE IS USED IN ORDER TO PREVENT
 1731             /THE ^B'S TYPED BY USER FROM RESTARTING
 1732             /AN OUTPUT BOUND PROGRAM.
 1733             /OTHERWISE THE ^B'S WOUD CLEAR THE OUTPUT BUFFER
 1734             /AND SET THE FLAG; THE PROGRAM WOULD THEN
 1735             /BE RUNABLE AND THE TTY WOULD FROTH AT THE
 1736             /MOUTH.  THE POOR USER WOULDN'T KNOW WHAT
 1737             /TO DO!
 1738             /PRETTY MESSY, WASN'T IT!
 1739             
 1740             /CALLING SEQUENCE
 1741             /       TAD (DDB ADDRESS FOR THIS DEVICE)
 1742             /       DATFLD
 1743             /       JMS CONCB
 1744             /       RETURN IF CONSOLE IN SI MODE
 1745             /       RETURN IF CONSOLE IN USER MODE
 1746             
 1747 31362 0000  CONCB,  0
 1748 31363 3371          DCA CONCB1
 1749 31364 1771          TAD I CONCB1    /WORD 0 OF DDB
 1750 31365 0040          AND CONDSI
 1751 31366 7650          SNA CLA
 1752 31367 2362          ISZ CONCB       /NOT GOING TO SI-INDEX RETURN
 1753 31370 5762          JMP I CONCB
 1754             
 1755                     IFNZRO DSI-1000 <GLITCH; *.-1>
 1756       0040  CONDSI= C1000   /DSI
 1757 31371 0000  CONCB1, 0
 1758             
 1759                     IFZERO TC01-1 <
 1760 31372 6213  UDTXA0, CIF DATFLD              /FIELD 1 DTA UUO SERVICE
 1761 31373 5774          JMP I .+1
 1762 31374 1400          UDTXA
 1763                     >

      /TSS/8 CONFIGURATION FOR UWM                                       Page 42


 1764                     PAGE
 1765             
 1766             /GET A BUFFER FROM FREE LIST
 1767             /CALL   TAD (ADDRESS TO STORE LINK)
 1768             /       GETBLK
 1769             /       NONE AVAILABLE
 1770             /       OK WITH LINK STORED
 1771             
 1772             CLST0,
 1773             GETDB2,
 1774 31400 0000  GETB,   0
 1775 31401 3310          DCA GETBT       /SAVE ADDRESS TO SAVE PTR
 1776 31402 6214          RDF             /SAVE CALLING FIELD
 1777 31403 1145          TAD C6203
 1778 31404 3236          DCA GETB2       /SO WE CAN GET BACK
 1779 31405 6211          DATFLD
 1780 31406 7240          CLA CMA
 1781 31407 1047          TAD FRECNT
 1782 31410 7510          SPA             /ANY BLOCKS LEFT?
 1783 31411 5235          JMP GETB1       /NO - TAKE ERROR RETURN
 1784 31412 3047          DCA FRECNT      /YES - SAVE THE NEW COUNT
 1785 31413 1046          TAD FREE
 1786 31414 3710          DCA I GETBT     /STORE LINK IN ADDRESS SPECIFIED
 1787 31415 1047          TAD FRECNT
 1788 31416 7650          SNA CLA         /IS THIS THE END?
 1789 31417 5224          JMP .+5         /YES (WE SHOULD REALLY ZERO 'FREE')
 1790 31420 1446          TAD I FREE      /NO - GET THE FORWARD LINK
 1791 31421 7450          SNA             /ZERO?
 1792 31422 4525          REBOOT          /YES - ERROR *****
 1793 31423 3046          DCA FREE        /NO - SET NEW FREE-LIST START
 1794 31424 2200          ISZ GETB        / AND INDICATE SUCCESS
 1795 31425 7240          STA             /NOW WE'LL BE GOOD GUYS
 1796 31426 1710          TAD I GETBT     / AND CLEAR THE BUFFER
 1797 31427 3015          DCA AXS1
 1798 31430 1041          TAD C7770       /8 WORDS TO ZERO
 1799 31431 3310          DCA GETBT
 1800 31432 3415          DCA I AXS1
 1801 31433 2310          ISZ GETBT       /DONE?
 1802 31434 5232          JMP .-2         /NO
 1803 31435 7300  GETB1,  CLA CLL
 1804 31436 0000  GETB2,  0               /YES - RESET THE FIELD
 1805 31437 5600          JMP I GETB      / AND RETURN
 1806             
 1807             /ROUTINE TO HANDLE THE 'STM' IOT - WE MERELY MAKE
 1808             /AN ENTRY IN CLKTBL FOR THIS JOB.
 1809 31440 1106  USTM,   TAD L2SA        /GET UNITS OF TIME IN AC
 1810 31441 3003          DCA WS0         /SAVE IT
 1811 31442 3106          DCA L2SA        /ZERO USER'S AC
 1812 31443 1003          TAD WS0
 1813 31444 7041          CIA             /- # OF UNITS OF TIME
 1814 31445 7450          SNA             /ANY TIME SPECIFIED?
 1815 31446 5577          WAIT            /NO - TREAT LIKE 'SYN' IOT
 1816 31447 5650          JMP I .+1       /YES, GO PUT TO SLEEP
 1817 31450 4365          DOUSTM

      /TSS/8 CONFIGURATION FOR UWM                                       Page 43


 1818             /GET A DATA BLOCK
 1819             /CALL   TAD LINK
 1820             /       GETDDB
 1821             /       NONE AVAILABLE
 1822             /       OK
 1823             
 1824                     IFNZRO DDBTIM-3 <GLITCH; *.-1>
 1825       0033  GETTIM= C0003   /DDBTIM
 1826             
 1827             DEVWT0,
 1828 31451 0000  GETDB0, 0
 1829 31452 3323          DCA GETDB1      /ADDRESS OF DDB POINTER (USUALLY IN DEVTBL)
 1830 31453 6214          RDF
 1831 31454 1145          TAD C6203
 1832 31455 3306          DCA GETDB5      /SAVE CALLING FIELD SO WE CAN GET OUT
 1833 31456 6201          CDF
 1834 31457 1323          TAD GETDB1
 1835 31460 4571          GETBLK          /GET A BUFFER FROM FREE-CORE
 1836 31461 5306          JMP GETDB5      /BOO! HISS! THEY'RE FRESH OUT
 1837 31462 6211          DATFLD
 1838 31463 2251          ISZ GETDB0      /SUCCESSFUL RETURN
 1839 31464 1723          TAD I GETDB1
 1840 31465 3323          DCA GETDB1      /DDB ADDRESS
 1841 31466 1112          TAD SOURCE      /UNIT # SAVED IN WORD 1 OF DDB
 1842 31467 3723          DCA I GETDB1
 1843 31470 1323          TAD GETDB1
 1844 31471 1033          TAD GETTIM
 1845 31472 3323          DCA GETDB1      /SET POINTER TO ASSIGN-TIME
 1846 31473 1051          TAD CLK1        /GET LOW ORDER CLOCK
 1847 31474 7006          RTL             /AND SHIFT BITS 0-2 INTO AC 9-11
 1848 31475 7006          RTL
 1849 31476 0035          AND C0007       /GET MOST SIGNIFCANT BITS FROM LOW ORDER
 1850 31477 3200          DCA GETDB2      /SAVE THEM
 1851 31500 1050          TAD CLK2        /GET HIGH ORDER TIME
 1852 31501 7006          RTL             /SHIFT LEFT 3 PLACES
 1853 31502 7004          RAL
 1854 31503 0041          AND C7770       /KEEP BITS 0-8
 1855 31504 1200          TAD GETDB2      /ADD COMPONENT DERIVED FROM CLK1
 1856 31505 3723          DCA I GETDB1    /SAVE IN DDB
 1857 31506 0000  GETDB5, 0               /RETURN
 1858 31507 5651          JMP I GETDB0

      /TSS/8 CONFIGURATION FOR UWM                                       Page 44


 1859             /AFTER EXECUTING AN IOT FOR A USER PROGRAM,
 1860             /UUOEXT IS CALLED WITH THE AC BITS SET TO
 1861             /INDICATE WHICH STATUS BITS (IF ANY)
 1862             /HAVE BEEN CHANGED (I.E. CLEARED).
 1863             /
 1864             /THIS ROUTINE DOES THE ACTUAL CLEARING OF BITS
 1865             /IF ANY BITS ARE CLEARED, INDICATING A WAIT CONDITION,
 1866             /THEN THE DUMMY WAIT BIT (BIT 11 OF STR1) IS ALSO
 1867             /CLEARED
 1868             
 1869             /CALL:  TAD <WAIT-BIT>
 1870             /       JMS DEVWAT
 1871             /       RETURN
 1872             
 1873             GETBT,
 1874 31510 0000  DEVWAT, 0
 1875 31511 3251          DCA DEVWT0      /STR1 BITS TO CLEAR
 1876 31512 1251          TAD DEVWT0
 1877 31513 7001          IAC             /CLEAR JSWAIT ALSO
 1878 31514 4323          JMS CLSTR1
 1879 31515 1251          TAD DEVWT0      /DID WE CLEAR ANYTHING
 1880 31516 6211          DATFLD
 1881 31517 7650          SNA CLA
 1882 31520 2405          ISZ I JOBSWA    /NO, TURN JSWAIT BACK ON
 1883 31521 6201          CDF
 1884 31522 5710          JMP I DEVWAT    /GO AWAY
 1885             
 1886             GETDB1,
 1887 31523 0000  CLSTR1, 0               /ROUTINE TO CLEAR BITS IN STR1
 1888 31524 7040          CMA             /ENTER WITH BITS TO CLEAR IN AC
 1889 31525 3200          DCA CLST0       /SAVE MASK OF BITS TO SAVE
 1890 31526 4477          GETJTW          /GET CURRENT SETTING OF STR1
 1891 31527 0001           JOBSTS+1
 1892 31530 0200          AND CLST0       /CLEAR SELECTED BITS
 1893 31531 6211          DATFLD
 1894 31532 3405          DCA I JOBSWA    /SAVE CLEARED STATUS REGISTER
 1895 31533 6201          CDF
 1896 31534 5723          JMP I CLSTR1    /RETURN

      /TSS/8 CONFIGURATION FOR UWM                                       Page 45


 1897             /WHEN THE USER EXECUTES A "SEA" IOT,
 1898             /WE MUST DO TWO THINGS:
 1899             /       1) SET THE ERROR ENABLE BIT IN STR0
 1900             /       2) SAVE THE USER'S AC IN THE JOB DATA AREA
 1901             /          JSEREN IS SET HERE
 1902             /       WE GO TO USEA1 TO SAVE THE ERROR ADDRESS
 1903             /JSEREN MAY BE CLEARED BY .RUN, START, OR
 1904             /A USER EXECUTING A "CLEAR STATUS" IOT.
 1905             
 1906 31535 6211  USEA,   DATFLD          /SET JSEREN WHEN USER EXECUTES SEA
 1907 31536 1561          TAD I CJOBDA    /POINTS TO WORD 0 OF JOB DATA AREA
 1908 31537 7001          IAC             /POINTS TO STR0
 1909 31540 4460          IOR             /OR IN JSEREN
 1910 31541 2000           JSEREN
 1911 31542 7344          CLA CLL CMA RAL /AC = -2, TO GET JOB DATA POINTER
 1912             
 1913             /ROUTINE TO SET SWITCH REGISTER, RESTART ADDR., OR ERROR
 1914             /ADDR.  THIS ROUTINE IS VERY SENSITIVE TO THE POSITION
 1915             /OF THESE CELLS IN THE JOB DATA AREA.  USE CAUTION.
 1916             
 1917                     IFNZRO JOBSRA-5 <GLITCH; *.-1>
 1918                     IFNZRO JOBERR-6 <GLITCH; *.-1>
 1919                     IFNZRO JOBSWR-10<GLITCH; *.-1>
 1920 31543 1033  USSW,   TAD C0003       /AC = 3 (SWITCH REGISTER)
 1921 31544 1356  USRA,   TAD K0005       /AC = AC+5 (RESTART ADDRESS)
 1922 31545 3347          DCA .+2
 1923 31546 4477          GETJTW          /GET THE APPROPRIATE POINTER
 1924 31547 0000           0
 1925 31550 7200          CLA
 1926 31551 1106          TAD L2SA        /GET THE PASSED PARAMETER
 1927 31552 6211          DATFLD
 1928 31553 3405  UKSB1,  DCA I JOBSWA    / AND SAVE IN THE JOB DATA AREA
 1929 31554 3106          DCA L2SA        /THEN CLEAR HIS AC
 1930 31555 5461          UUOEXT          / AND EXIT
 1931             
 1932 31556 0005  K0005,  5

      /TSS/8 CONFIGURATION FOR UWM                                       Page 46


 1933 31557 1044  CONOU7, TAD JOBTBA      /IS HE DOWN TO MINBUF BUFFERS?
 1934 31560 3005          DCA JOBSWA      /PINTS TO JOBTBL ENTRY
 1935 31561 6201          CDF
 1936 31562 1774          TAD I CONT1A    /POINTS TO DDB EMPTY PTR
 1937 31563 4773          JMS I CNBUFS    /IS HE DOWN TO MINBUF BUFFERS YET?
 1938 31564 7775           -MINBUF
 1939 31565 7410          SKP
 1940 31566 5775          JMP I CON20A    /STILL MORE THAN MINBUF--DON'T TURN HIM ON
 1941 31567 6201          CDF             /YES, GO INDICATE THAT HE HAS ROOM
 1942 31570 1005          TAD JOBSWA
 1943 31571 5772          JMP I .+1
 1944 31572 6354          CONO70
 1945             
 1946 31573 3452  CNBUFS, BUFSIZ
 1947 31574 6220  CONT1A, CONT1
 1948 31575 6361  CON20A, CONO20

      /TSS/8 CONFIGURATION FOR UWM                                       Page 47


 1949                     PAGE
 1950             /BLOCK TRANSFER
 1951             /CALL   BLT
 1952             /        62S1   SELECT SOURCE DATA FIELD
 1953             /        SOURCE
 1954             /        62D1   SELECT DESTINATION DATA FIELD
 1955             /        DESTINATION
 1956             /        -NUMBER WORDS
 1957             /       RETURN
 1958             
 1959 31600 0000  BLT0,   0
 1960 31601 1600          TAD I BLT0      /GET SOURCE FIELD SELECT
 1961 31602 3225          DCA BLT1
 1962 31603 2200          ISZ BLT0        /POINTS TO SOURCE ADDRESS
 1963 31604 7240          STA
 1964 31605 1600          TAD I BLT0      /CORE ADDRESS -1 OF SOURCE
 1965 31606 3015          DCA AXS1
 1966 31607 2200          ISZ BLT0        /POINTS TO DESTINATION FIELD SELECT
 1967 31610 1600          TAD I BLT0      /GET DESTINATION SELECT
 1968 31611 3227          DCA BLT2
 1969 31612 2200          ISZ BLT0        /POINTS TO DEST. ADD
 1970 31613 7240          STA
 1971 31614 1600          TAD I BLT0      /DEST. ADD-1
 1972 31615 3016          DCA AXS2
 1973 31616 2200          ISZ BLT0        /POINTS TO - WORD COUNT
 1974 31617 1600          TAD I BLT0
 1975 31620 3235          DCA BLTC
 1976 31621 2200          ISZ BLT0        /RETURN ADDRESS
 1977 31622 6214          RDF
 1978 31623 1145          TAD C6203
 1979 31624 3233          DCA BLTF        /SAVE RETURN FIELD SELECT
 1980             
 1981 31625 0000  BLT1,   0               /SELECT SOURCE DATA FIELD
 1982 31626 1415          TAD I AXS1
 1983 31627 0000  BLT2,   0               /SELECT DESTINATION DATA FIELD
 1984 31630 3416          DCA I AXS2
 1985 31631 2235          ISZ BLTC        /DONE
 1986 31632 5225          JMP BLT1        /NO
 1987 31633 0000  BLTF,   0               /RETURN
 1988 31634 5600          JMP I BLT0

      /TSS/8 CONFIGURATION FOR UWM                                       Page 48


 1989             /TEST JOB FOR RUNABILITY
 1990             /CALL   TAD JOB #
 1991             /       RUNABLE
 1992             /       NOT RUNABLE
 1993             /       RUNABLE
 1994             
 1995             BLTC,
 1996 31635 0000  RUNTST, 0               /COME HERE WITH JOB # IN AC
 1997 31636 1044          TAD JOBTBA              /TO GET JOBTABLE ADDRESS
 1998 31637 4500          GETJTI          /GET STR0
 1999 31640 0000           JOBSTS
 2000 31641 7700          SMA CLA         /RUN BIT ON?
 2001 31642 5635          JMP I RUNTST    /NO
 2002 31643 6211          DATFLD          /YES, SEE IF IT RAN AS A COMPUTE BOUND JOB LAST TIME
 2003 31644 1405          TAD I JOBSWA    /GET THE CONTENTS OF STR0
 2004 31645 0040          AND C1000       /IS BIT 1000 ON SHOWING THAT IT WAS A COMPUTE BOUND JOB
 2005 31646 7450          SNA             /SNA
 2006 31647 5254          JMP RUNTS2      /NO, IT MAY BE READY TO RUN TEST FURTHER
 2007 31650 7040          CMA             /LAST TIME IT WAS COMPUTE BOUND, SKIP THIS TURN
 2008 31651 0405          AND I JOBSWA    /CLEAR THE BIT 1000, SO THAT IT WILL RUN NEXT TIME
 2009 31652 3405          DCA I JOBSWA
 2010 31653 5271          JMP RUNTS1+1    /RETURN BY NOT RUNNABLE EXIT
 2011 31654 1005  RUNTS2, TAD JOBSWA      /GET THE ADDRESS OF STR1-1 IN AC
 2012 31655 3015          DCA AXS1
 2013 31656 7326          CLA CLL CML RTL /AC =2
 2014 31657 1005          TAD JOBSWA      /ADDRESS OF MASK1-1
 2015 31660 3016          DCA AXS2
 2016 31661 1415          TAD I AXS1
 2017 31662 0416          AND I AXS2      /ANY STR1- MASK1 MATCHES?
 2018 31663 7640          SZA CLA
 2019 31664 5270          JMP RUNTS1      /YES
 2020 31665 1415          TAD I AXS1
 2021 31666 0416          AND I AXS2              /ANY STR2-MASK2 MATCHES?
 2022 31667 7640          SZA CLA
 2023 31670 2235  RUNTS1, ISZ RUNTST      /YES
 2024 31671 6201          CDF             /NO
 2025 31672 5635          JMP I RUNTST

      /TSS/8 CONFIGURATION FOR UWM                                       Page 49


 2026             /SET SYSTEM ERROR CODE
 2027             /CALL   TAD JOB #
 2028             /       ERROR
 2029             /        ERROR CODE
 2030             /       NORMAL RETURN
 2031             
 2032             
 2033 31673 0000  SYSERR, 0
 2034 31674 0036          AND C0037       /JOB # ONLY
 2035 31675 7450          SNA             /IS IT JOB 0?
 2036 31676 5315          JMP SYSER1      /YES - RETURN
 2037 31677 1044          TAD JOBTBA      /POINTER TO JOBTBL
 2038 31700 4500          GETJTI          /GET CURRENT VALUE OF STR0
 2039 31701 0000           JOBSTS
 2040 31702 0035          AND C0007       /EXTRACT ANY ERROR CODE IN THERE
 2041 31703 7640          SZA CLA         /ANY OLD BITS LYING AROUND?
 2042 31704 5315          JMP SYSER1      /YES; DON'T CONFUSE THE ISSUE
 2043 31705 1673          TAD I SYSERR    /GET THE ERROR CODE SUPPLIED
 2044 31706 6211          DATFLD
 2045 31707 1405          TAD I JOBSWA    /ADD IT TO OLD VALUE OF STR0
 2046 31710 3405          DCA I JOBSWA    /SAVE THE WHOLE MESS
 2047 31711 2005          ISZ JOBSWA
 2048 31712 1005          TAD JOBSWA      /POINTS TO STR1
 2049 31713 4460          IOR             /SET THE "ERROR HAS OCCURRED" BIT IN STR1
 2050 31714 0002           JSERR
 2051 31715 6201  SYSER1, CDF
 2052 31716 2273          ISZ SYSERR      /SKIP ARGUMENT IN CALL
 2053 31717 5673          JMP I SYSERR    /RETURN

      /TSS/8 CONFIGURATION FOR UWM                                       Page 50


 2054             /SET KEYBOARD BREAK
 2055             
 2056       0005  UKSBT1= JOBSWA
 2057                     IFNZRO DDBBRK-2 <GLITCH; *.-1>
 2058       0032  UKSBRK= C0002   /DDBBRK
 2059             
 2060 31720 1160  UKSB,   TAD JOB
 2061 31721 4464          TTYUSE          /FIND USER INPUT TTY DDB
 2062 31722 0000           0              / (INPUT SIDE)
 2063 31723 1032          TAD UKSBRK
 2064 31724 3005          DCA UKSBT1      /POINTS TO BREAK MASK IN DDB
 2065 31725 1106          TAD L2SA        /USER AC
 2066 31726 6211          DATFLD
 2067 31727 7440          SZA
 2068 31730 5734          JMP I .+4       /HE HAS NEW MASK--GO PICK IT UP
 2069 31731 1405          TAD I UKSBT1    /HE WANTS TO READ OLD MASK
 2070 31732 3106          DCA L2SA        /GIVE IT TO HIM
 2071 31733 5461          UUOEXT
 2072 31734 1553          UKSB1
 2073             
 2074             /SKIP IF DISC NOT ACTIVE
 2075             /CALL   TAD FIELD #
 2076             /       JMS DSKACT
 2077             /       ACTIVE
 2078             /       NOT ACTIVE
 2079             
 2080 31735 3450  DAUTBL, DSUTBL-1
 2081             
 2082 31736 0000  DSKACT, 0
 2083 31737 7106          CLL RTL         /FIELD #*4 IS MAJOR INDEX IN DSUTBL
 2084 31740 1335          TAD DAUTBL      /START OF TABLE-1
 2085 31741 3015          DCA AXS1        /AUTO INDEX
 2086 31742 6211          DATFLD
 2087 31743 1415          TAD I AXS1      /FILE 1 BUSY?
 2088 31744 1415          TAD I AXS1      /  "   2   "
 2089 31745 1415          TAD I AXS1      /  "   3   "
 2090 31746 1415          TAD I AXS1      /  "   4   "
 2091 31747 6201          CDF
 2092 31750 7650          SNA CLA         /IF ANY ONE WAS BUSY, AC.NE.0
 2093 31751 2336          ISZ DSKACT      /NO ACTIVITY; INDEX RETURN
 2094 31752 5736          JMP I DSKACT    /AND OFF

      /TSS/8 CONFIGURATION FOR UWM                                       Page 51


 2095             /START USER DISC REQUEST FROM QUEUE
 2096             /IF THIS ROUTINE IS CALLED, THERE HAD
 2097             /BETTER BE SOMETHING IN SQREQ OR DSUTBL
 2098             /FOR IT TO FIND. IT WON'T STOP LOOKING!
 2099             /CALL   JMS DSUSER
 2100             /       RETURN
 2101             
 2102 31753 0000  DSUSER, 0
 2103 31754 1053          TAD SQREQ       /IS A SWAP REQUESTED?
 2104 31755 7640          SZA CLA
 2105 31756 5373          JMP DSUSR5      /YES, DO IT FIRST
 2106 31757 6211          DATFLD
 2107 31760 7001  DSUSR4, IAC
 2108 31761 1417          TAD I DSKPTR    /GET ENTRY FROM DSUTBL
 2109 31762 7450          SNA             /END OF LIST SET TO -1; AC.EQ.0 IF WE'RE THERE
 2110 31763 5375          JMP DSUSR2      /YES. RESET POINTER TO START OF TABLE
 2111 31764 7041          CIA
 2112 31765 7040          CMA             /SUBTRACT ONE FROM ENTRY
 2113 31766 7450          SNA             /IS IT A REQUEST?
 2114 31767 5360          JMP DSUSR4      /NO
 2115 31770 6201          CDF
 2116 31771 4476          DSGO            /YES, START IT UP
 2117 31772 5753          JMP I DSUSER    /AND BACK
 2118 31773 4557  DSUSR5, JMS I SWPIOA    /START A SWAP DISC IO
 2119 31774 5753          JMP I DSUSER    /RETURN BACK
 2120             
 2121             
 2122 31775 1335  DSUSR2, TAD DAUTBL      /START OF 'DSUTBL'
 2123 31776 3017          DCA DSKPTR
 2124 31777 5360          JMP DSUSR4

      /TSS/8 CONFIGURATION FOR UWM                                       Page 52


 2125                     PAGE
 2126             
 2127             /TELEPRINTER IOTS
 2128             
 2129       0003  UTELC=  WS0
 2130 32000 6707  UTELSR, TTYSR1  /DEVTBL ENTRY POINTER (IN 'TTYUSE')
 2131             
 2132 32001 1160  UTEL,   TAD JOB         /SET UP SOURCE FOR CHARACTER DISTRIBUTION
 2133 32002 0036          AND C0037
 2134 32003 1037          TAD C0100       /BIT 5=1 FOR PROGRAM TYPING OUT
 2135 32004 3112          DCA SOURCE
 2136 32005 1160          TAD JOB
 2137 32006 4464          TTYUSE          /GET THE OUTPUT DEVTBL POINTER
 2138 32007 0001           1
 2139 32010 7200          CLA
 2140 32011 1600          TAD I UTELSR
 2141 32012 3240          DCA UTELDB      /SAVE POINTER TO DEVTBL FOR DEVICE
 2142 32013 4267          JMS UKT1        /WHAT IS REQUESTED BY USER?
 2143 32014 5244          JMP UTELS       /SEND A STRING(6040)
 2144 32015 0020  UTELFL,  JSTEL          /DELIMITER FLAG
 2145 32016 5232          JMP UTELS4      /FLAG TEST AND NO ROOM - EXIT & CLEAR JSTEL
 2146 32017 7650          SNA CLA         /IS IT A 6044?
 2147 32020 5231          JMP UTEL3       /NO - CHECK FOR 6042
 2148 32021 1106          TAD L2SA        /6044 (POSSIBLY MICRO CODED)
 2149 32022 4234          JMS UTELO       /"OUTPUT" THE CHARACTER
 2150 32023 7410          SKP             /NO ROOM - REDO LATER
 2151 32024 5461          UUOEXT          /OK - ALL DONE
 2152 32025 7240          STA             /BACK UP HIS PC
 2153 32026 1104          TAD L2SV0
 2154 32027 3104          DCA L2SV0
 2155 32030 7610          SKP CLA
 2156 32031 7630  UTEL3,  SZL CLA         /WAS 6042 CODED?
 2157 32032 1215  UTELS4, TAD UTELFL      /YES - CLEAR FLAG
 2158 32033 5461          UUOEXT          / AND EXIT
 2159             
 2160             /THIS ROUTINE PUSHES CHAR IN TTCHAR
 2161             /THROUGH GIR
 2162             /
 2163 32034 0000  UTELO,  0
 2164 32035 3031          DCA TTCHAR
 2165 32036 6201          CDF
 2166 32037 4472          GIR
 2167 32040 0000  UTELDB, 0               /POINTS TO OUTPUT DDB
 2168 32041 5634          JMP I UTELO     /NO ROOM IN BUFFER
 2169 32042 2234          ISZ UTELO       /SUCCESSFULLY STORED
 2170 32043 5634          JMP I UTELO     /RETURN
 2171             
 2172 32044 1106  UTELS,  TAD L2SA        /HANDLER FOR "SEND STRING"
 2173 32045 7001          IAC
 2174 32046 3003          DCA UTELC       /POINTS TO ADDRESS OF STRING IN USER AREA
 2175 32047 1106          TAD L2SA
 2176 32050 3267          DCA UKT1        /SET POINTER TO USER'S WORD-COUNT
 2177 32051 3106          DCA L2SA        / AND CLEAR THE USER'S AC
 2178 32052 4150          UDF
 2179 32053 1403          TAD I UTELC     /GET ADDRESS-1 OF STRING
 2180 32054 3016          DCA AXS2        /SAVE POINTER TO STRING
 2181 32055 1416  UTELS3, TAD I AXS2      /GET CHARACTER FROM USER

      /TSS/8 CONFIGURATION FOR UWM                                       Page 53


 2182 32056 4234          JMS UTELO       / & PUSH IT THROUGH GIR
 2183 32057 5232          JMP UTELS4      /BUFFER FULL - SET FLAG & EXIT
 2184 32060 4150          UDF
 2185 32061 2403          ISZ I UTELC     /BUMP ADDRESS IN USER AREA
 2186 32062 7000          NOP
 2187 32063 2667          ISZ I UKT1      /BUMP USER'S WORD COUNT
 2188 32064 5255          JMP UTELS3      /KEEP GOING
 2189 32065 5666          JMP I .+1       /ALL DONE - EXIT AND SKIP
 2190 32066 0324          UUOEX2

      /TSS/8 CONFIGURATION FOR UWM                                       Page 54


 2191             /ROUTINE TO ANALYZE IOT'S
 2192             /CALLING SEQUENCE
 2193             /       IOT IN UUOCAL
 2194             /       JMS UKT1
 2195             /       RETURN FOR STRING IOT
 2196             /       FLAG TO CHECK IN STR1
 2197             /       RETURN FOR NON SKIPPING FLAG TESTS
 2198             /       RETURN FOR SKIPPING FLAG TEST OR EVENT TIMESS 2 AND 4
 2199             /               (AC=BIT 9 OF IOT; LINK=BIT 10)
 2200 32067 0000  UKT1,   0
 2201 32070 1003          TAD UUOCAL
 2202 32071 0035          AND C0007
 2203 32072 7450          SNA             /STRING?
 2204 32073 5667          JMP I UKT1      /YES
 2205 32074 2267          ISZ UKT1
 2206 32075 7110          CLL RAR         /NO
 2207 32076 3003          DCA UUOCAL
 2208 32077 7420          SNL             /SKIP TEST?
 2209 32100 5312          JMP UKT12       /NO
 2210 32101 4477          GETJTW          /YES, IS IT POSITIVE OR NEGATIVE
 2211 32102 0001           JOBSTS+1
 2212 32103 0667          AND I UKT1      /FLAG TO CHECK
 2213 32104 2267          ISZ UKT1        /INDEX PAST ARGUMENT
 2214 32105 7650          SNA CLA         /FLAG SET?
 2215 32106 5320          JMP UKT13       /NO - DON'T SKIP
 2216 32107 2104          ISZ L2SV0       /YES - SKIP
 2217 32110 7000          NOP
 2218 32111 7410          SKP
 2219 32112 2267  UKT12,  ISZ UKT1
 2220 32113 2267          ISZ UKT1
 2221 32114 1003          TAD UUOCAL      /YES -PUT?
 2222 32115 7110          CLL RAR
 2223 32116 5667          JMP I UKT1      /INDEX RETURN
 2224 32117 0370          USKIOT          /USER IOT SKIP FLAG (CHECKED BY UUOEXT)
 2225 32120 2717  UKT13,  ISZ I .-1
 2226 32121 5667          JMP I UKT1      /INDICATE FLAG TEST IOT THAT DIDN'T SKIP

      /TSS/8 CONFIGURATION FOR UWM                                       Page 55


 2227             /WE GOT A 'DRL' ERROR ON THE DISC - ASSUME IT WAS THE
 2228             /ACTIVE JOB DOING 'EAE' STUFF AND PUT IT TO SLEEP.
 2229 32122 7240  SLEEP,  STA
 2230 32123 1017          TAD DSKPTR      /BACK UP DSKPTR
 2231 32124 3017          DCA DSKPTR
 2232 32125 4462  SLEEP2, JMS I FIUSER    /NOW START UP THE I/O AGAIN
 2233 32126 1160          TAD JOB
 2234 32127 7650          SNA CLA         /WAS ANY JOB ACTIVE?
 2235 32130 5467          EXIT            /NO - JUST EXIT & HOPE IT WORKS
 2236 32131 5732          JMP I .+1       /YES - GO PUT IT TO SLEEP FOR 2 SECONDS
 2237 32132 4364          DOXSTM
 2238             
 2239             /ROUTINE TO MAKE AN ENTRY ON THE LEVEL 2 INTERRUPT QUEUE.
 2240 32133 0000  L2QUER, 0               /ENTER WITH DISPATCH ADDRESS
 2241 32134 3374          DCA L2QENT      /SAVE INT SERVICE ADDRESS
 2242 32135 7012          RTR             / & THE LINK
 2243 32136 3372          DCA L2QLNK
 2244 32137 1013          TAD L2Q
 2245 32140 7041          CIA
 2246 32141 1014          TAD L2QE
 2247 32142 7640          SZA CLA         /ARE THE POINTERS CAUGHT UP?
 2248 32143 5350          JMP .+5         /NO
 2249 32144 1371          TAD L2QINI      /YES - RE-INITIALIZE THEM
 2250 32145 3013          DCA L2Q         / TO FORESTALL ANY OVERFLOW
 2251 32146 1371          TAD L2QINI
 2252 32147 3014          DCA L2QE
 2253 32150 1013          TAD L2Q
 2254 32151 1370          TAD L2QEND
 2255 32152 7500          SMA             /REACHED ABSOLUTE END?
 2256 32153 4525          REBOOT          /YES - JUST CRASH *****
 2257 32154 1035          TAD C0007
 2258 32155 7710          SPA CLA         /NO - PAST OUR DANGER MARK?
 2259 32156 5363          JMP L2QGO       /NO - WE'RE FINE
 2260 32157 1374          TAD L2QENT
 2261 32160 1373          TAD L2QRTC
 2262 32161 7650          SNA CLA         /YES - WAS THIS A CLOCK INTERRUPT?
 2263 32162 5365          JMP .+3         /YES - JUST DON'T QUEUE IT
 2264 32163 1374  L2QGO,  TAD L2QENT
 2265 32164 3413          DCA I L2Q       /QUEUE UP THE LEVEL-2 REQUEST
 2266 32165 1372          TAD L2QLNK      /RESTORE THE LINK
 2267 32166 7106          CLL RTL
 2268 32167 5733          JMP I L2QUER    / AND RETURN
 2269             
 2270 32170 0651  L2QEND, -L2QTB-20       /POINT AT WHICH WE CRASH
 2271 32171 7106  L2QINI, L2QTB-1
 2272 32172 0000  L2QLNK, 0
 2273 32173 5372  L2QRTC, -L2TIME
 2274 32174 0000  L2QENT, 0
 2275             
 2276                     IFNZRO OVERLA-.&4000    <GLITCH; *.-1>
 2277       2175          *OVERLA
 2278 32175 5322  OVERLA, JMP SLEEP       /PUT EAE TO SLEEP
 2279 32176 5777          JMP I .+1       /OK, FINISH IT UP
 2280 32177 5564          OVERL1

      /TSS/8 CONFIGURATION FOR UWM                                       Page 56


 2281                     PAGE
 2282             
 2283 32200 3510  UUOUDF, UDFSET
 2284 32201 4064  UHALTA, UHALT
 2285 32202 3177  UUOTBA, UUOTBL-1
 2286 32203 0064  UUOTLL, UUODTB-UUOTBL
 2287 32204 0770  C0770,  0770
 2288 32205 0777  C0777,  0777
 2289             
 2290       0003  UUOCAL= WS0
 2291             
 2292 32206 7240  UUO,    STA             /GET POINTER TO USER PARAMETERS-1
 2293 32207 1106          TAD L2SA
 2294 32210 3364          DCA UUSRC       /SAVE FOR POSSIBLE BLT CALL
 2295 32211 7240          STA
 2296 32212 1104          TAD L2SV0       /BACK UP USER PC TO POINT TO IOT IN QUESTION
 2297 32213 3003          DCA UUOCAL
 2298 32214 4600          JMS I UUOUDF    /SET USER DATA FIELD SELECT
 2299 32215 4150          UDF             /SELECT USER DATA FIELD
 2300 32216 1403          TAD I UUOCAL    /GET THE IOT THAT CAUSED ENTRY HERE
 2301 32217 6201          CDF
 2302 32220 3003          DCA UUOCAL      /SAVE IT
 2303                     IFZERO CPU-3  <
 2304                     TAD UUOCAL      /REGET THE IOT IF WE WANT TO TEST FOR A
 2305                     JMS I UUODSP    /6124, WHICH IS THE UUO. IF NOT RETURN.  >
 2306 32221 1003          TAD UUOCAL      /IS IT AN IOT OR A GROUP 2 OPERATE
 2307 32222 0040          AND C1000
 2308 32223 7640          SZA CLA
 2309 32224 5601          JMP I UHALTA    /IT'S A HLT, OSR, OR SOME COMBINATION
 2310 32225 1202          TAD UUOTBA      /IT'S AN IOT; NOW FIGURE OUT WHICH ONE
 2311 32226 3015          DCA AXS1
 2312             
 2313             /FIRST SEARCH FOR COMBINED RESIDENT IOTS (I.E. DEVICES)
 2314 32227 1003          TAD UUOCAL      /FIRST SEE IF IT MIGHT BE MICRO-CODED
 2315 32230 0204          AND C0770       /GET DEVICE CODE
 2316 32231 7041          CIA
 2317 32232 3367          DCA UUOC77      /SAVE-CODE
 2318 32233 1415          TAD I AXS1      /GET ENTRY FROM DEVICE LIST
 2319 32234 7450          SNA             /END OF LIST?
 2320 32235 5247          JMP UUO22       /YES - IT'S NOT ONE OF THESE
 2321 32236 1367          TAD UUOC77      /COMPARE WITH THIS CODE
 2322 32237 7640          SZA CLA         /THIS IOT?
 2323 32240 5233          JMP .-5         /NO, KEEP GOING
 2324 32241 1015  UUO3,   TAD AXS1        /YES, NOW COMPUTE ADDRESS OF SERVICE ROUTINE
 2325 32242 1203          TAD UUOTLL      /OFFSET BETWEEN IOT TABLE AND DISPATCH TABLE
 2326 32243 3367          DCA UUOC77      /POINTS TO DISPATCH ENTRY
 2327 32244 1767          TAD I UUOC77    /GET DISPATCH ADDRESS
 2328 32245 3367          DCA UUOC77      /SAVE IT
 2329 32246 5767          JMP I UUOC77    /AND JUMP TO IT

      /TSS/8 CONFIGURATION FOR UWM                                       Page 57


 2330             /SEARCH FOR UNCOMBINED RESIDENT IOTS
 2331 32247 1003  UUO22,  TAD UUOCAL      /IT'S NOT MICROCODED
 2332 32250 7041          CIA
 2333 32251 3367          DCA UUOC77      /-IOT CAUSING INTERRUPT
 2334 32252 1415          TAD I AXS1      /GET IOT FROM TABLE
 2335 32253 7500          SMA             /AT END OF LIST YET?
 2336 32254 5261          JMP UUO4        /YES (LIST TERMINATED BY 0)
 2337 32255 1367          TAD UUOC77      /THIS YET?
 2338 32256 7640          SZA CLA
 2339 32257 5252          JMP .-5         /NO; KEEP LOOKING
 2340 32260 5241          JMP UUO3        /YES; NOW GO GET DISPATCH ADDRESS AND AWAY---
 2341             
 2342             /SEARCH FOR SHORT NON-RESIDENT IOTS
 2343 32261 1415  UUO4,   TAD I AXS1      /NOW WE'RE LOOKING FOR IOT'S HANDLED BY F/
 2344 32262 7450          SNA             /END OF LIST?
 2345 32263 5273          JMP UUO7        /NOT YET
 2346 32264 1367          TAD UUOC77      /THIS IOT?
 2347 32265 7640          SZA CLA
 2348 32266 5261          JMP UUO4        /NO; KEEP LOOKING HERE
 2349 32267 1003          TAD UUOCAL      /YES; THROW AWAY BITS 0-2 OF IOT
 2350 32270 0205          AND C0777
 2351 32271 3003          DCA UUOCAL      /AND SAVE IT
 2352 32272 5301          JMP UUO8        /THEN SET UP FOR FIP
 2353             
 2354 32273 1415  UUO7,   TAD I AXS1      /LOOK FOR IOT'S RETURNING MULTIPLE ARGUMENTS
 2355 32274 7450          SNA             /END OF LIST - IF SO, IT'S UNDEFINED
 2356 32275 5547          JMP I UUOERA    / SO IT'S AN "ILLEGAL IOT"
 2357 32276 1367          TAD UUOC77      /IS IT THIS IOT
 2358 32277 7640          SZA CLA
 2359 32300 5273          JMP UUO7        /NO, KEEP GOING
 2360             
 2361             /WE NOW FIND OUT HOW MANY PARAMETERS ARE TO BE PASSED TO
 2362             /FIP AND SET UP THE 'JOBLNK' PARAMETER BLOCK.
 2363 32301 1015  UUO8,   TAD AXS1        /NOW FIND NUMBER OF ARGUMENTS
 2364 32302 1203          TAD UUOTLL      /THIS POINTS TO # IN UUOTBL
 2365 32303 4327          JMS GETUSP      /GET USER PARAMETERS
 2366 32304 1161          TAD CJOBDA      /GET POINTER TO STR0
 2367 32305 4574          GETJTA
 2368 32306 0000           JOBSTS
 2369 32307 6211          DATFLD          /OR IN "NON RESIDENT IOT" BIT
 2370 32310 4460          IOR             /SO F/P WILL RUN IN PLACE OF THIS JOB
 2371 32311 0100           JSIOT
 2372 32312 5577          WAIT            /AND WAIT FOR FIP

      /TSS/8 CONFIGURATION FOR UWM                                       Page 58


 2373             /ROUTINE TO HANDLE THE CLEAR-STATUS (CLS) IOT.
 2374 32313 4477  UCLS,   GETJTW          /GET THE ADDRESS OF STR0 INTO JOBSWA
 2375 32314 0000           JOBSTS
 2376 32315 7346          CLA CLL CMA RTL /AC = -3
 2377 32316 4721          JMS I UCSTOA    /CLEAR STR0 - STR2 ACCORDING TO MASK
 2378 32317 3106          DCA L2SA        /THEN CLEAR USER'S AC
 2379 32320 5461          UUOEXT          / & EXIT
 2380             
 2381 32321 7000  UCSTOA, UCSTO
 2382             
 2383 32322 1160  UPHANA, TAD JOB
 2384 32323 4463          ERROR           /INIDICATE HUNG DEVICE
 2385 32324 0006           HUNGDV
 2386 32325 5577          WAIT            / AND RESCHEDULE

      /TSS/8 CONFIGURATION FOR UWM                                       Page 59


 2387             /THIS ROUTINE COPIES THE PARAMETERS SUPPLIED BY THE
 2388             /USER PROGRAM INTO *BLOCK IN FREE CORE, WHICH IS POINTED
 2389             /TO BY JOBLNK.
 2390             /THE IOT ITSELF IS SAVED IN THE FIRST WORD OF THE PARAMETER BLOCK
 2391             /IF NO ARGUMENTS ARE REQUIRED, JOBLNK CONTAINS THE IOT,
 2392             /RATHER THAN A POINTER TO THE IOT PARAMETER BLOCK.
 2393             /FIP CAN TELL BY EXAMING BITS 0-2 OF JOBLNK: IF THEY ARE
 2394             /NON-ZERO; JOBLNK IS AN ADDRESS. IF ZERO; JOBLNK IS THE IOT ITSELF
 2395             /NOW YOU KNOW WHY THE START OF THE  FREE CORE LIST MUST ALWAYS BE
 2396             /ON OR AFTER 1,000 OCTAL IN FIELD ONE?
 2397             
 2398 32326 1736  UUODAC, DSKACT
 2399             
 2400 32327 0000  GETUSP, 0               /ENTER WITH PTR -# ARGUMENTS TO GET
 2401 32330 3367          DCA UUOC77      /SAVE IT
 2402 32331 1103          TAD L2SF        /GET THE USER'S FIELD
 2403 32332 0035          AND C0007
 2404 32333 4726          JMS I UUODAC    /ANY DISC REQUESTS PENDING IN THAT FIELD?
 2405 32334 5470          REDO            /YES-DEFER THIS IOT UNTIL SUCH ACTIVITY CEASES
 2406 32335 7344          CLL CLA CMA RAL /DISC QUIET-CAN WE GET PARAMETER BLOCKS?
 2407 32336 1047          TAD FRECNT
 2408 32337 7750          SPA SNA CLA
 2409 32340 5470          REDO            /NO-TRY LATER
 2410 32341 1161          TAD CJOBDA      /OK-NOW  GET PTR TO JOBLNK
 2411 32342 4574          GETJTA
 2412 32343 0007           JOBLNK
 2413 32344 3366          DCA UUOLNK      /AND SAVE IT
 2414 32345 1767          TAD I UUOC77
 2415 32346 7450          SNA             /ANY ARGUMENTS?
 2416 32347 5370          JMP GETUS1      /NO-JUST SAVE IOT IN JOBLNK
 2417 32350 3367          DCA UUOC77      /YES. SAVE # ARGUMENTS
 2418 32351 1366          TAD UUOLNK      /PUT ADDRESS OF LINKAGE BLOCK IN UUOLNK
 2419 32352 4571          GETBLK          /GET A FREE BLOCK
 2420 32353 5470          REDO            /NONE AVAILABLE. TRY AGAIN LATER
 2421 32354 6211          DATFLD
 2422 32355 1766          TAD I UUOLNK    /GET ADDRESS OF PARAMETER BLOCK
 2423 32356 6201          CDF
 2424 32357 3366          DCA UUOLNK      /SAVE IT IN BLT CALLING SEQUENCE
 2425 32360 1151          TAD UUDF        /MOVE USER PARAMETERS TO LINKAGE AREA IN DATFLD
 2426 32361 3363          DCA .+2
 2427 32362 4567          BLT
 2428 32363 0000           0              /SOURCE FIELD SELECT
 2429 32364 0000  UUSRC,   0              /SOURCE ADDRESS
 2430 32365 6211           DATFLD         /DESTINATION FIELD SELECT
 2431 32366 0000  UUOLNK,  0              /DESTINATION ADDRESS
 2432 32367 0000  UUOC77,  0              /-#WORDS
 2433 32370 1003  GETUS1, TAD UUOCAL      /NOW GET IOT
 2434 32371 6211          DATFLD
 2435 32372 3766          DCA I UUOLNK    /AND SAVE IT IN APPROPRIATE PLACE
 2436 32373 6201          CDF
 2437 32374 5727          JMP I GETUSP    /RETURN

      /TSS/8 CONFIGURATION FOR UWM                                       Page 60


 2438                     IFNZRO CPU-3 <
 2439             /DECTAPE FIELD 0 DISPATCHES
 2440                     IFZERO TC01-1 <
 2441                     IFNZRO DTL20-.&4000     <GLITCH; *.-1>
 2442       2375          *DTL20
 2443 32375 6213  DTL20,  CIF DATFLD      /LEVEL 2 DISPATCHER
 2444 32376 5777          JMP I .+1
 2445 32377 2000          DTL21
 2446                     >>
 2447                     IFZERO CPU-3 <
 2448             UUODSP, DISCHK          /POINTER TO DISPLAY ROUTINE IF DESIRED.
 2449                     >

      /TSS/8 CONFIGURATION FOR UWM                                       Page 61


 2450                     PAGE
 2451             
 2452 32400 0265  CLKTMR, CLKMIS
 2453 32401 6200  L2COUT, CHOUT
 2454 32402 6222  L2OUTA, CONOUT
 2455       0003  SCHNJN= WS0
 2456 32403 2603  SCHE1A, SCHED1
 2457 32404 7132  ICLK2,  -INCLK2-1
 2458 32405 1000  ICLK1,  -INCLK1
 2459             
 2460             /LEVEL-2 CLOCK HANDLER:
 2461             /       INCREMENT OUR DAY-CLOCK
 2462             /       RUN THE JOB WAIT-TIMERS
 2463             /       FORCE-FEED THE TELETYPES
 2464             /       CHECK FOR HUNG DEVICES
 2465             /       DECREMENT JOB'S QUANTUM & RESCHEDULE IF NECESSARY
 2466             /
 2467 32406 1134  L2TIME, TAD C7400
 2468 32407 3600          DCA I CLKTMR    /RESET CRASH-CHECK TIMER
 2469 32410 2051          ISZ CLK1        /UPDATE LOW ORDER DAY CLOCK
 2470 32411 5221          JMP L2TIM1
 2471 32412 2050          ISZ CLK2        /UPDATE HIGH ORDER TIME. WOW!
 2472 32413 5221          JMP L2TIM1
 2473 32414 2166          ISZ DATE        /MIDNIGHT - INCREMENT THE DATE
 2474 32415 1204          TAD ICLK2       /REINITIALIZE THE CLOCK FOR ANOTHER
 2475 32416 3050          DCA CLK2        / 24 HOURS WORTH OF TICKS
 2476 32417 1205          TAD ICLK1
 2477 32420 3051          DCA CLK1
 2478             
 2479             /NOW WE DECREMENT ALL THE JOB WAIT-TIMERS (FROM 'STM').
 2480 32421 6213  L2TIM1, CIF DATFLD
 2481 32422 4704          JMS I TIMERA    /FIELD 1 ROUTINE TO RUN TIMERS
 2482             
 2483             /HERE WE FORCE-FEED ALL THE TELETYPES.  IF THE
 2484             /ECHO-ROUTINE HAS BEEN SCHEDULED, WE DON'T HAVE
 2485             /TO DO ANYTHING, SINCE ECHO WILL FEED THEM WHEN
 2486             /IT HAS FINISHED; THEN WE JUST ZERO THE ECHO-FLAG
 2487             /SO IT COULD NEVER WRAP-AROUND IN A BUSY SYSTEM.
 2488             /
 2489 32423 6002          IOF             /CAN'T INTERRUPT WHILE CHECKING 'TBUFF'
 2490 32424 2752          ISZ I ECHOFA    /IS THE ECHOING ROUTINE SCHEDULED?
 2491 32425 5230          JMP .+3         /YES - THEN WE NEEDN'T FEED THE TERMINALS
 2492 32426 4602          JMS I L2OUTA    /NO - FEED ALL THE HUNGRY TELETYPES
 2493 32427 7240          CLA CMA         / AND RESET THE FLAG
 2494 32430 6001          ION
 2495 32431 3752          DCA I ECHOFA

      /TSS/8 CONFIGURATION FOR UWM                                       Page 62


 2496             /NOW WE INCREMENT OUR ACTIVE DEVICE TIMERS, CHECKING
 2497             /FOR HUNG DEVICES.  IF THERE ARE ANY, THEY GET A SEPARATE
 2498             /LEVEL-2 ACTIVITY SCHEDULED TO HANDLE THEM.
 2499 32432 7000  PTPSKA, NOP             /WHEN PUNCH IS ON ISZ
 2500 32433 7410          SKP
 2501 32434 5240          JMP PTHUNG      /PUNCH IS HUNG
 2502 32435 7000  PTRSKA, NOP             /WHEN READER IS ON-ISZ
 2503 32436 5242          JMP L2TIM2
 2504 32437 7001          IAC             /READER IS HUNG
 2505 32440 1277  PTHUNG, TAD PTHSER      /SCHEDULE LEVEL 2 SERVICE FOR HUNG PUNCH
 2506 32441 3413          DCA I L2Q       / VIA L2QUE
 2507             
 2508 32442 1160  L2TIM2, TAD JOB
 2509 32443 7650          SNA CLA         /IS NULL-JOB RUNNING?
 2510 32444 5256          JMP SCHED2      /YES - GO FIND SOMETHING MORE PRODUCTIVE
 2511 32445 2043          ISZ JOBTIM      /NO. TIME OUT?
 2512 32446 5467          EXIT            /NO - BACK TO USER JOB
 2513             
 2514             /"RSCHED" IS ENTERED AT THIS POINT
 2515             /RSCHED'S FUNCTION IS TO FIND JOBS TO RUN, REGARDLESS
 2516             /OF WHERE THEY MAY CURRENTLY RESIDE. IF THEY ARE IN CORE,
 2517             /GOOD; IF NOT THE NECESSARY STEPS WILL BE TAKEN TO
 2518             /BRING THEM INTO CORE. IN THE LATTER CASE, WE WILL THEN
 2519             /GO OFF AND FIND SOMETHING TO DO WHILE THE NON-RESIDENT
 2520             /JOB IS MADE RESIDENT
 2521             
 2522 32447 1160  SCHED0, TAD JOB         /NULL JOB?
 2523 32450 7650          SNA CLA
 2524 32451 5256          JMP SCHED2      /YES
 2525 32452 1043          TAD JOBTIM      /IS JOB RUNNING ON BORROWED TIME?
 2526 32453 7710          SPA CLA
 2527 32454 5467          EXIT            /NO, GO BACK TO IT
 2528 32455 4473  WSCHED, SAVJOB          /YES. SAVE IT'S STATE. JOB:=0 ('WAIT' ENTRY)
 2529 32456 7240  SCHED2, CLA CMA
 2530 32457 1701          TAD I SCHMUC    /INITIALIZE THE # OF USER CORE FIELDS TO
 2531 32460 3340          DCA SCHEI4      / STUDY AT THIS TIME
 2532 32461 1053          TAD SQREQ       /SWAP REQUEST IN PROGRESS?
 2533 32462 7650          SNA CLA         /IF SO, THERE IS NO POINT IN GOING FURTHER NOW.
 2534 32463 5603          JMP I SCHE1A    /NO - PROCEED
 2535                                     /YES, SINCE A SWAP IS IN PROCESS, RUN SOME OTHER
 2536                                     /RESIDENT JOB NOW.

      /TSS/8 CONFIGURATION FOR UWM                                       Page 63


 2537             /SCHEDULE NEXT RESIDENT JOB
 2538             /THIS IS THE ENTRY FOR "SCHED"
 2539             /WE ONLY COME HERE AFTER FINDING THE JOB WE REALLY
 2540             /WANT TO RUN IS CURRENTLY INDISPOSED TO RUNNING. SCHED
 2541             /WILL FIND SOME RESIDENT JOB TO RUN. IF NO JOB IS
 2542             /RUNNABLE OR RESIDENT, JOB 0 (THE NULL JOB) IS RUN.
 2543             
 2544 32464 1052  SCHEDI, TAD COMCNT      /ANY SI COMMANDS WAITING?
 2545 32465 7650          SNA CLA
 2546 32466 5271          JMP SCHEI1      /NO - GO LOOKING FOR USER JOB
 2547 32467 1141          TAD SCHSI       /YES - SCHEDULE SI IMMEDIATELY?
 2548 32470 5703          JMP I SCHE2A
 2549 32471 2340  SCHEI1, ISZ SCHEI4      /HAVE WE SCHEDULED EVERY FIELD
 2550 32472 4702          JMS I SCHNXT    /NO, FIND RESIDENT JOB
 2551 32473 7450          SNA
 2552 32474 5700          JMP I SCHNUA    /RUN NULL JOB
 2553 32475 5676          JMP I .+1       /RUN IT
 2554 32476 3000          SCHEI3
 2555             
 2556 32477 5741  PTHSER, PTRHNG  /LEVEL-2 SERVICE ROUTINE FOR PAPERTAPE
 2557 32500 3472  SCHNUA, SCHNUL
 2558 32501 1300  SCHMUC, CORCNT  /POINTER TO NUMBER OF USER FIELDS
 2559 32502 4000  SCHNXT, NXTCOR
 2560                     IFNZRO SI-200   <GLITCH; *.-1>
 2561       0141  SCHSI=  C0200   /SI
 2562 32503 3012  SCHE2A, SCHEI2
 2563 32504 2600  TIMERA, TIMER0
 2564             
 2565             TIPTR1,                 /#OF TICKS BEFORE READER IS HUNG
 2566                     IFZERO CPU-3  <-200>
 2567 32505 7753          IFNZRO CPU-3  <-25>
 2568 32506 0000          0               /READER COUNTER
 2569       2306  PTRISZ= ISZ TIPTR1+1
 2570             
 2571             TIPTP1,
 2572                     IFZERO CPU-3 <-400>     /# OF TICKS BEFORE PUNCH IS HUNG
 2573                     IFNZRO CPU-3 <
 2574 32507 7630                  IFZERO LPT <-150>
 2575                             IFNZRO LPT <-400>>
 2576 32510 0000          0               /PUNCH TIMER
 2577       2310  PTPISZ= ISZ TIPTP1+1

      /TSS/8 CONFIGURATION FOR UWM                                       Page 64


 2578             /TELETYPE ECHOING SERVICE
 2579             /ENTERED FROM L2QUE WHENEVER CHARACTER IS
 2580             /RECEIVED PUSHES CHARACTER THROUGH GIR
 2581             
 2582 32511 7240  ECHO,   STA
 2583 32512 3752          DCA I ECHOFA    /RESET FLAG
 2584             
 2585                     IFZERO D680-2 <
 2586             /TTY CHARACTER INPUT
 2587                     TAD KCHAR
 2588                     SNA             /CTY INPUT?
 2589                     JMP ECHO0       /NO
 2590                     AND C0377       /YES, CLEAR HOUSEKEEPING BITS
 2591                     DCA TTCHAR      /YES - SAVE CHARACTER
 2592                     DCA KCHAR       /INDICATE NO CONSOLE CHARACTER
 2593                     JMP .+4         /SOURCE IS K00
 2594                     >
 2595 32513 4536  ECHO0,  T8SIR           /KEYBOARD INPUT FROM DC08 SYSTEM?
 2596 32514 5346          JMP ECHO1       /NO CHARACTERS TO DELIVER
 2597             IFZERO D680-2 < IAC>    /INCREMENT LINE # TO CONVERT TO TSS/8 CONSOLE #
 2598 32515 3112          DCA SOURCE      /SAVE ORIGINATING KEYBOARD #
 2599 32516 1112          TAD SOURCE
 2600 32517 7104          CLL RAL         /GET DEUTBL INDEX (=2*LINE #)
 2601 32520 1163          TAD DEVTBA      /GENERATE DEUTBL POINTER
 2602 32521 3340          DCA L2TBA       /DEVICE TABLE ADDRESS+2*LINE#
 2603 32522 6211          DATFLD
 2604 32523 1740          TAD I L2TBA
 2605 32524 6201          CDF
 2606 32525 7640          SZA CLA         /IS THERE ALREADY A DDB FOR THIS CONSOLE?
 2607 32526 5337          JMP ECHO2       /YES - WE ALREADY KNEW ABOUT IT.
 2608 32527 1340          TAD L2TBA       /NO - IT MUST BE A NEW JOB
 2609 32530 4572          GETDDB          /GET A DDB
 2610 32531 5343          JMP L2BELL      /NONE AVAILABLE - RING A BELL
 2611 32532 6211          DATFLD
 2612 32533 1740          TAD I L2TBA     /OR IN THE SI BIT IN WORD 1 OF DDB
 2613 32534 4460          IOR             /DEST:=S.I.
 2614 32535 1000           DSI
 2615 32536 6201          CDF
 2616 32537 4472  ECHO2,  GIR             /NOW CALL GIR TO HANDLE THE CHARACTER
 2617             SCHEI4,
 2618 32540 0000  L2TBA,   0
 2619 32541 5343          JMP L2BELL      /WON'T FIT - RING A BELL
 2620 32542 5313          JMP ECHO0       /NEXT LINE
 2621             
 2622             L2BELL,
 2623                     IFZERO CPU-3  <IOF>
 2624 32543 4601          JMS I L2COUT    /OUTPUT A BELL; CHARACTER WAS LOST
 2625 32544 4207          4207
 2626                     IFZERO CPU-3  <ION>
 2627 32545 5313          JMP ECHO0
 2628             
 2629 32546 6002  ECHO1,  IOF             /STATUS CHECKING CAN'T BE INTERRUPTED
 2630 32547 4602          JMS I L2OUTA    /OUTPUT CHARACTERS RECEIVED
 2631 32550 6001          ION
 2632 32551 5467          EXIT            / AND EXIT LEVEL 2
 2633             
 2634 32552 6457  ECHOFA, ECHOFL          /POINTER TO ECHO FLAG

      /TSS/8 CONFIGURATION FOR UWM                                       Page 65


 2635                     /ROUTINE TO HANDLE CONSOLE TTY
 2636                     /FOR PT08 SYSTEMS, CONSOLE IS JUST ANOTHER PT08
 2637                     /"TCHAR" CONTAINS THE CONSOLE TTY CHARACTER
 2638                     /IT CAN HAVE THREE STATES:
 2639                     /       0        - NO NEW CHARACTER TO OUTPUT - STOP TELEPRINTER
 2640                     /       MINUS    - CHARACTER ALREADY OUTPUT   - STOP TELEPRINTER
 2641                     /       POSITIVE - CHARACTER WAITING TO BE OUTPUT
 2642             
 2643                     IFZERO D680-2 <
 2644             TINT2,  TAD TCHAR       /WHICH STATE ARE WE IN
 2645                     SPA SNA CLA
 2646                     JMP TINT1       /CHARACTER IS OLD - FORGET IT
 2647                     TAD TCHAR       /OUTPUT CHARACTER
 2648                     TLS
 2649                     STL RAR         /REMEMBER IT'S BEEN OUTPUT
 2650                     SKP
 2651             TINT1,  TCF             /CLEAR FLAG
 2652                     DCA TCHAR       /SAVE TCHAR STATUS
 2653                     DISMIS          /ALL DONE
 2654                     >
 2655                             IFZERO CPU-3 <
 2656             DISCHK, 0                       /COMES HERE TO CHECK TO A 614X CLASS INSTRUCTION
 2657                     AND     C7770           /JUST GET THE DEVICE SELECTOR BITS.
 2658                     TAD     DISLIT          /CHECK FOR BEING IN THE 614X CLASS
 2659                     SZA CLA
 2660                     JMP I   DISCHK          /NOT IN THE CLASS. RETURN
 2661                     TAD     UUOCAL          /REGET THE IOT
 2662                     AND     C0007           /JUST GET THE IOP PULSE BITS
 2663                     CDF CIF 10              /SET TO UPPER CORE
 2664                     JMS I   DISGO           /AND GO THERE
 2665                     JMP I   DISCHK          /COMES HERE IF NOT LEGAL IOT
 2666                     UUOEXT                  /COMES HERE IF ALL IS WELL
 2667                     >

      /TSS/8 CONFIGURATION FOR UWM                                       Page 66


 2668                     IFNZRO 2574-.&4000      <GLITCH; *.-1>
 2669       2574          *2574
 2670             /NULLJOB IS THE ONLY CODE IN FIELD 0 WHICH
 2671             /RUNS IN USER MODE.
 2672             /IT IS RUN WHENEVER THERE IS NOTHING ELSE
 2673             /TO DO, OR NOTHING ELSE THAT CAN BE DONE
 2674             /
 2675             /WHEN DEBUGGING THE MONITOR, IT IS POSSIBLE
 2676             /TO STOP (VIA THE PDP-8 OPERATOR CONSOLE) THE MONITOR
 2677             /TO ENTER XDDT.  THIS MAY ONLY BE DONE
 2678             /WHEN THE SYSTEM IS IN NULJOB.  IF THE 
 2679             /SYSTEM IS STOPPED WHEN NOT IN NULJOB, IT MAY
 2680             /BE RESTARTED BY HITTING "CONTINUE", AND THEN
 2681             /STOPPED AGAIN.  KEEP TRYING - EVENTUALLY YOU'LL CATCH IT
 2682             /DON'T TRY TO STOP THE SYSTEM (AND GET AWAY WITH IT)
 2683             /IF THE DISC OR DECTAPE IS ACTIVE.
 2684             /IF THE SYSTEM IS STOPPED IN NULJOB, IT MAY BE
 2685             /RESTARTED AT LOCATION 4201 IN FIELD 0.
 2686             
 2687                     IFNZRO CPU-3 <
 2688 32574 2003  NULJOB, ISZ WS0
 2689 32575 5374          JMP .-1
 2690 32576 7001          IAC             /DISPLAY A BINARY-COUNT WHEN IDLE
 2691 32577 5374          JMP .-3
 2692                     >
 2693                     IFZERO CPU-3 <
 2694             NULJOB, JMP I .+1       /GO TO THE DISPLAY IDLE ROUTINE.
 2695                     DISIDL          /DISPLAY IDLE MESSAGE.
 2696             DISGO,  PDPEXT
 2697             DISLIT, -6140
 2698                     >

      /TSS/8 CONFIGURATION FOR UWM                                       Page 67


 2699                     PAGE
 2700             
 2701 32600 4603  SCHNXA, NXTJOB
 2702                     IFNZRO JSIOT-100        <GLITCH; *.-1>
 2703       0037  SCJIOT= C0100   /JSIOT
 2704                     IFNZRO FIP-400  <GLITCH; *.-1>
 2705       0156  SCFIP=  C0400   /FIP
 2706                     IFNZRO SI-200   <GLITCH; *.-1>
 2707       0141  SCSI=   C0200   /SI
 2708                     IFNZRO LOCK-2000        <GLITCH; *.-1>
 2709       7332  SCLOCK= CLA CLL CML RTR /LOCK BIT  AC = 2000
 2710                     IFNZRO FSWP-4000        <GLITCH; *.-1>
 2711 32601 4037  C4037,  4037    /FSWP + JOB # MASK
 2712 32602 1736  SCDACT, DSKACT
 2713                     IFNZRO JSEREN-2000      <GLITCH; *.-1>
 2714       7332  SCHERN= CLA CLL CML RTR /JSEREN BIT    AC = 2000
 2715       0032  FANFLD= C0002           /PHANTOMS ALWAYS RUN IN FIELD 2
 2716             
 2717             
 2718 32603 1055  SCHED1, TAD FIT         /DO WE KNOW WHAT WE WANT TO BRING IN NEXT?
 2719 32604 7440          SZA
 2720 32605 5244          JMP SCHED3      /YES, SO SKIP AS MUCH CODE AS POSSIBLE
 2721 32606 1052          TAD COMCNT      /NO. S.I. REQUEST?
 2722 32607 7640          SZA CLA
 2723 32610 5235          JMP SCHED6      /YES, SCHEDULE SI
 2724 32611 4600  SCHE13, JMS I SCHNXA    /GET NEXT RUNABLE JOB
 2725 32612 7450          SNA
 2726 32613 5465          SCHED           /NONE TO RUN
 2727 32614 3055          DCA FIT         /SAVE JOB #
 2728 32615 3057          DCA BONUS       /BONUS JOB ALREADY PICKED UP
 2729 32616 1055          TAD FIT
 2730 32617 1044          TAD JOBTBA
 2731 32620 4500          GETJTI          /GET CONTENTS OF STR0
 2732 32621 0000           JOBSTS
 2733 32622 6211          DATFLD
 2734 32623 0037          AND SCJIOT
 2735 32624 7640          SZA CLA         /FIP REQUIRED?
 2736 32625 5237          JMP SCHED7      /YES
 2737 32626 1405          TAD I JOBSWA    /NO
 2738 32627 0035          AND C0007
 2739 32630 7650          SNA CLA         /ANY ERROR BITS SET?
 2740 32631 5242          JMP SCHED9      /NO
 2741 32632 7332          SCHERN          /YES
 2742 32633 0405          AND I JOBSWA
 2743 32634 7650          SNA CLA         /CAN HE HANDLE THE ERROR?
 2744 32635 1141  SCHED6, TAD SCSI        /NO - CALL FOR SI
 2745 32636 7410          SKP
 2746 32637 1156  SCHED7, TAD SCFIP
 2747 32640 1055          TAD FIT
 2748 32641 3055          DCA FIT
 2749 32642 6201  SCHED9, CDF
 2750 32643 1055          TAD FIT
 2751 32644 0144  SCHED3, AND C0600       /IS FIT JOB FIP OR SI?
 2752 32645 7650          SNA CLA
 2753 32646 5275          JMP SCHE11      /NO
 2754 32647 1442          TAD I FANCOR    /IS FIP OR SI IN CORE?
 2755 32650 0055          AND FIT

      /TSS/8 CONFIGURATION FOR UWM                                       Page 68


 2756 32651 0144          AND C0600
 2757 32652 7650          SNA CLA         /IS IT THE PROPER PHANTOM?
 2758 32653 5307          JMP SCHE15      /NO- SCHEDULE THEIR SWAP IN
 2759 32654 1442          TAD I FANCOR    /YES-IS THE PHANTOM ABOUT TO BE SWAPPED OR IN USE?
 2760 32655 0201          AND C4037       /SWAP + JOB #
 2761 32656 7640          SZA CLA
 2762 32657 5263          JMP .+4         /YES-NOT MUCH TO DO NOW
 2763 32660 7332          SCLOCK          /LOCK PHANTOM FOR THIS JOB
 2764 32661 1055          TAD FIT         /NO-LOCK PHANTOM FOR THIS USER
 2765 32662 3442          DCA I FANCOR    /INDICATE THAT THIS FIELD IS NOW LOCKED
 2766 32663 3055          DCA FIT         /CLEAR FIT
 2767 32664 1442          TAD I FANCOR    /IS THE SWAP COMPLETE?
 2768 32665 7710          SPA CLA
 2769 32666 5465          SCHED           /NO-FIND SOMETHING ELSE TO DO
 2770 32667 1032          TAD FANFLD      /YES-DISC ACTIVITY HERE?
 2771 32670 4602          JMS I SCDACT
 2772 32671 5465          SCHED           /YES-FORGET ABOUT PHANTOM FOR NOW
 2773 32672 1442          TAD I FANCOR    /NO
 2774 32673 5674          JMP I .+1       /NOW GO FINISH BOOKKEEPING
 2775 32674 3012          SCHEI2
 2776             
 2777 32675 1055  SCHE11, TAD FIT         /IS FIT JOB IN CORE?
 2778 32676 4570          CORE
 2779 32677 6637           FSWP+LOCK+FIP+SI+37
 2780 32700 5330          JMP SCHE10      /NO-HE HAS TO BE SWAPPED IN
 2781 32701 3103          DCA L2SF        /SAVE FIELD
 2782 32702 1055          TAD FIT         /RESTORE LEVEL 2 REGISTERS
 2783 32703 4474          RESJOB
 2784 32704 3055          DCA FIT         /CLEAR FIT
 2785 32705 5475          START           /START JOB
 2786             
 2787 32706 7100  SCHBSY, FSWP+LOCK+NOTRUN+FIX
 2788             
 2789 32707 1442  SCHE15, TAD I FANCOR    /FANFLD LOCKED, SWAPPED, OR NOTRUN?
 2790 32710 0306          AND SCHBSY      / BIT 5 - IS PRESENT IF DISC I/O JUST COMPLETED
 2791 32711 7640          SZA CLA
 2792 32712 5211          JMP SCHE13      /YES- GO FIND SOMETHING ELSE TO DO NOW
 2793 32713 1442          TAD I FANCOR    /IS THERE CURRENTLY A USER JOB IN FANFLD?
 2794 32714 0036          AND C0037       /IS THERE A USER JOB IN FANFLD
 2795 32715 7640          SZA CLA
 2796 32716 5321          JMP SCHE16      /YES, FORCE IT OUT
 2797 32717 1032          TAD FANFLD      /NO; FINISH:=FANFLD
 2798 32720 5334          JMP SCHE14
 2799             
 2800 32721 1442  SCHE16, TAD I FANCOR    /IS A PHANTOM IN HERE?
 2801 32722 0144          AND C0600
 2802 32723 7640          SZA CLA
 2803 32724 5211          JMP SCHE13      /YES, GO FIND ANOTHER JOB TO RUN
 2804 32725 1032          TAD FANFLD      /FORCE JOB OUT OF FANFLD
 2805 32726 3056          DCA FORCE
 2806 32727 5344          JMP SCHFR1
 2807             
 2808 32730 4570  SCHE10, CORE            /HAVE A TOTALLY EMPTY FIELD?
 2809 32731 7777           7777
 2810 32732 5757          JMP I SCHSCN    /NO - SCAN FOR SWAPPABLE FIELD
 2811 32733 0035  SCHE12, AND C0007       /YES - GET THE FIELD NUMBER
 2812 32734 3054  SCHE14, DCA FINISH      /FINISH:=FIELD #

      /TSS/8 CONFIGURATION FOR UWM                                       Page 69


 2813 32735 1054          TAD FINISH      /SET SWAP BIT IN CORTBL ENTRY
 2814 32736 1162          TAD CORTBA
 2815 32737 3003          DCA SUJT2       /POINTS TO CORTBL ENTRY
 2816 32740 1055          TAD FIT         /JOB TO SWAP IN
 2817 32741 1360          TAD SCHSWP      /SWAP + NOTRUN
 2818 32742 3403          DCA I SUJT2     /SAVE IN CORTBL
 2819 32743 5761          JMP I SCSWAP    /SWAP IN
 2820 32744 1056  SCHFR1, TAD FORCE       /DISC XFER IN PROGRESS?
 2821 32745 4602          JMS I SCDACT
 2822 32746 5465          SCHED           /YES - CAN'T FORCE IT OUT OR TRANSFER WILL BE MESSED UP
 2823 32747 1056          TAD FORCE
 2824 32750 1162          TAD CORTBA
 2825 32751 3003          DCA SUJT2       /CORTBL POINTER TO FORCED FIELD
 2826 32752 1056          TAD FORCE
 2827 32753 7041          CIA
 2828 32754 3054          DCA FINISH      /SET FINISH=-FORCE (TO INDICATE SWAP OUT)
 2829 32755 5756          JMP I .+1       /NOW GO SET UP THE OUTSWAP
 2830 32756 5673          SWPOUT
 2831             
 2832 32757 7323  SCHSCN, SCNSWP
 2833 32760 5000  SCHSWP, FSWP+NOTRUN
 2834 32761 5701  SCSWAP, SWAP
 2835       0003  SUJT2=  WS0

      /TSS/8 CONFIGURATION FOR UWM                                       Page 70


 2836             /ROUTINE TO HANDLE THE 'ACT' IOT - RETURN ANY JOB'S ACCT #
 2837 32762 1106  UACT,   TAD L2SA        /GET THE DESIRED JOB #
 2838 32763 7450          SNA             /HIS OWN JOB?
 2839 32764 1160          TAD JOB         /YES
 2840 32765 0036          AND C0037
 2841 32766 1044          TAD JOBTBA
 2842 32767 4500          GETJTI          /GET THE ACCOUNT #
 2843 32770 0015           JOBACT
 2844 32771 5376          JMP UUSAC1      / AND RETURN IT IN HIS AC
 2845             
 2846             /RETURN SEVERAL SIMPLE VALUES TO THE USER.
 2847 32772 0024          TICSPS
 2848 32773 1372  URCR,   TAD .-1         /RETURN THE REAL-TIME CLOCK-RATE
 2849 32774 5376          JMP UUSAC1
 2850             
 2851 32775 1166  UDATE,  TAD DATE        /RETURN TODAY'S DATE
 2852 32776 3106  UUSAC1, DCA L2SA
 2853 32777 5461          UUOEXT

      /TSS/8 CONFIGURATION FOR UWM                                       Page 71


 2854                     PAGE
 2855 33000 3003  SCHEI3, DCA SCHNJN      /SAVE JOB #
 2856 33001 1003          TAD SCHNJN
 2857 33002 0036          AND C0037       /GET JOBTBL INDEX
 2858 33003 1044          TAD JOBTBA      /GET POINTER TO JOB DATA
 2859 33004 4500          GETJTI          /GET VALUE OF STR0
 2860 33005 0000           JOBSTS
 2861 33006 0223          AND C0107       /DOES HE WANT TO RUN FIP OR SI FOR ERROR?
 2862 33007 7640          SZA CLA
 2863 33010 5624          JMP I SCHI1A    /YES - SCHEDULE FIP FOR HIM
 2864 33011 7410          SKP             /NO
 2865 33012 3003  SCHEI2, DCA SCHNJN      /IS JOB IN CORE?
 2866 33013 1003          TAD SCHNJN      /SEARCH CORTBL FOR HIM
 2867 33014 4570          CORE
 2868 33015 6637           FSWP+LOCK+FIP+SI+37
 2869 33016 5624          JMP I SCHI1A    /NOT THERE; HAVE TO SWAP HIM IN
 2870 33017 3103          DCA L2SF        /YES - SET UP SAVE FIELD
 2871 33020 1003          TAD SCHNJN      /RESTORE REST OF LEVEL 2 REGISTERS
 2872 33021 4474          RESJOB
 2873 33022 5475          START           /START JOB
 2874             
 2875 33023 0107  C0107,  107
 2876 33024 2471  SCHI1A, SCHEI1
 2877             
 2878 33025 1162  SWGOOD, TAD CORTBA      /GET A POINTER TO THIS FIELD'S
 2879 33026 1054          TAD FINISH      / ENTRY IN CORTBL
 2880 33027 3053          DCA SQREQ
 2881 33030 1055          TAD FIT         /JOB SWAPPED IN
 2882 33031 1040          TAD C1000       /NOT RUN BIT
 2883 33032 3453  SWGOD1, DCA I SQREQ     /STORE IT IN THE CORTBL
 2884 33033 3054          DCA FINISH
 2885 33034 3055          DCA FIT         /SET ALL CONCERNED WORDS TO ZERO
 2886 33035 3056          DCA FORCE
 2887 33036 3053          DCA SQREQ
 2888 33037 4641          JMS I SWSCON    /SEE IF ANY MORE DISC IO WAITING TO BE ATTENDED TO
 2889 33040 5466          RSCHED          /RESCHEDULE
 2890 33041 7017  SWSCON, DSKCON
 2891             
 2892 33042 1054  SWERR,  TAD FINISH
 2893 33043 7510          SPA             /WAS IT A SWAP-OUT OR SWAP-IN ERROR?
 2894 33044 7041          CIA             /DURING SWAP OUT
 2895 33045 1162          TAD CORTBA
 2896 33046 3053          DCA SQREQ       /POINTER TO CORTBA FOR THIS FIELD
 2897 33047 1032          TAD SWERER
 2898 33050 3261          DCA SWPER1      /SET SWAP-IN ERROR CODE INITIALLY
 2899 33051 1054          TAD FINISH
 2900 33052 7710          SPA CLA         /WAS THIS A SWAP-IN OR -OUT ERROR?
 2901 33053 5256          JMP .+3         /SWAP-OUT
 2902 33054 1055          TAD FIT         /SWAP-IN - JUST GET JOB NUMBER
 2903 33055 5260          JMP .+3
 2904 33056 2261          ISZ SWPER1      /SWAP-OUT ERROR CODE = 3
 2905 33057 1453          TAD I SQREQ     /GET THE JOB BEING SWAPPED OUT
 2906 33060 4463          ERROR           /SET APPROPRIATE ERROR CODE
 2907 33061 0000  SWPER1,  0
 2908 33062 5232          JMP SWGOD1      /CLEAR ALL THE CONCERNED WORDS BEFORE LEAVING
 2909             
 2910                     IFNZRO SWPRER-2 <GLITCH; *.-1>

      /TSS/8 CONFIGURATION FOR UWM                                       Page 72


 2911       0032  SWERER= C0002   /SWPRER
 2912                     IFNZRO SWPWER-3 <GLITCH; *.-1>

      /TSS/8 CONFIGURATION FOR UWM                                       Page 73


 2913             /SAVE JOB REGISTER
 2914             /THIS ROUTINE IS USED TO SAVE THE LEVEL 2 REGISTERS
 2915             /IN THE JOB DATA AREA.  AFTER SAVING THIS
 2916             /INFORMATION, JOB IS SET TO 0 TO INDICATE
 2917             /THAT NULJOB IS RUNNING
 2918             /CALL   SAVJOB
 2919             /       RETURN
 2920             /
 2921             /THE SAVE AREA FOR A JOB NOW LOOKS LIKE THIS:
 2922             /
 2923             /JOBREG
 2924             /       .................................................
 2925             / +0    :                       PC                      :
 2926             /       :................................................
 2927             / +1    :                       AC                      :
 2928             /       :...............................................:
 2929             / +2    : M : L : G :   IOT COPY #  :<------ SC ------->:
 2930             /       :...:...:...:...:...:...:...:...:...:...:...:...:
 2931             /
 2932             /WHERE: M = 1 (4000 BIT) IF EAE IS IN MODE 'B'
 2933             /       L = 1 (2000 BIT) IF LINK IS SET
 2934             /       G = 1 (1000 BIT) IF 'GT' FLAG IS SET
 2935             
 2936             PTTIM0,
 2937 33063 0000  SAVJO0, 0
 2938 33064 1160          TAD JOB
 2939 33065 7450          SNA             /IS NULJOB RUNNING ALREADY?
 2940 33066 5342          JMP SAVJO1      /YES - NOTHING TO SAVE
 2941 33067 0144          AND C0600
 2942 33070 7640          SZA CLA         /IS A PHANTOM RUNNING?
 2943 33071 5312          JMP SAVJO3      /YES
 2944             
 2945                     IFZERO MQREG-1 <
 2946 33072 4477          GETJTW          /GET THE MQ-REGISTER POINTER
 2947 33073 0014           JOBEAE
 2948 33074 7701          CLA MQA         /GET THE CONTENTS OF THE MQ
 2949 33075 6211          DATFLD
 2950 33076 3405          DCA I JOBSWA    / & SAVE IT
 2951                     >
 2952 33077 6201          CDF
 2953                     IFZERO EAE-20 <
 2954                             IFZERO CPU-2 <
 2955                     SKB             /SKIP IF MODE 'B' SET (ALSO CLOBBERS AC & MQ)
 2956                     SKP CLA         /MODE 'B' NOT SET
 2957                     CLA CLL CML RAR /INDICATE MODE 'B' BY 4000
 2958                     SGT             /'GT' FLAG SET?
 2959                     SKP             /NO
 2960                     TAD C1000       /YES - SET THE BIT
 2961                             >
 2962                     SCA             /NOW GET THE SEQUENCE COUNT
 2963                     TAD L2SVLK      / ADD IN THE LINK (2000 BIT)
 2964                     DCA L2SVLK      / & SAVE ALL THE BITS
 2965                     >
 2966 33100 1161          TAD CJOBDA
 2967 33101 4574          GETJTA          /GET THE SAVE-AREA ADDRESS
 2968 33102 0011           JOBREG
 2969 33103 3310          DCA PTTIM1

      /TSS/8 CONFIGURATION FOR UWM                                       Page 74


 2970 33104 4567          BLT             /NOW SAVE THE REGISTERS
 2971 33105 6201           CDF
 2972 33106 0104           L2SV0  / (LEVEL 2 SAVE)
 2973 33107 6211           DATFLD
 2974 33110 0000  PTTIM1,  0      / (JOB STATUS BLOCK SAVE)
 2975 33111 7775           -3     /3 WORDS - PC, AC, & LINK
 2976 33112 1160  SAVJO3, TAD JOB
 2977 33113 0036          AND C0037
 2978 33114 7650          SNA CLA         /DO WE HAVE A JOB NUMBER?
 2979 33115 5337          JMP SAVJO2      /NOT YET
 2980 33116 4477          GETJTW          /YES - GET POINTER TO LOW-ORDER CPU TIME
 2981 33117 0016           JOBRTM
 2982 33120 7200          CLA
 2983 33121 1345          TAD QUATIM      /UPDATE HIS RUN TIME
 2984 33122 1043          TAD JOBTIM      /-# TICKS HE DIDN'T USE
 2985 33123 7450          SNA             /IF YOU WANT TO CHARGE HIM SOMETHING, CHANGE
 2986 33124 7000          NOP             / THIS TO 'IAC', YOU'LL CHARGE HIM 1 TICK FOR EACH FRACTION
 2987 33125 7100          CLL
 2988 33126 6211          DATFLD
 2989 33127 1405          TAD I JOBSWA    /ACCUMULATE INTO RUNTIME
 2990 33130 3405          DCA I JOBSWA    /SAVE THE NEW CUMULATIVE TIME
 2991 33131 7420          SNL             /OVERFLOW INTO HIGH ORDER?
 2992 33132 5336          JMP .+4         /NO
 2993 33133 2005          ISZ JOBSWA      /YES - GET TO THE HIGH-ORDER TIME
 2994 33134 2405          ISZ I JOBSWA    / AND BUMP IT ONE UNIT
 2995 33135 7000          NOP
 2996 33136 4744          JMS I SAVJO4    /SET THE BIT IF IT WAS COMPUTE-BOUND
 2997 33137 3160  SAVJO2, DCA JOB         /SIMULATE NULJOB
 2998 33140 6211          DATFLD
 2999 33141 3561          DCA I CJOBDA    /CLEAR POINTER TO CURRENT JOB DATA AREA
 3000 33142 6201  SAVJO1, CDF
 3001 33143 5663          JMP I SAVJO0    /AND EXIT.
 3002             
 3003 33144 3641  SAVJO4, COMBND
 3004 33145 0002  QUATIM, -QUANT

      /TSS/8 CONFIGURATION FOR UWM                                       Page 75


 3005             /ROUTINE TO SET DEVICE TIMER IN SCHED
 3006             /CALLING SEQUENCE
 3007             /TAD ADDRESS OF PARAMETER LIST
 3008             /JMS PTTIM
 3009             /PARAMETER CONTAINS
 3010             /       ADDRESS IN SCHED TO STICK ISZ
 3011             /       ISZ INSTUCTION
 3012             /       ADDRESS OF INITIAL COUNT FOR DEVICE-COUNTER IS AT THIS ADD+1
 3013             
 3014             
 3015 33146 0000  PTTIM,  0
 3016 33147 3310          DCA PTTIM1      /STORE THE ADDRESS OF THE PARAMETER
 3017 33150 1710          TAD I PTTIM1    /ADDRESS OF ISZ
 3018 33151 2310          ISZ PTTIM1
 3019 33152 3263          DCA PTTIM0
 3020 33153 1710          TAD I PTTIM1    /ISZ INSTRUCTION
 3021 33154 3663          DCA I PTTIM0
 3022 33155 2310          ISZ PTTIM1
 3023 33156 1710          TAD I PTTIM1    /ADDRESS OF THE INITIAL COUNT
 3024 33157 3263          DCA PTTIM0
 3025 33160 1663          TAD I PTTIM0    /#OF TICKS
 3026 33161 2263          ISZ PTTIM0      /ADDRESS+1 IN SCHED
 3027 33162 3663          DCA I PTTIM0
 3028 33163 5746          JMP I PTTIM     /RETURN
 3029             
 3030                     IFZERO D680-2 <
 3031             KECHO,  ISZ I KECHOF    /ECHO SERVICE ALREADY SCHEDULED?
 3032                     DISMIS          /YES
 3033                     TAD .+2         /NO - SCHEDULE IT NOW
 3034                     DISMIS
 3035                     ECHO
 3036             KECHOF, ECHOFL
 3037                     >

      /TSS/8 CONFIGURATION FOR UWM                                       Page 76


 3038                     PAGE
 3039             
 3040             /COMBINED RESIDENT IOTS
 3041             
 3042 33200 0040  UUOTBL, 40      /TELEPRINTER
 3043 33201 0030          30      /KEYBOARD
 3044 33202 0010          10      /READER
 3045 33203 0020          20      /PUNCH
 3046 33204 0660          660     /PRINTER
 3047                             IFZERO CDR-1 <
 3048                     630     /CARD READER
 3049                     670     /CARD READER
 3050                             >
 3051 33205 0000          0
 3052             
 3053             /UNCOMBINED RESIDENT IOTS
 3054             
 3055 33206 6006          6006    /SGT - SKIP IF 'GT' FLAG IS SET
 3056 33207 6603          6603    /RFILE
 3057 33210 6605          6605    /WFILE
 3058 33211 6200          6200    /CKS - CHECK STATUS
 3059 33212 6405          6405    /CLS - CLEAR STATUS
 3060             
 3061 33213 6400          6400    /KSB - SET KEYBOARD BREAK
 3062 33214 6401          6401    /SBC - SET BUFFER CONTROL FLAGS
 3063 33215 6402          6402    /DUP - DUPLEX TELETYPE CONSOLE
 3064 33216 6403          6403    /UND - UNDUPLEX TTY
 3065 33217 6406          6406    /SEGS - RETURN # FREE DISC SEGMENTS
 3066             
 3067 33220 6411          6411    /URT - USER RUN TIME
 3068 33221 6412          6412    /TOD - TIME OF DAY
 3069 33222 6413          6413    /RCR - RETURN CLOCK RATE
 3070 33223 6414          6414    /DATE
 3071 33224 6415          6415    /SYN - QUANTUM SYNCHRONIZATION
 3072 33225 6416          6416    /STM - SET TIMER
 3073 33226 6417          6417    /SRA - SET RESTART ADDRESS
 3074             
 3075 33227 6420          6420    /TSS - SKIP ON TS8
 3076 33230 6421          6421    /USE - USER
 3077 33231 6422          6422    /CON - USER CONSOL
 3078 33232 6423          6423    /PEEK - LOOK IN MONITOR CORE
 3079             
 3080 33233 6430          6430    /SSW - SET SWITCH REGISTER
 3081 33234 6431          6431    /SEA - SET ERROR ADDRESS
 3082             
 3083 33235 6614          6614    /SIZE
 3084 33236 6617          6617    /ACT - ACCOUNT NUMBER
 3085             
 3086                             IFZERO TC01-1 <
 3087 33237 6764          6764    /DTXA - LOAD STATUS REGISTER A
 3088 33240 6771          6771    /DTSF - SKIP ON DT FLAGS
 3089 33241 6772          6772    /DTRB - READ STATUS REGISTER B
 3090 33242 6773          6773    /DTSF DTRB - MICROCODED
 3091                             >
 3092 33243 0000          0
 3093             
 3094             /NON-RESIDENT IOTS

      /TSS/8 CONFIGURATION FOR UWM                                       Page 77


 3095             
 3096             
 3097 33244 6440          6440    /ASD - ASSIGN DEVICE
 3098 33245 6442          6442    /REL - RELEASE
 3099             
 3100 33246 6602          6602    /CLOS - CLOSE FILE
 3101 33247 6600          6600    /REN - RENAME FILE
 3102 33250 6604          6604    /PROT - PROTECT FILE
 3103 33251 6607          6607    /CPASS - CHANGE USER'S PASSWORD
 3104 33252 6610          6610    /CRF - CREATE FILE
 3105 33253 6611          6611    /EXT - EXTEND FILE
 3106 33254 6612          6612    /RED - REDUCE FILE
 3107 33255 6615          6615    /LOGOUT
 3108 33256 6620          6620    /BCLR - CLEAR MFD BILLING FIELDS
 3109 33257 0000          0
 3110             
 3111             /LONG NON-RESIDENT IOTS
 3112             
 3113 33260 6601          6601    /OPEN - OPEN FILE
 3114 33261 6606          6606    /XOPEN - OPEN WITH EXCLUSIVE USE
 3115 33262 6613          6613    /FINF
 3116 33263 0000          0
 3117             
 3118             
 3119             /COMBINED RESIDENT IOT DISPATCH
 3120             
 3121 33264 2001  UUODTB, UTEL    /TELEPRINTER
 3122 33265 5002          UKEY    /KEYBOARD
 3123 33266 1000          UPTR    /READER
 3124 33267 7375          UPTP    /PUNCH
 3125 33270 7375          UPTP    /LPT SERVICE SAME AS PTP
 3126                             IFZERO CDR-1 <
 3127                     UCDR    /CARD READER
 3128                     UCDR1   /CARD READER
 3129                             >
 3130 33271 0000          0
 3131             
 3132             /UNCOMBINED RESIDENT IOT DISPATCH
 3133             
 3134 33272 3500          USGT
 3135 33273 4400          UFILE
 3136 33274 4400          UFILE
 3137 33275 5334          UCKS
 3138 33276 2313          UCLS
 3139 33277 1720          UKSB
 3140 33300 4135          USBC
 3141 33301 7035          UDUP
 3142 33302 7036          UUND
 3143 33303 5331          USEGS
 3144 33304 5275          UURT
 3145 33305 5315          UTOD
 3146 33306 2773          URCR
 3147 33307 2775          UDATE
 3148 33310 5175          USYN
 3149 33311 1440          USTM
 3150 33312 1544          USRA
 3151 33313 3505          UTSS

      /TSS/8 CONFIGURATION FOR UWM                                       Page 78


 3152 33314 7370          UUSE
 3153 33315 5575          UCON
 3154 33316 6752          UPEEK
 3155 33317 1543          USSW
 3156 33320 1535          USEA
 3157 33321 7372          USIZE
 3158 33322 2762          UACT
 3159                             IFZERO TC01-1 <
 3160 33323 1372          UDTXA0
 3161 33324 0324          UUOEX2
 3162 33325 1271          UDTRB
 3163 33326 1267          UDTRBS  
 3164                             >
 3165 33327 0000          0
 3166             
 3167             /-# ARGUMENTS FOR NON-RESIDENT IOTS
 3168             
 3169 33330 0000          0       /ASD
 3170 33331 0000          0       /REL
 3171 33332 0000          0       /CLOS
 3172 33333 7772          -6      /REN
 3173 33334 0000          0       /PROT
 3174 33335 7772          -6      /CPASS
 3175 33336 7774          -4      /CRF
 3176 33337 7774          -4      /EXT
 3177 33340 7774          -4      /RED
 3178 33341 0000          0       /LOGOUT
 3179 33342 0000          0       /BCLR
 3180 33343 0000          0
 3181 33344 7772  UFILWC, -6      /OPEN
 3182 33345 7772          -6      /XOPEN
 3183 33346 7776          -2      /FINF
 3184 33347 0000          0

      /TSS/8 CONFIGURATION FOR UWM                                       Page 79


 3185             /RETURN CONTENT OF STATUS WORD IN AC
 3186             /CALL   TAD POINTER TO JOB STATUS ADDRESS
 3187             /       GETJTI
 3188             /        RELATIVE ADDR OF WORD
 3189             /       RETURN (ADDRESS OF WORD IN JOBSWA)
 3190             
 3191 33350 0000  GETJI0, 0
 3192 33351 6201          CDF
 3193 33352 3005          DCA JOBSWA      /SAVE POINTER TO JOB STATUS
 3194 33353 1750          TAD I GETJI0    /GET POSITION IN LIST
 3195 33354 3357          DCA .+3         /SAVE IT
 3196 33355 1005          TAD JOBSWA      /NOW GET ADDRESS OF THIS ENTRY
 3197 33356 4574          GETJTA
 3198 33357 0000           0
 3199 33360 3005          DCA JOBSWA      /SAVE IT
 3200 33361 6211          DATFLD
 3201 33362 1405          TAD I JOBSWA    /GET CONTENTS OF THAT ADDRESS
 3202 33363 6201          CDF
 3203 33364 2350          ISZ GETJI0      /INDEX RETURN
 3204 33365 5750          JMP I GETJI0

      /TSS/8 CONFIGURATION FOR UWM                                       Page 80


 3205                     PAGE
 3206             /TSS/8 CRASH-RECOVERY BOOTSTRAP
 3207             /WE JUST LOAD 'INIT' AND START IT.
 3208             /
 3209             /IN THE (VERY RARE) EVENT THE SYSTEM SHOULD CRASH OR (MORE LIKELY)
 3210             /A POWER OR HARDWARE FAILURE OCCURS, THIS ROUTINE MAY BE STARTED
 3211             /AT LOCATION 4200 IN FIELD 0.
 3212 33400 3202  RELOAD, DCA RBOOT       /SAVE THE CRASH-ADDRESS
 3213 33401 7410          SKP
 3214 33402 0000  RBOOT,  0               /ENTRY FOR AUTOMATIC RESTART
 3215 33403 7000          NOP             / (ROOM FOR POSSIBLE HLT)
 3216 33404 6201  BOOT,   CDF
 3217                     IFNZRO CPU-2    <IOF>
 3218 33405 6007          IFZERO CPU-2    <CAF>
 3219 33406 7340          CLA CLL CMA
 3220 33407 3624          DCA I B7751     /SET THE CORE ADDRESS -1
 3221 33410 3625          DCA I B7750     / & THE WORD-COUNT
 3222 33411 1226          TAD BTFLD       /GET THE 'INIT' FIELD
 3223             
 3224                     IFZERO RF08 <
 3225 33412 6615          DIML
 3226 33413 7326          CLA STL RTL
 3227 33414 6643          DXAL            /'INIT' IS ON TRACK 2
 3228                     >
 3229                     IFZERO RF08-40 <
 3230                     DEAL
 3231                     CLA
 3232                     NOP             /FOR SIZE ONLY
 3233                     >
 3234 33415 6603          DMAR            /READ THE TRACK
 3235 33416 6622          DFSC            / & WAIT
 3236 33417 5216          JMP .-1
 3237 33420 1202          TAD RBOOT
 3238 33421 6223          CIF CDF INFLD
 3239 33422 5623          JMP I .+1       /NOW START 'INIT'
 3240 33423 4201          AUTOST
 3241             
 3242 33424 7751  B7751,  7751
 3243 33425 7750  B7750,  7750
 3244                     IFZERO RF08 <
 3245 33426 0020  BTFLD,  INFLD
 3246                     >
 3247                     IFZERO RF08-40 <
 3248             BTFLD,  200+INFLD       /FIELD & TRACK
 3249                     >

      /TSS/8 CONFIGURATION FOR UWM                                       Page 81


 3250             /INCLUSIVE OR
 3251             /CALL   TAD ADDRESS OF WORD TO SET
 3252             /       CDF+(FIELD)     /FIELD WHERE DATA-WORD RESIDES
 3253             /       IOR
 3254             /        BITS TO SET
 3255             /       RETURN
 3256             
 3257 33427 0000  IOR0,   0
 3258 33430 7450          SNA             /IS THIS A RATIONAL ADDRESS?
 3259 33431 4525          REBOOT          /NO - ERROR *****
 3260 33432 3251          DCA IOR1        /SAVE ADDRESS TO SET
 3261 33433 6214          RDF             /FIELD TO SET IT IN
 3262 33434 1236          TAD .+2         /COMPUTE FIELD SELECT - FOR THAT FIELD
 3263 33435 3240          DCA .+3         /SAVE IT
 3264 33436 6201  UDFCDF, CDF
 3265 33437 1627          TAD I IOR0      /GET BITS TO SET
 3266 33440 0000          0               /SET FIELD AGAIN
 3267 33441 3252          DCA IOR2        /SAVE THEM
 3268 33442 1252          TAD IOR2
 3269 33443 7040          CMA
 3270 33444 0651          AND I IOR1      /CLEAR THE BITS IF ALREADY SET
 3271 33445 1252          TAD IOR2        /NOW SET THEM
 3272 33446 3651          DCA I IOR1      /SAVE NEW VALUE
 3273 33447 2227          ISZ IOR0        /SKIP ARGUMENT IN CALL
 3274 33450 5627          JMP I IOR0      /RETURN
 3275             
 3276 33451 0000  IOR1,   0

      /TSS/8 CONFIGURATION FOR UWM                                       Page 82


 3277             /CHECK SIZE OF TTY BUFFER
 3278             /CALLING SEQUENCE:
 3279             /       TAD (ADDRESS OF EMPTY POINTER)
 3280             /       JMS BUFSIZ
 3281             /       -#BLOCKS TO CHECK FOR
 3282             /       RETURN (BUFFER LESS THAN .-1)
 3283             /       RETURN (BUFFER GREATER THAN OR EQUAL TO .-2)
 3284             
 3285             IOR2,
 3286 33452 0000  BUFSIZ, 0
 3287 33453 3227          DCA BUFSI1      /POINTER TO EMPTY COUNTER
 3288 33454 6201          CDF
 3289 33455 1652          TAD I BUFSIZ    /GET COUNT TO CHECK FOR
 3290 33456 3251          DCA BUFSI2      /COUNTER
 3291 33457 2252          ISZ BUFSIZ      /INCREMENT RETURN PAST ARGUMENT
 3292 33460 6211          DATFLD
 3293 33461 1627          TAD I BUFSI1    /GET ADDRESS OF FIRST BUFFER
 3294 33462 7450          SNA
 3295 33463 5652          JMP I BUFSIZ    /CHAIN IS SHORTER THAN COUNT
 3296 33464 3227          DCA BUFSI1      /SAVE NEW PTIZ
 3297 33465 2251          ISZ BUFSI2      /STILL ROOM LEFT
 3298 33466 5261          JMP .-5         /YES, KEEP LOOKING
 3299 33467 2252          ISZ BUFSIZ      /NO, INDEX TO "FULL" RETURN
 3300 33470 5652          JMP I BUFSIZ    /EXIT
 3301             
 3302       3427  BUFSI1= IOR0            /POINTER
 3303       3451  BUFSI2= IOR1            /COUNTER

      /TSS/8 CONFIGURATION FOR UWM                                       Page 83


 3304             /THIS CODE RE-STARTS THE CLOCK & ALLOWS THE CONTINUATION
 3305             /OF A SYSTEM THAT WAS STOPPED IN 'NULJOB'.
 3306             
 3307             DEBUG,
 3308                     IFZERO D680 <
 3309                             IFZERO CPU-1 <
 3310                     CLA CLL CMA
 3311                     CCF CLB         /SET PDP-8 CLOCK COUNT
 3312                             >
 3313                             IFNZRO CPU-3 <
 3314 33471 6131          CECI            /RE-ENABLE THE PDP-8 CLOCK
 3315                             >
 3316                             IFZERO CPU-3 <
 3317                     TAD PT12TM      /GET THE NUMBER OF TICKS PER OVERFLOW
 3318                     CLAB            /SEND TO THE CLOCK CONTROLLER
 3319                     CLA
 3320                     TAD PT12CM      /GET THE MAJOR CLOCK COUNT RATE
 3321                     CLLR            /AND SEND IT TO THE CONTROLLER
 3322                     CLA
 3323                     TAD PT12IN      /SET UP INTERRUPTS AND SO ON.
 3324                     CLEN
 3325                     CLSA            / & START THE CLOCK GOING
 3326                     CLA CMA         /SET TO ENABLE ALL SETS
 3327                     MTON
 3328                     CLA IAC         / AND ALSO THE INTERRUPTS
 3329                     MINT            / FOR THE FANTASTIC DC02
 3330                     CLA
 3331                             >
 3332                     >
 3333                     IFZERO D680-2 <
 3334                     TT8ON           /TURN ON THE DC08 CLOCK
 3335                     >
 3336                     IFZERO D689-4 <
 3337                     EDF             /RE-ENABLE THE DATA PHONES
 3338                     >
 3339             
 3340 33472 1037  SCHNUL, TAD C0100       /RUN NULL JOB IN USER MODE.
 3341 33473 3103          DCA L2SF        /FIELD 0; USER MODE
 3342 33474 1277          TAD SCHNJA
 3343 33475 3104          DCA L2SV0
 3344 33476 5467          EXIT            /OFF TO NULL JOB
 3345             
 3346 33477 2574  SCHNJA, NULJOB
 3347             
 3348                     IFZERO CPU-3 <
 3349                     DECIMAL
 3350             PT12TM, -50             /50 MILLISECONDS PER INTERUPT
 3351                     OCTAL
 3352             PT12CM, 4100            /1 M.S. PER CLOCK TIC.
 3353             PT12IN, 300
 3354                     >

      /TSS/8 CONFIGURATION FOR UWM                                       Page 84


 3355                     IFZERO D680-2 <
 3356             /PSEUDO OPERATIONS
 3357             /SKIP IF OUTPUT IS FREE AND TRANSMIT CHARACTER AT TTCHAR, OTHERWISE DONT SKIP
 3358             /LINE NUMBER MUST BE IN AC.  24US MIN. 42US MAX.
 3359             T8OUTS, 0
 3360                     AND T8K10             /177
 3361                     TAD T8SL                /-STARTING LINE #
 3362                     TAD T8K36               /OUTPUT BUFFER ADDR
 3363                     DCA T8WA                /WORK AREA
 3364                     TAD I T8WA              /OUTPUT CHARACTER
 3365                     SZA CLA                 /SKIP IF FREE
 3366                     JMP I T8OUTS            /EXIT
 3367                     TAD TTCHAR              /PICK UP CHARACTER
 3368                     AND T8K11               /8 BITS ONLY
 3369                     TAD T8K12               /1400 FOR STOP CODE
 3370                     CLL RAL                 /CREATE START CODE
 3371                     DCA I T8WA              /STORE CHARACTER IN TABLE
 3372                     ISZ T8OUTS              /INDEX EXIT
 3373                     JMP I T8OUTS            /EXIT
 3374             T8K10,  177                     /FOR LINE NUMBER
 3375             T8WA,   0                       /WORK AREA
 3376             T8K11=  C0377   /FOR EIGHT BIT CODE
 3377             T8K12,  1400                    /FOR STOP CODE
 3378             /SKIP IF CHARACTER AVAILABLE AND RETURN WITH LINE NO. IN AC, CHAR AT TTCHAR
 3379             /OTHERWISE DO NOT SKIP. 15 US MIN, 48 US MAX, 37.5US NORMAL IF READY
 3380             T8INS,  0
 3381                     IOF
 3382                     CLA CMA         /SET AC TO -1 FOR TAD
 3383                     TAD T8INFL      /INPUT FLAG COUNTER
 3384                     SPA             /SOMETHING AVAILABLE
 3385                     JMP T8INON              /EXIT
 3386                     DCA T8INFL      /RESTORE FLAG COUNTER
 3387                     ISZ T8CNT3      /END OF BUFFER? STARTS AT -N-1
 3388                     JMP .+5         /GET CHARACTER
 3389                     TAD T8NL        /-NUMBER OF LINES
 3390                     DCA T8CNT3      /RESET COUNTER
 3391                     TAD T8BFK       /BUFFER ADDRESS-1
 3392                     DCA T8AX1       /RESET ADDRESS
 3393                     TAD I T8AX1     /PICK UP CHARATER
 3394             
 3395                     IFZERO TTYEVEN-1 <
 3396                     AND T8K10
 3397                     TAD C0200       /FORCE BIT 8 TO BE A 1
 3398                     >
 3399                     IFZERO TTYEVEN <
 3400                     AND C0377       /ONLY CONSIDER LOW ORDER 8 BITS
 3401                     >
 3402                     DCA TTCHAR      /STORE CHARACTER
 3403                     TAD I T8AX1     /PICK UP LINE NUMBER
 3404                     ISZ T8INS               /INDEX EXIT
 3405                     SKP
 3406             T8INON, CLA
 3407                     ION
 3408                     JMP I T8INS     /EXIT
 3409                     >

      /TSS/8 CONFIGURATION FOR UWM                                       Page 85


 3410             /ROUTINE TO HANDLE THE 'SGT' IOT - PRETTY SIMPLE.
 3411 33500 6006  USGT,   SGT             /SKIP IF 'GT' IS SET
 3412 33501 5461          UUOEXT          /NO - JUST EXIT
 3413 33502 5703          JMP I .+1       /YES - INCRE. USER'S PC
 3414 33503 0324  UUOSKP, UUOEX2
 3415             
 3416             /CODE TO HANDLE THE 'TSS' IOT.
 3417 33504 0027          VERNUM
 3418 33505 1304  UTSS,   TAD .-1
 3419 33506 3106          DCA L2SA        /RETURN THE MONITOR VERSION #
 3420 33507 5703          JMP I UUOSKP    / AND SIMULATE SKIP
 3421             
 3422             /ROUTINE TO SET UP SUBROUTINE 'UDF'.
 3423 33510 0000  UDFSET, 0
 3424 33511 1103          TAD L2SF        /GET THE USER'S FIELD
 3425 33512 0140          AND C0070
 3426 33513 1236          TAD UDFCDF      / & FORM A CDF INSTR.
 3427 33514 3151          DCA UUDF
 3428 33515 5710          JMP I UDFSET

      /TSS/8 CONFIGURATION FOR UWM                                       Page 86


 3429             /ROUTINE TO SAVE MACHINE STATUS WHEN USER EXECUTES IOT
 3430             /WE MUST CHECK USER IOT FLAG BEFORE ANYTHING ELSE, EVEN CLOCK FLAG
 3431             /IF WE DON'T, AND CLOCK INTERRRUPTS WITHIN 8 MICROSECONDS AFTER USER
 3432             /EXECUTES IOT, THEN WE WOULD TRIP ON CLOCK FLAG, AND NOT BE ABLE TO
 3433             /FIGURE OUT WHAT IOT THE USER EXECUTED.  WHAT'S MORE, WE WOULD PROBABLY
 3434             /DISMIS BACK TO THE USER PROGRAM IN EXEC MODE.  
 3435             
 3436 33516 3106  UUO0,   DCA L2SA        /WE MUST'VE BEEN IN USER MODE WHEN INTERRUPTED
 3437 33517 7012          RTR             /SAVE LINK
 3438 33520 3105          DCA L2SVLK
 3439 33521 1000          TAD 0
 3440 33522 3104          DCA L2SV0       /SAVE PC
 3441 33523 6234          RIB
 3442 33524 3103          DCA L2SF        /SAVE FIELDS AND MODE
 3443 33525 6204          CIOT            /CLEAR FLAG
 3444             
 3445                     IFZERO CPU-3 <
 3446                     TAD L2SF        /REGET THE FIELD BITS.
 3447                     AND C0037       /CHOP OFF THE USER BIT.
 3448                     SNA CLA         /WAS IT FROM NULL JOB?
 3449                     JMP NULUUO      /YES - FUDGE IT
 3450                     >
 3451 33526 6001          ION
 3452 33527 5730          JMP I .+1       /NOW GO RUN UUO SERVICE
 3453 33530 2206          UUO
 3454             
 3455                     IFZERO CPU-3 <
 3456             NULUUO, CLA CMA         /UUO IS FROM NULJOB. BACK UP PC.
 3457                     TAD 0
 3458                     DCA 0           /PLACE IT AWAY.
 3459                     JMP I 0         /AND GO TO IT. NUL JOB MUST TURN THEM BACK ON.
 3460             
 3461             DISIDL, CLA             /CLEAR THE AC TO INDICATE FIRST TIME THROUGH
 3462             DISTOR, DCA DISIDG      /SAVE AC FOR A SECOND
 3463                     IOF             /TURN OFF INTERUPTS
 3464                     CDF CIF 10      /SET TO FIELD 1
 3465                     TAD DISIDG      /GET THE INDICATORS IN THE AC.
 3466                     JMS I DISIDM    /GO THERE NOW
 3467                     UFN             /SET THE USER FLOP
 3468                     ION             /TURN THEM BACK ON
 3469                     JMP DISTOR      /GO AND LOOP AGAIN
 3470             
 3471             DISIDG, 0
 3472             DISIDM, PDPIDE
 3473                     >

      /TSS/8 CONFIGURATION FOR UWM                                       Page 87


 3474                     IFNZRO READFI-4-.&4000  <GLITCH; *.-1>
 3475       3600          *READFI-4
 3476 33600 0354          L2EXIT
 3477 33601 1200  DSUEXT, TAD .-1
 3478 33602 3067          DCA EXITA       /RESTORE THE LEVEL-2 EXIT
 3479 33603 5206          JMP .+3         /JOB # ALREADY IN 'RDFJOB'
 3480 33604 1026  READFI, TAD SIREG
 3481 33605 3223          DCA RDFJOB
 3482 33606 4473          SAVJOB
 3483 33607 1223          TAD RDFJOB      /FIND RESIDENT FIELD FOR THIS JOB
 3484 33610 4570          CORE
 3485 33611 0637           FIP+SI+37      /ANY FIELD WITH THIS JOB IN IT IS OK
 3486 33612 4525          REBOOT          /IF IT'S NOT THERE WE'RE SCREWED
 3487 33613 3103          DCA L2SF        /RESTORE FOR THIS JOB
 3488 33614 1223          TAD RDFJOB
 3489 33615 4474          RESJOB          /RESTORE LEVEL TWO FOR THIS JOB
 3490 33616 4477          GETJTW          /GET ADDRESS OF FILE PARAMETER BLOCK
 3491 33617 0007           JOBLNK
 3492 33620 6211          DATFLD
 3493 33621 5622          JMP I .+1       / AND OFF TO FILE HANDLER
 3494 33622 4526          SIFILE

      /TSS/8 CONFIGURATION FOR UWM                                       Page 88


 3495             /QUEUE DISC REQUEST
 3496             /CALL   TAD ADDRESS OF TRANSFER BLOCK
 3497             /       JMS DSQUE
 3498             /       RETURN
 3499             
 3500                     IFNZRO FILPIF-2 <GLITCH; *.-1>
 3501       0032  DSQFLD= C0002   /FILPIF
 3502             
 3503             RDFJOB,
 3504 33623 0000  DSQUE,  0
 3505 33624 3241          DCA DSQUE1      /SAVE ADDRESS OF PARAMETER BLOCK
 3506 33625 1241          TAD DSQUE1      /NOW GET POINTER TO WORD WITH FIELD & FILE DATA
 3507 33626 1032          TAD DSQFLD
 3508 33627 3253          DCA DSQUE2      /SAVE POINTER
 3509 33630 6211          DATFLD
 3510 33631 1653          TAD I DSQUE2    /GET FIELD # (BITS 7-9) AND FILE # (BITS 10-11)
 3511 33632 0036          AND C0037       /USE THIS VALUE AS DSUTBL INDEX
 3512 33633 1164          TAD DSUTBA
 3513 33634 3253          DCA DSQUE2      /SAVE POINTER TO DSUTBL
 3514 33635 1241          TAD DSQUE1      /GET PARAMETER ADDRESS
 3515 33636 3653          DCA I DSQUE2    /SAVE IN DSUTBL
 3516 33637 6201          CDF             /AND EXIT
 3517 33640 5623          JMP I DSQUE
 3518             
 3519                     IFNZRO JCOMBD-1000      <GLITCH; *.-1>
 3520             DSQUE1,
 3521 33641 0000  COMBND, 0
 3522 33642 1043          TAD JOBTIM
 3523 33643 7640          SZA CLA         /ANY PART OF HIS TIME-SLICE LEFT?
 3524 33644 5641          JMP I COMBND    /YES - SO HE'S NOT COMPUTE-BOUND NOW
 3525 33645 4477          GETJTW          /NO - GET HIS JOB STATUS-WORD
 3526 33646 0000           JOBSTS
 3527 33647 1040          TAD C1000       / AND SET THE 'JCOMBD' BIT
 3528 33650 6211          DATFLD
 3529 33651 3405          DCA I JOBSWA
 3530 33652 5641          JMP I COMBND    /THEN RETURN

      /TSS/8 CONFIGURATION FOR UWM                                       Page 89


 3531             /RETURN CONTENT OF JOB STATUS FOR CURRENT JOB
 3532             /CALL:  GETJTW
 3533             /        RELATIVE ADDRESS OF WORD
 3534             /       RETURN (VALUE IN AC, ADDRESS IN 'JOBSWA')
 3535             
 3536             DSQUE2,
 3537 33653 0000  GETJW0, 0
 3538 33654 6201          CDF
 3539 33655 1653          TAD I GETJW0    /GET THE RELATIVE ADDRESS
 3540 33656 3261          DCA .+3         / AND SAVE IT
 3541 33657 1161          TAD CJOBDA
 3542 33660 4500          GETJTI          /NOW PICK UP THE WORD
 3543 33661 0000           0
 3544 33662 2253          ISZ GETJW0      /SKIP PAST THE PARAMETER
 3545 33663 5653          JMP I GETJW0    / AND RETURN
 3546             
 3547             /LEVEL-2 TERMINATION CODE FOR THE HIGH-SPEED PUNCH.
 3548             /ENTERED AT PTPL2 IF BUFFER IS TO BE RE-INITIALIZED
 3549             /OR PTPL2+1 IF NOT.
 3550 33664 4671  PTPL2,  JMS I PTP2IN    /RE-INITIALIZE THE BUFFER POINTERS
 3551 33665 1270          TAD PTPFL2      / (LINK=0 TO RETURN THOUGH 'EXIT')
 3552 33666 4672          JMS I PT2STR    /TURN ON PUNCH FLAG & EXIT
 3553 33667 3241           DEVTBE+1
 3554             
 3555 33670 0004  PTPFL2, JSPTP
 3556 33671 7506  PTP2IN, PTPINI
 3557 33672 7547  PT2STR, PTSTAR

      /TSS/8 CONFIGURATION FOR UWM                                       Page 90


 3558             /RESTORE INTERRUPTED STATE
 3559             /WE GET HERE WHEN ALL THE ACTIVITY IN THE LEVEL-2 QUEUE
 3560             /HAS BEEN COMPLETED. WE RESET THE QUEUE POINTERS & RESTART.
 3561             
 3562 33673 7106  L2QTA,  L2QTB-1
 3563 33674 0103  L2SFA,  L2SF
 3564                     IFNZRO DSI-1000 <GLITCH; *.-1>
 3565       0040  L2XCT1= C1000   /DSI
 3566 33675 0040  L2XCT2, CTRLC
 3567 33676 7000  L2XNOP, NOP     /EXIT IN EXEC MODE
 3568 33677 6274  L2XUFN, UFN     /USER MODE
 3569             
 3570 33700 1273  L2EX1,  TAD L2QTA       /RESET EMPTY POINTER TO L2QUE
 3571 33701 3014          DCA L2QE
 3572 33702 1273          TAD L2QTA       /RESET FILL POINTER TO L2QUE
 3573 33703 3013          DCA L2Q
 3574 33704 1274          TAD L2SFA
 3575 33705 3003  RESTOR, DCA WS0         /POINTER TO SAVED INFO
 3576 33706 1403          TAD I WS0       /SAVED FIELDS AND STATE
 3577 33707 3000          DCA 0           /RESTORE FIELDS AND MODE
 3578 33710 1000          TAD 0
 3579 33711 0140          AND C0070       /GET INSTRUCTION FIELD
 3580 33712 1145          TAD C6203
 3581 33713 3373          DCA RCIF        /CIF FOR PROPER FIELD
 3582 33714 1000          TAD 0
 3583 33715 7106          CLL RTL
 3584 33716 7004          RAL
 3585 33717 0140          AND C0070       /CDF FOR RETURN
 3586 33720 1361          TAD C6201       /NOT NECESSARY EQUAL TO INSTRUCTION FIELD
 3587 33721 3374          DCA RCDF
 3588 33722 1000          TAD 0
 3589 33723 0037          AND C0100       /USER PROGRAM, FIP OR SI?
 3590 33724 7650          SNA CLA         /USER MODE OR EXEC MODE?
 3591 33725 5357          JMP L2EX2       /EXEC MODE
 3592 33726 1277          TAD L2XUFN
 3593 33727 3375          DCA RUFF        /SET USER-MODE FLAG UPON EXIT
 3594 33730 1160          TAD JOB
 3595 33731 7450          SNA             /IS THIS A REAL JOB?
 3596 33732 5361          JMP L2EX3       /NO - MUST BE NULJOB
 3597 33733 4464          TTYUSE          /YES - GET HIS INPUT DDB
 3598 33734 0000           0
 3599 33735 3004          DCA WS1
 3600 33736 6211          DATFLD
 3601 33737 1404          TAD I WS1       /PICK UP HIS DDB STATUS-BITS
 3602 33740 0040          AND L2XCT1
 3603 33741 7640          SZA CLA         /IS HE IN 'SI' MODE?
 3604 33742 5361          JMP L2EX3       /YES - THEN ANY CTRL/C WOULD BE 'SI'S
 3605 33743 1404          TAD I WS1
 3606 33744 0275          AND L2XCT2
 3607 33745 7450          SNA             /NO - WAS CTRL/C TYPED?
 3608 33746 5361          JMP L2EX3       /NO
 3609 33747 7040          CMA
 3610 33750 0404          AND I WS1       /YES - CLEAR THE FLAG
 3611 33751 3404          DCA I WS1
 3612 33752 4477          GETJTW          /GET HIS PROGRAM-RESTART ADDRESS
 3613 33753 0005           JOBSRA
 3614 33754 3000          DCA 0

      /TSS/8 CONFIGURATION FOR UWM                                       Page 91


 3615 33755 7300          CLA CLL         /HIS AC & LINK GET CLEARED
 3616 33756 5373          JMP RCIF        / & HE'S RESTARTED
 3617 33757 1276  L2EX2,  TAD L2XNOP
 3618 33760 3375          DCA RUFF        /LEAVE USER-MODE FLAG CLEARED FOR EXEC STUFF
 3619             L2EX3,
 3620 33761 6201  C6201,  CDF
 3621 33762 2003          ISZ WS0
 3622 33763 1403          TAD I WS0       /PC
 3623 33764 3000          DCA 0
 3624 33765 2003          ISZ WS0
 3625 33766 1403          TAD I WS0       /LINK
 3626 33767 7106          CLL RTL
 3627 33770 2003          ISZ WS0
 3628 33771 7200          CLA
 3629 33772 1403          TAD I WS0       /AC
 3630 33773 0000  RCIF,   0
 3631 33774 0000  RCDF,   0
 3632 33775 0000  RUFF,   0               /'UFN' IF USER MODE, 'NOP' IF EXEC MODE
 3633 33776 6001          ION
 3634 33777 5400          JMP I 0         /BACK TO INTERRUPTED PROGRAM

      /TSS/8 CONFIGURATION FOR UWM                                       Page 92


 3635                     PAGE
 3636             /RETURN NUMBER OF NEXT RESIDENT RUNNABLE JOB IN AC
 3637             /CALL   JMS NXTCOR
 3638             /       RETURN WITH JOB # IN AC
 3639             /
 3640             /       THIS WILL RUN A "ROUND ROBIN" OF CORE RESIDENT JOBS
 3641             
 3642                     IFNZRO FIX-100  <GLITCH; *.-1>
 3643 34000 0000  NXTCOR, 0
 3644 34001 1657          TAD I NXTLIM    /GET (-) THE NUMBER OF USER FIELDS
 3645 34002 3275          DCA NXTCNT
 3646 34003 1042          TAD FANCOR
 3647 34004 3260          DCA NXTST       /SET THE 'CORTBL' POINTER
 3648 34005 1660  NXTCO3, TAD I NXTST     / AND PICK UP THE CONTENT OF THIS FIELD
 3649 34006 0037          AND C0100       /HAS IT JUST FINISHED A DISC I/O?
 3650 34007 7450          SNA 
 3651 34010 5222          JMP NXTCO4      /NO TEST THE NEXT FIELD
 3652 34011 7040          CMA
 3653 34012 0660          AND I NXTST     /REMOVE THE FLAG
 3654 34013 3660          DCA I NXTST
 3655 34014 1660          TAD I NXTST     /YES, FIND THE JOB#
 3656 34015 0036          AND C0037       /JUST JOB #
 3657 34016 4502          RUNABL          /IS IT RUNNABLE?
 3658 34017 5222          JMP NXTCO4      /NO, TRY NEXT FIELD
 3659 34020 1660          TAD I NXTST     /YES - RETURN WITH 'CORTBL' ENTRY
 3660 34021 5661          JMP I NXTCO5
 3661 34022 2260  NXTCO4, ISZ NXTST       /INCREMENT THE FIELD POINTER
 3662 34023 2275          ISZ NXTCNT      /ANY MORE FIELDS LEFT?
 3663 34024 5205          JMP NXTCO3      /YES - TRY THEM
 3664 34025 1657          TAD I NXTLIM    /GET THE NUMBER OF FIELDS AGAIN
 3665 34026 3275          DCA NXTCNT
 3666 34027 2255  NXTCO2, ISZ NXTCOP      /INCREMENT THE 'CORTBL' POINTER
 3667 34030 1255          TAD NXTCOP
 3668 34031 1656          TAD I NXTEND
 3669 34032 7640          SZA CLA         /ARE WE PAST THE END OF THE TABLE?
 3670 34033 5236          JMP .+3         /NOT YET
 3671 34034 1042          TAD FANCOR      /YES - START AGAIN AT THE FRONT
 3672 34035 3255          DCA NXTCOP
 3673 34036 1655          TAD I NXTCOP    /NOW GET THE NEXT ENTRY
 3674 34037 0262          AND NXTCHK
 3675 34040 7640          SZA CLA         /IS IT EITHER BEING SWAPPED OR A PHANTOM?
 3676 34041 5252          JMP NXTCO1      /YES; SO IT'S NOT  A USEFUL FIELD NOW
 3677 34042 1655          TAD I NXTCOP
 3678 34043 0036          AND C0037       /WHAT JOB
 3679 34044 7450          SNA             /IS IT A JOB?
 3680 34045 5252          JMP NXTCO1      /NOPE
 3681 34046 4502          RUNABL
 3682 34047 5252          JMP NXTCO1      /NOT RUNNABLE
 3683 34050 1655          TAD I NXTCOP    /IT'S A GOOD ONE
 3684 34051 5600          JMP I NXTCOR
 3685             
 3686 34052 2275  NXTCO1, ISZ NXTCNT      /HAVE WE CHECKED ALL ENTRIES?
 3687 34053 5227          JMP NXTCO2      /NO
 3688 34054 5600          JMP I NXTCOR    /YES; NOTHING RUNABLE EXCEPT NULL JOB
 3689             
 3690 34055 7100  NXTCOP, CORTBL          /ROUND ROBIN CORTBL POINTER
 3691 34056 1301  NXTEND, CORTBE  /END OF CORTBL (SET BY 'INIT')

      /TSS/8 CONFIGURATION FOR UWM                                       Page 93


 3692 34057 1300  NXTLIM, CORCNT  /NUMBER OF USER FIELDS (SET BY 'INIT')
 3693 34060 0000  NXTST,  0
 3694 34061 3012  NXTCO5, SCHEI2
 3695 34062 4600  NXTCHK, FSWP+FIP+SI

      /TSS/8 CONFIGURATION FOR UWM                                       Page 94


 3696 34063 0106  UHALSA, L2SA
 3697             
 3698 34064 1003  UHALT,  TAD UUOCAL      /IS IT A 7404?
 3699 34065 0034          AND C0004
 3700 34066 7650          SNA CLA         /OSR?
 3701 34067 5276          JMP UHALT1      /NO
 3702 34070 4477          GETJTW          /YES, GET CURRENT VALUE OF SWITCHES
 3703 34071 0010           JOBSWR
 3704 34072 3275          DCA UHALT2      /OR IT INTO AC
 3705 34073 1263          TAD UHALSA      /WHICH IS RIDICULOUS, SINCE OSR
 3706 34074 4460          IOR             /IS UNIVERSALLY CODED AS LAS, AND
 3707             NXTCNT,
 3708 34075 0000  UHALT2,  0              /A SIMPLE "DCA L2SA" WOULD DO
 3709 34076 1003  UHALT1, TAD UUOCAL      /NOW SEE IF IT WAS MICROCODED
 3710 34077 0032          AND C0002       /HALT?
 3711 34100 7650          SNA CLA
 3712 34101 5461          UUOEXT          /NO
 3713 34102 4477          GETJTW          /YES, CLEAR HIS RUN BIT
 3714 34103 0000           JOBSTS
 3715 34104 0330          AND UHBITS
 3716 34105 1331          TAD UJSHLT      / & SET THE 'HLT' BIT
 3717 34106 6211          DATFLD
 3718 34107 3405          DCA I JOBSWA
 3719 34110 2052          ISZ COMCNT      /INDICATE THAT 'SI' HAS WORK TO DO
 3720 34111 1160          TAD JOB
 3721 34112 4464          TTYUSE          /NOW GET HIS KEYBOARD NUMBER
 3722 34113 0000           0              / (INPUT SIDE)
 3723 34114 3275          DCA UHALT2
 3724 34115 1275          TAD UHALT2
 3725 34116 6211          DATFLD
 3726 34117 4770          JMS I USBC2     /IS HE ALREADY IN SI MODE?
 3727 34120 5577          WAIT            /YES
 3728 34121 1275          TAD UHALT2
 3729 34122 4732          JMS I USBCLR    /NO - CLEAR HIS INPUT BUFFER
 3730 34123 1275          TAD UHALT2
 3731 34124 6211          DATFLD
 3732 34125 4460          IOR             /NOW SET THE 'SI' BIT
 3733 34126 1000           DSI
 3734 34127 5577          WAIT
 3735             
 3736 34130 3377  UHBITS, -JSRUN-JSHLT-1
 3737 34131 0400  UJSHLT, JSHLT

      /TSS/8 CONFIGURATION FOR UWM                                       Page 95


 3738             /SET BUFFER CONTROL FLAGS
 3739             
 3740 34132 6707  USBCLR, CLRBUF
 3741 34133 1523  USBFLG, CLSTR1
 3742 34134 0020  USBTEL, JSTEL
 3743                     IFNZRO JSDEL-100        <GLITCH; *.-1>
 3744       0037  USBDEL= C0100   /JSDEL
 3745             
 3746             
 3747 34135 1106  USBC,   TAD L2SA        /WHAT IS REQUESTED?
 3748 34136 7700          SMA CLA         /CLEAR OUTPUT BUFFER?
 3749 34137 5346          JMP USBC1       /NO
 3750 34140 1160          TAD JOB         /YES. FIND USER OUTPUT BUFFER
 3751 34141 4464          TTYUSE
 3752 34142 0001           1              / (OUTPUT SIDE)
 3753 34143 4732          JMS I USBCLR    /CLEAR OUTPUT BUFFER
 3754 34144 1334          TAD USBTEL
 3755 34145 4733          JMS I USBFLG    /CLEAR TELEPRINTER FLAG
 3756 34146 1106  USBC1,  TAD L2SA
 3757 34147 7104          CLL RAL
 3758 34150 7700          SMA CLA         /CLEAR INPUT BUFFER?
 3759 34151 5366          JMP USBC3               /NO
 3760 34152 1160          TAD JOB         /GET ADDRESS OF INPUT DDB
 3761 34153 4464          TTYUSE
 3762 34154 0000           0              / (INPUT SIDE)
 3763 34155 3275          DCA UHALT2              /STORE THE INPUT DDB ADDRESS
 3764 34156 1275          TAD UHALT2
 3765 34157 6211          DATFLD
 3766 34160 4770          JMS I USBC2     /IS DDB IN SI MODE?
 3767 34161 5366          JMP USBC3       /YES LEAVE THE BUFFERS ALONE
 3768 34162 1275          TAD UHALT2      /INPUT DDB ADDRESS
 3769 34163 4732          JMS I USBCLR    /CLEAR INPUT BUFFER
 3770 34164 1037          TAD USBDEL
 3771 34165 4733          JMS I USBFLG    /CLEAR FLAG
 3772             
 3773 34166 3106  USBC3,  DCA L2SA        /CLEAR HIS AC
 3774 34167 5461          UUOEXT
 3775 34170 1362  USBC2,  CONCB

      /TSS/8 CONFIGURATION FOR UWM                                       Page 96


 3776                     PAGE
 3777                     IFNZRO .-4200   <GLITCH; *.-1>
 3778             
 3779             /STANDARD BOOTSTRAP AND RESTART ADDRESSES
 3780             
 3781 34200 5602          JMP I .+2       /INIT BOOTSTRAP
 3782 34201 5603          JMP I .+2       /RESTART ADDRESS
 3783 34202 3404          BOOT
 3784 34203 3471          DEBUG

      /TSS/8 CONFIGURATION FOR UWM                                       Page 97


 3785 34204 0000  FILERC, 0               /ROUTINE TO RECOVER FROM DISC ERRORS
 3786 34205 0000  FILUSA, 0               /AND SET ERROR CODES FOR USER
 3787 34206 0000  FILEWC, 0               /ERROR CODES ARE:
 3788       0150  FILER1= WS2             /       1  PARITY
 3789                                     /       2  END OF FILE
 3790                                     /       3  FILE NOT OPEN
 3791                                     /       4  PROTECTION VIOLATION
 3792 34207 7577  FJSF3,  -JSF3-1
 3793                     IFNZRO FILPCA-4 <GLITCH; *.-1>
 3794       0034  FILECA= C0004   /FILPCA
 3795                     IFNZRO FILPCT-7 <GLITCH; *.-1>
 3796       0035  FILECT= C0007   /FILPCT
 3797                     IFNZRO FILPIF-2 <GLITCH; *.-1>
 3798       0032  FILEIF= C0002   /FILPIF
 3799                     IFNZRO FILWC-6  <GLITCH; *.-1>
 3800       0137  FILWCA= C0006   /FILWC
 3801 34210 0005  F0005,  5
 3802 34211 3777  C3777,  3777
 3803 34212 6000  C6000,  6000
 3804 34213 0000  FILERR, 0
 3805 34214 3204          DCA FILERC      /ERROR CODE
 3806 34215 6201          CDF
 3807 34216 7344          CLA CLL CMA RAL /AC:=-2
 3808 34217 1204          TAD FILERC      /ERROR CODE - GT.2?
 3809 34220 7750          SPA SNA CLA     /PROTECTED OR NOT OPEN?
 3810 34221 5237          JMP FILER2      /NO
 3811 34222 4477          GETJTW          /GET ADDRESS OF PARAMETER BLOCK
 3812 34223 0007           JOBLNK
 3813 34224 4576          RETBLK          /RETURN IT TO FREE CORE
 3814 34225 7200          CLA
 3815 34226 1106          TAD L2SA        /GET POINTER TO PARAMETERS IN USER AREA
 3816 34227 1210          TAD F0005
 3817 34230 3213          DCA FILERR      /POINTS TO SIXTH USER PARAMETER (ERROR CODE)
 3818 34231 1204          TAD FILERC      /GET ERROR
 3819 34232 4150          UDF             /SELECT USER FIELD
 3820 34233 3613          DCA I FILERR    /PASS ERROR TO USER
 3821 34234 6201          CDF
 3822 34235 3106          DCA L2SA        /CLEAR HIS AC
 3823 34236 5461          UUOEXT          /AND BACK TO HIM
 3824             
 3825 34237 1613  FILER2, TAD I FILERR    /END OF FILE OR PARITY ERROR...
 3826 34240 1032          TAD FILEIF      /GET ADDRESS OF FILE PARAMETER BLOCK
 3827 34241 3352          DCA FILER5      /POINTS TO WORD 3 OF BLOCK
 3828 34242 6211          DATFLD
 3829 34243 1752          TAD I FILER5    /WAS FILE CALL ORIGINATED BY SI?
 3830 34244 0212          AND C6000       /BITS 0-1 WILL BE SET IF SO...
 3831 34245 7650          SNA CLA
 3832 34246 5320          JMP FILER4      /NO - IT CAME FROM USER PROGRAM
 3833 34247 1752          TAD I FILER5    /YES - GET FIELD # FOR TRANSFER
 3834 34250 7012          RTR
 3835 34251 0035          AND C0007       /MASK OUT FILE # BITS
 3836 34252 1162          TAD CORTBA      /INDEX INTO CORTBL
 3837 34253 3205          DCA FILUSA      /SAVE POINTER TO CORTBL ENTRY FOR THIS TRANSFER
 3838 34254 6201          CDF
 3839 34255 1605          TAD I FILUSA    /GET CORTBL ENTRY
 3840 34256 0036          AND C0037       /EXTRACT JOB #
 3841 34257 3205          DCA FILUSA      /SAVE JOB #

      /TSS/8 CONFIGURATION FOR UWM                                       Page 98


 3842 34260 1204          TAD FILERC
 3843 34261 7440          SZA             /WAS THERE ANY ERROR AT ALL?
 3844 34262 1146          TAD C7776
 3845 34263 7650          SNA CLA         /YES - WAS IT OTHER THAN AN END-OF-FILE?
 3846 34264 5302          JMP FILER6      /NO - WE'RE ALMOST DONE THEN
 3847 34265 1205          TAD FILUSA      /MUST BE PARITY ERROR - SET THE ERROR CODE
 3848 34266 4463          ERROR
 3849 34267 0005           DSKERR
 3850 34270 1205  FILER7, TAD FILUSA      /JOB #
 3851 34271 1044          TAD JOBTBA
 3852 34272 4500          GETJTI          /GET CONTENTS OF WAIT MASK
 3853 34273 0003           JOBWMK
 3854 34274 0207          AND FJSF3       /CLEAR FILE 3 WAIT BIT
 3855 34275 6211          DATFLD
 3856 34276 3405          DCA I JOBSWA    /SAVE WAIT MASK
 3857 34277 2213  FILER3, ISZ FILERR      /INDEX PAST CALLING ARGUMENT
 3858 34300 6201          CDF
 3859 34301 5613          JMP I FILERR    /AND BACK
 3860             
 3861             /WE COME HERE IF THE TRANSFER WAS INITIATED BY 'SI' AND
 3862             /ENDED WITH AN END-OF-FILE ERROR OR NO ERROR AT ALL.
 3863 34302 6211  FILER6, DATFLD          /GET WORD 3 OF PARAMETER BLOCK
 3864 34303 1752          TAD I FILER5    /WAS SI COMMAND RUN OR LOAD/SAVE?
 3865 34304 7710          SPA CLA
 3866 34305 5316          JMP FILER8      /RUN - LET JOB CONTINUE
 3867 34306 6201          CDF             /LOAD/SAVE - NOW STOP JOB
 3868 34307 1205          TAD FILUSA
 3869 34310 1044          TAD JOBTBA
 3870 34311 4500          GETJTI          /GET CONTENTS OF STR0
 3871 34312 0000           JOBSTS
 3872 34313 0211          AND C3777       /CLEAR RUN BIT
 3873 34314 6211          DATFLD
 3874 34315 3405          DCA I JOBSWA    /SAVE NEW STR0
 3875 34316 6201  FILER8, CDF
 3876 34317 5270          JMP FILER7      /GO CLEAR WAIT MASK & BACK
 3877             
 3878 34320 1752  FILER4, TAD I FILER5    /UPDATE USER CONTROL TO INDICATE ERROR CODE
 3879 34321 7004          RAL             /SHIFT FIELD # INTO BITS 6-8
 3880 34322 0140          AND C0070       /SAVE IT
 3881 34323 1325          TAD FILCDF      /GENERATE "UDF"
 3882 34324 3352          DCA FILER5      /USER FIELD SELECT
 3883 34325 6201  FILCDF, CDF
 3884 34326 1613          TAD I FILERR    /PARAMETER BLOCK ADDRESS
 3885 34327 3206          DCA FILEWC      /SAVE IT
 3886 34330 1206          TAD FILEWC
 3887 34331 6211          DATFLD
 3888 34332 1034          TAD FILECA
 3889 34333 3150          DCA FILER1      /POINTS TO CORE ADDRESS IN PARAMETER BLOCK
 3890 34334 1550          TAD I FILER1    /GET CORE ADDRESS
 3891 34335 3150          DCA FILER1      /SAVE IT
 3892 34336 1206          TAD FILEWC      /START OF PARAMETERS
 3893 34337 1035          TAD FILECT      /+7
 3894 34340 3205          DCA FILUSA      /POINTS TO PTR TO FILE CONTROL
 3895 34341 1605          TAD I FILUSA    /GET ADDRESS OF FILE CONTROL
 3896 34342 1137          TAD FILWCA      /POINTS TO WORD COUNT IN FILE CONTROL
 3897 34343 3206          DCA FILEWC      /SAVE IT
 3898 34344 1206          TAD FILEWC

      /TSS/8 CONFIGURATION FOR UWM                                       Page 99


 3899 34345 7001          IAC
 3900 34346 3205          DCA FILUSA      /POINTS TO POINTER TO USER PARAMETERS
 3901 34347 1605          TAD I FILUSA    /GET POINTER TO USER ARGUMENTS
 3902 34350 3205          DCA FILUSA      /SAVE
 3903 34351 1606          TAD I FILEWC    /GET WORD COUNT TO GO FROM CONTROL BLOCK
 3904 34352 0000  FILER5, 0               /SELECT USER FIELD
 3905 34353 3605          DCA I FILUSA    /SAVE IN USER AREA
 3906 34354 2205          ISZ FILUSA      /POINTS TO WORD 4 OF USER ARGUMENTS
 3907 34355 1150          TAD FILER1      /GET LATEST CORE XFER ADDRESS
 3908 34356 3605          DCA I FILUSA    /SAVE FOR USER
 3909 34357 2205          ISZ FILUSA
 3910 34360 2205          ISZ FILUSA      /POINTS TO WORD 6 (ERROR WORD)
 3911 34361 1204          TAD FILERC      /GET ERROR CODE
 3912 34362 3605          DCA I FILUSA    /PASS ON TO USER
 3913 34363 5277          JMP FILER3      /AND BACK

      /TSS/8 CONFIGURATION FOR UWM                                      Page 100


 3914                     IFNZRO JSTIME-4000      <GLITCH; *.-1>
 3915 34364 1146  DOXSTM, TAD C7776       /WAIT 2 SECONDS TO TRY TO FIX I/O ERROR
 3916 34365 3003  DOUSTM, DCA WS0         /SAVE - # UNITS OF TIME
 3917 34366 1160          TAD JOB         /SET CLKTBL ENTRY FOR THIS JOB
 3918 34367 1376          TAD CLKTBA
 3919 34370 3004          DCA WS1         /POINTS TO THIS JOB'S ENTRY
 3920 34371 1003          TAD WS0
 3921 34372 6211          DATFLD
 3922 34373 3404          DCA I WS1       /SET TABLE ENTRY
 3923 34374 7130          STL RAR         /SET AC=JSTIME
 3924 34375 5461          UUOEXT          /EXIT AND WAIT
 3925             
 3926 34376 3303  CLKTBA, CLKTBL  /JOB TIMER TABLE ADDRESS

      /TSS/8 CONFIGURATION FOR UWM                                      Page 101


 3927                     PAGE
 3928             
 3929             /RFILE AND WFILE IOTS
 3930             
 3931 34400 1103  UFILE,  TAD L2SF        /TRYING TO SWAP THIS FIELD?
 3932 34401 0035          AND C0007
 3933 34402 7041          CIA
 3934 34403 1056          TAD FORCE       /FIELD # BEING SWAPPED
 3935 34404 7650          SNA CLA
 3936 34405 5470          REDO            /YES - DON'T DO IOT NOW
 3937 34406 1364          TAD UFILWA      /NO. GET USER PARAMETERS
 3938 34407 4766          JMS I UFPARM    /AND MOVE TO PARAMETER BLOCK
 3939 34410 1767          TAD I UFLNKA    /ADDRESS OF PARAMETER BLOCK
 3940 34411 1032          TAD UFIPIF
 3941 34412 3003          DCA UFPARA      /POINTS TO WORD 3 OF BLOCK
 3942 34413 6211          DATFLD
 3943 34414 1403          TAD I UFPARA    /CLEAR ALL BUT FILE # IN BLOCK
 3944 34415 0033          AND C0003
 3945 34416 3403          DCA I UFPARA    /SAVE IT
 3946 34417 1106          TAD L2SA        /ADDRESS OF USER PARAMETERS
 3947 34420 1032          TAD UFIPWC      /+2
 3948 34421 3341  SIFIL1, DCA UFILE1      /POINTS TO WORD COUNT IN USER AREA
 3949 34422 1403          TAD I UFPARA    /FILE #
 3950 34423 0033          AND C0003
 3951 34424 1365          TAD UFJF0
 3952 34425 3227          DCA UFJOBF      /RELATIVE ADDR OF FILE POINTER FOR THIS FILE
 3953 34426 4477          GETJTW
 3954 34427 0000  UFJOBF,  0              /POINTER TO FILE CONTROL INFO
 3955 34430 7450          SNA
 3956 34431 5336          JMP UFILER+1    /FILE NOT OPEN
 3957 34432 3227          DCA UFJOBF      /SAVE POINTER TO FILE CONTROL
 3958 34433 6211          DATFLD
 3959 34434 1403          TAD I UFPARA    /FILE #
 3960 34435 4774          JMS I UFIGJF    /GENERATE CORRESPONDING FILE BIT IN STR1
 3961 34436 3004          DCA UFIJSF      /FILE STATUS FLAG
 3962 34437 1103          TAD L2SF        /USER'S FIELD #
 3963 34440 0035          AND C0007
 3964 34441 7106          CLL RTL         /*4
 3965 34442 3005          DCA JOBSWA      /SAVE
 3966 34443 1403          TAD I UFPARA    /GET FILE # + ORIGINATING STATUS INFO.
 3967 34444 0363          AND C7743       /CLEAR FIELD #
 3968 34445 1005          TAD JOBSWA      /SET FIELD #
 3969 34446 3403          DCA I UFPARA    /SAVE IN PARAMETERS
 3970 34447 1227          TAD UFJOBF      /SAVE GLOBAL PARAMETERS
 3971 34450 7001          IAC             /POINTS TO WORD 2 OF CONTROL BLOCK
 3972 34451 3015          DCA AXS1        /CONTROL INDEX
 3973 34452 7346          CLL CLA CMA RTL /AC:=-3
 3974 34453 1003          TAD UFPARA
 3975 34454 3016          DCA AXS2        /PARAMETER INDEX POINTS TO START OF PARAMETERS-1
 3976 34455 1416          TAD I AXS2      /WRITE AND PROTECTED?
 3977 34456 0415          AND I AXS1
 3978 34457 7640          SZA CLA
 3979 34460 5335          JMP UFILER      /YES - ERROR
 3980 34461 1016          TAD AXS2        /NO. SET FILPAR = START OF PARAMETER BLOCK
 3981 34462 3415          DCA I AXS1
 3982 34463 1416          TAD I AXS2      /DISC EXTENSION FROM PARAMETERS
 3983 34464 3415          DCA I AXS1      /TO CONTROL BLOCK

      /TSS/8 CONFIGURATION FOR UWM                                      Page 102


 3984 34465 2016          ISZ AXS2        /SKIP FIELD
 3985 34466 1416          TAD I AXS2      /SAVE WC
 3986 34467 3005          DCA JOBSWA
 3987 34470 2016          ISZ AXS2        /SKIP CORE ADDRESS FOR NOW
 3988 34471 1416          TAD I AXS2      /DISC ADDRESS
 3989 34472 3415          DCA I AXS1      /TO CONTROL BLOCK
 3990 34473 1372          TAD UFIRET      /RETURN ADDRESS
 3991 34474 3416          DCA I AXS2      /TO PARAMETER BLOCK
 3992 34475 1227          TAD UFJOBF      /POINTER TO FILE CONTROL
 3993 34476 3416          DCA I AXS2      /TO PARAMETER BLOCK
 3994 34477 1005          TAD JOBSWA      /WORD COUNT
 3995 34500 3415          DCA I AXS1      /TO CONTROL BLOCK
 3996 34501 1341          TAD UFILE1      /POINTS TO WC IN USER AREA
 3997 34502 7450          SNA             /IS THIS AN SI REQUEST?
 3998 34503 5306          JMP .+3         /YES
 3999 34504 3415          DCA I AXS1      /NO, SAVE POINTER TO WC IN CONTROL BLOCK
 4000 34505 3106          DCA L2SA        /CLEAR USER AC
 4001 34506 1227          TAD UFJOBF      /POINTER TO CONTROL BLOCK
 4002 34507 1033          TAD UFPAR2      /+3
 4003 34510 3316          DCA UFILPA      /POINTS TO POINTER IN CONTROL BLOCK POINTING TO PARAM. BLOCK.
 4004 34511 1227          TAD UFJOBF      /POINTS TO FILE CONTROL
 4005 34512 4771          JMS I UFILIX    /GET SEGMENT INDEX
 4006 34513 5346          JMP UFILE4      /NOT IN CORE - DO A WINDOW TURN
 4007 34514 5331          JMP UFILE2      /NON-EXISTENT DISC ADDRESS
 4008 34515 4773          JMS I UFICTB    /OK. SETUP TRANSFER BLOCK - POINTER TO SEGMENT # IN AC
 4009 34516 0000  UFILPA, 0               /POINTER TO FILPAR
 4010 34517 1716          TAD I UFILPA    /ADDRESS OF PARAMETERS
 4011 34520 4775          JMS I UFIQUE    /QUEUE THE REQUEST IN DSUTBL
 4012 34521 2165          ISZ DSBUSY      /DISC BUSY?
 4013 34522 7410          SKP             /YES
 4014 34523 4462          JMS I FIUSER    /NO. START TRANSFER
 4015 34524 1004          TAD UFIJSF      /CLEAR FILE STATUS BIT
 4016 34525 5461          UUOEXT          /EXIT
 4017             
 4018 34526 1032  SIFILE, TAD UFIPIF
 4019 34527 3003          DCA UFPARA      /POINTS TO FILE # IN PARAMETERS
 4020 34530 5221          JMP SIFIL1      /REST IS SAME AS USER PROGRAMS
 4021             
 4022 34531 4477  UFILE2, GETJTW          /NON EXISTANT DISC ADDRESS
 4023 34532 0007           JOBLNK         /GET ADDRESS OF PARAMETERS
 4024 34533 3341          DCA UFILE1      /SAVE IT
 4025 34534 5337          JMP .+3
 4026 34535 7001  UFILER, IAC             /PROTECTED
 4027 34536 7001          IAC             /NOT OPEN
 4028 34537 1032          TAD C0002       /EOF
 4029 34540 4770          JMS I UFERR     /FILE ERROR ROUTINE
 4030 34541 0000  UFILE1, 0               /POINTS TO PARAMETER BLOCK
 4031 34542 1341          TAD UFILE1
 4032 34543 4576          RETBLK          /RETURN PARA. BLK.
 4033 34544 7200          CLA
 4034 34545 5461          UUOEXT          /BACK TO USER
 4035             
 4036 34546 4477  UFILE4, GETJTW          /GET HIS JOB STATUS
 4037 34547 0000           JOBSTS
 4038 34550 7200          CLA
 4039 34551 6211          DATFLD
 4040 34552 1005          TAD JOBSWA

      /TSS/8 CONFIGURATION FOR UWM                                      Page 103


 4041 34553 4460          IOR             /'OR' IN 'RUN' & 'NON-RESIDENT' BITS
 4042 34554 4100           JSRUN+JSIOT    / SO HE'S RUNNABLE FOR 'FIP' CALL
 4043 34555 2005          ISZ JOBSWA
 4044 34556 1405          TAD I JOBSWA    /NOW SET HIS DUMMY-WAIT BIT
 4045 34557 0146          AND C7776
 4046 34560 7001          IAC
 4047 34561 3405          DCA I JOBSWA
 4048 34562 5577          WAIT            / AND WAIT FOR THE WINDOW-TURN
 4049             
 4050       0003  UFPARA= WS0             /ADDR OF USER PARAMETERS
 4051       0004  UFIJSF= WS1             /FILE STATUS FLAG
 4052 34563 7743  C7743,  7743
 4053 34564 3344  UFILWA, UFILWC
 4054 34565 0020  UFJF0,  JOBF0
 4055                     IFNZRO FILPAR-3 <GLITCH; *.-1>
 4056       0033  UFPAR2= C0003   /FILPAR
 4057                     IFNZRO FILPIF-2 <GLITCH; *.-1>
 4058       0032  UFIPIF= C0002   /FILPIF
 4059                     IFNZRO FILPWC-3 <GLITCH; *.-1>
 4060       0032  UFIPWC= C0002   /FILPWC-1
 4061             
 4062 34566 2327  UFPARM, GETUSP
 4063 34567 2366  UFLNKA, UUOLNK
 4064 34570 4213  UFERR,  FILERR
 4065 34571 5200  UFILIX, FILIX
 4066 34572 5406  UFIRET, DSURET
 4067 34573 4645  UFICTB, FILCTB
 4068 34574 6634  UFIGJF, GETJFX
 4069 34575 3623  UFIQUE, DSQUE

      /TSS/8 CONFIGURATION FOR UWM                                      Page 104


 4070                     PAGE
 4071             
 4072             /RETURN NUMBER OF NEXT RUNABLE JOB IN AC
 4073             /CALL   JMS NXTJOB
 4074             /       RETURN WITH JOB # IN AC
 4075             
 4076             FILCDA,
 4077 34600 0000  NXTJCT, 0
 4078 34601 0000  NXTJBN, 0       /LAST JOB NUMBER CHECKED
 4079 34602 7754  NXTMAX, -JOBMAX
 4080             
 4081             FILCT2,
 4082 34603 0000  NXTJOB, 0
 4083 34604 1057          TAD BONUS       /IS THERE ANY JOB BROKEN OUT OF I/O WAIT 
 4084 34605 7450          SNA
 4085 34606 5213          JMP NXTJ0
 4086 34607 4502          RUNABL          /IS IT RUNNABLE?
 4087 34610 5213          JMP NXTJ0       /NO,GET THE NEXT JOB
 4088 34611 1057          TAD BONUS       /THIS JOB
 4089 34612 5603          JMP I NXTJOB
 4090 34613 1202  NXTJ0,  TAD NXTMAX      /INIT COUNT OF NUMBER OF JOBS
 4091 34614 3200          DCA NXTJCT
 4092 34615 1201  NXTJ1,  TAD NXTJBN      /IS IT TIME TO WRAP AROUND TO JOB 1?
 4093 34616 1202          TAD NXTMAX
 4094 34617 7650          SNA CLA
 4095 34620 3201          DCA NXTJBN      /YES
 4096 34621 2201          ISZ NXTJBN      /INCREMENT NUMBER OF JOB UNDER CONSIDERATION
 4097 34622 1442          TAD I FANCOR    /IS THIS JOB IN FIELD 2
 4098 34623 0036          AND C0037
 4099 34624 7041          CIA
 4100 34625 1201          TAD NXTJBN
 4101 34626 7640          SZA CLA
 4102 34627 5233          JMP NXTJ2       /NO
 4103 34630 1442          TAD I FANCOR    /YES, KNOCK DOWN THE NOTRUN AND DISC COMPLETION
 4104 34631 0155          AND CNOTR       /  BITS SINCE WE'RE LOOKING AT IT NOW
 4105 34632 3442          DCA I FANCOR
 4106 34633 1201  NXTJ2,  TAD NXTJBN      /IS THE JOB RUNNABLE
 4107 34634 4502          RUNABLE
 4108 34635 5240          JMP NXTJ3       /NO, CONTINUE JOB TABLE ROUND ROBIN
 4109 34636 1201          TAD NXTJBN      /YES, RETURN WITH JOB NO. IN AC
 4110 34637 5603          JMP I NXTJOB
 4111             
 4112 34640 2200  NXTJ3,  ISZ NXTJCT      /HAVE WE TRIED ALL JOBS
 4113 34641 5215          JMP NXTJ1       /NO, KEEP GOING
 4114 34642 5603          JMP I NXTJOB    /YES, RETURN WITH AC=0

      /TSS/8 CONFIGURATION FOR UWM                                      Page 105


 4115             /CONSTRUCT TRANSFER BLOCK
 4116             /CALL   TAD SEGMENT WINDOW POINTER
 4117             /       JMS FILCTB
 4118             /       POINTER TO FILPAR
 4119             
 4120                     IFNZRO FILPDA-FILPDX-4  <GLITCH; *.-1>
 4121       0034  FILCPD= C0004   /FILPDA-FILPDX
 4122                     IFNZRO FILPWC-FILPDA+2  <GLITCH; *.-1>
 4123       0146  FILCWC= C7776   /FILPWC-FILPDA
 4124             
 4125       0005  FILCSW= JOBSWA  /POINTER TO SEGMENT WINDOW
 4126       0150  FILCPA= WS2     /POINTER TO FILPAR & FILDA
 4127 34643 0000  FILCWA, 0
 4128 34644 0000  FILCPX, 0       /POINTER TO FILPDX, FILPDA & FILPWC
 4129             
 4130 34645 0000  FILCTB, 0
 4131 34646 3005          DCA FILCSW      /SAVE POINTER TO SEGMENT IN WINDOW
 4132 34647 1645          TAD I FILCTB
 4133 34650 3150          DCA FILCPA      /ADDRESS OF POINTER TO PARAMETER BLOCK
 4134 34651 2245          ISZ FILCTB      /SKIP ARGUMENT IN CALL
 4135 34652 6211          DATFLD
 4136 34653 1550          TAD I FILCPA    /GET ADDRESS OF PARAMETERS
 4137 34654 7001          IAC             /POINTS TO WORD 2 OF PARAMETERS
 4138 34655 3244          DCA FILCPX
 4139 34656 2150          ISZ FILCPA      /POINTS TO DISC EXTENSION IN CONTROL BLOCK
 4140 34657 7240          CLA CMA
 4141 34660 1405          TAD I FILCSW    /GET SEGMENT #
 4142 34661 7110          CLL RAR
 4143 34662 7012          RTR
 4144 34663 7012          RTR             /MULTIPLY BY 400 SEG SIZE
 4145 34664 3203          DCA FILCT2      /SAVE "PRODUCT"
 4146 34665 1203          TAD FILCT2
 4147 34666 7004          RAL
 4148 34667 0142          AND SEGSM1      /THROW OUT CONTRIBUTION FROM HI ORDER BITS OF EXTENSION
 4149 34670 1377          TAD FIBAS1      /START OF LOGICAL FILE AREA
 4150 34671 7106          CLL RTL
 4151 34672 3644          DCA I FILCPX    /SAVE IN DISC EXTENSION IN PARAMETER BLOCK
 4152 34673 1203          TAD FILCT2      /NOW GET LOW ORDER ADDRESS
 4153 34674 0134          AND SEGLMK
 4154 34675 3203          DCA FILCT2      /AND SAVE IT
 4155 34676 1244          TAD FILCPX      /SET DISC ADDRESS
 4156 34677 1034          TAD FILCPD
 4157 34700 3244          DCA FILCPX      /POINTS TO LOW ORDER ADDRESS IN PAR. BLOCK
 4158 34701 1150          TAD FILCPA
 4159 34702 7001          IAC
 4160 34703 3200          DCA FILCDA      /POINTS TO LOW ORDER ADDRESS IN CONTROL BLOCK
 4161 34704 1600          TAD I FILCDA    /GET WORD ADDRESS SUPPLIED BY USER
 4162 34705 0142          AND SEGSM1      /(WORD IN SEGMENT)
 4163 34706 1203          TAD FILCT2      /+ WORD ADDRESS FROM SEGMENT ARITHMETIC
 4164 34707 3644          DCA I FILCPX    /SAVE IT IN PARAMETER BLOCK
 4165 34710 1244          TAD FILCPX      /SET WORD COUNT
 4166 34711 1146          TAD FILCWC
 4167 34712 3244          DCA FILCPX      /POINTS TO WORD COUNT IN PARAMETER BLOCK
 4168 34713 3644          DCA I FILCPX    /NOTHING TRANSFERRED YET
 4169 34714 1200          TAD FILCDA
 4170 34715 7001          IAC
 4171 34716 3243          DCA FILCWA      /POINTS TO WORD COUNT IN CONTROL BLOCK

      /TSS/8 CONFIGURATION FOR UWM                                      Page 106


 4172 34717 1142  FILCT1, TAD SEGSM1      /SEGSIZ-1
 4173 34720 0600          AND I FILCDA    /LOW ORDER ADDRESS IN CONTROL BLOCK
 4174 34721 3203          DCA FILCT2      /DISC ADDRESS MOD SEGSIZ
 4175 34722 1643          TAD I FILCWA    /GET - WC FROM CONTROL BLOCK
 4176 34723 7141          CLL CIA         /+WC
 4177 34724 1203          TAD FILCT2      /IF WE DO ENTIRE WC WILL WE GO INTO NEXT
 4178 34725 0134          AND SEGLMK      /  SEGMENT?
 4179 34726 7650          SNA CLA
 4180 34727 7430          SZL
 4181 34730 5333          JMP FILCT3
 4182 34731 1643          TAD I FILCWA    /NO
 4183 34732 5335          JMP .+3
 4184 34733 1134  FILCT3, TAD SEGLMK      /SUBTRACT SEGSIZ FROM WC, SO WE STAY IN SAME SEGMENT
 4185 34734 1203          TAD FILCT2
 4186 34735 3203          DCA FILCT2      /WORD COUNT FOR TRANSFER
 4187 34736 1203          TAD FILCT2      /UPDATE WORD COUNT IN PARAMETER BLOCK
 4188 34737 1644          TAD I FILCPX    /OLD VALUE
 4189 34740 3644          DCA I FILCPX    /NEW VALUE
 4190 34741 1203          TAD FILCT2      /UPDATE WORD COUNT IN FILE CONTROL BLOCK
 4191 34742 7041          CIA             /+WC
 4192 34743 1643          TAD I FILCWA    /OLD - WC
 4193 34744 3643          DCA I FILCWA    /NEW - WC
 4194 34745 1643          TAD I FILCWA    /ARE WE DONE?
 4195 34746 7650          SNA CLA
 4196 34747 5645          JMP I FILCTB    /YES
 4197 34750 1203          TAD FILCT2      /INCREMENT DISC ADDRESS
 4198 34751 7141          CLL CIA         /+WC
 4199 34752 1600          TAD I FILCDA    /OLD DISC ADDRESS
 4200 34753 3600          DCA I FILCDA    /NEW DISC ADDRESS
 4201 34754 7430          SZL             /OVERFLOW?
 4202 34755 2550          ISZ I FILCPA    /YES; INDEX DISC EXTENSION
 4203 34756 1405          TAD I FILCSW    /GET CURRENT SEGMENT #
 4204 34757 7160          CLL CML CMA     /-(SEG # +1)
 4205 34760 3203          DCA FILCT2      /SAVE IT
 4206 34761 2005          ISZ FILCSW      /POINTS TO NEXT SEGMENT IN WINDOW
 4207 34762 1005          TAD FILCSW      /ARE WE STILL IN THE WINDOW?
 4208 34763 0035          AND C0007
 4209 34764 7640          SZA CLA         /NEXT POINTER IN CORE?
 4210 34765 5372          JMP FILCT4      /YES, SEE IF NEXT SEGMENT IS CONTIGUOUS
 4211 34766 1135          TAD BASWIN
 4212 34767 1005          TAD FILCSW      /NO - DO A 13-BIT COMPARE WITH BASIC WINDOW
 4213 34770 7670          SNA SZL CLA     /IS IT THE SECOND OR BETTER BASIC SEGMENT?
 4214 34771 5645          JMP I FILCTB    /NO - JUST RETURN
 4215 34772 1405  FILCT4, TAD I FILCSW    /YES - GET THE NEXT SEGMENT
 4216 34773 1203          TAD FILCT2      /CONTIGUOUS SEGMENTS?
 4217 34774 7650          SNA CLA
 4218 34775 5317          JMP FILCT1      /YES; CONTINUE THE TRANSFER
 4219 34776 5645          JMP I FILCTB    /RETURN
 4220 34777 0031  FIBAS1, SWDEX+JOBMAX

      /TSS/8 CONFIGURATION FOR UWM                                      Page 107


 4221                     PAGE
 4222             
 4223             /KEYBOARD IOTS
 4224             
 4225                     IFNZRO DSI-1000 <GLITCH; *.-1>
 4226       0004  UKEYDB= WS1     /INPUT BUFFER DDB
 4227 35000 0106  UKL2SA, L2SA
 4228 35001 2067  UKEY1A, UKT1
 4229             
 4230 35002 1160  UKEY,   TAD JOB
 4231 35003 4464          TTYUSE          /GET THIS JOB'S INPUT DDB
 4232 35004 0000           0
 4233 35005 3004          DCA UKEYDB
 4234 35006 6211          DATFLD
 4235 35007 1404          TAD I UKEYDB    /GET THE CONSOLE STATUS-BITS
 4236 35010 6201          CDF
 4237 35011 0040          AND C1000
 4238 35012 7640          SZA CLA         /IS CONSOLE IN 'SI' MODE?
 4239 35013 5470          REDO            /YES - BACK UP HIS PC AND TRY AGAIN LATER
 4240 35014 4601          JMS I UKEY1A    /WHAT DOES HE WANT TO DO?
 4241 35015 5274          JMP UKEYRS      /READ STRING
 4242 35016 0100  UKEYFL,  JSDEL          /DELIMITER FLAG
 4243 35017 5247          JMP UKWAT1      /KSF AND NO CHARACTERS AROUND...
 4244 35020 7010          RAR             /NOW BIT 0 = 2-BIT AND L = 4-BIT
 4245 35021 7710          SPA CLA         /IS BIT SET FOR 6032?
 4246 35022 3106          DCA L2SA        /YES - JUST CLEAR HIS AC
 4247             
 4248             /EVENT TIME 3
 4249 35023 7620          SNL CLA         /IS BIT SET FOR 6034?
 4250 35024 5461          UUOEXT          /NO - JUST EXIT
 4251 35025 4234          JMS UKEYFE      /GET A CHARACTER FROM BUFFER
 4252 35026 5243          JMP UKWAIT      /NONE AVAILABLE-RESET PC AND WAIT
 4253 35027 3232          DCA .+3         /SAVE CHARACTER
 4254 35030 1200          TAD UKL2SA      /OR INTO USER'S AC
 4255 35031 4460          IOR             /IT WOULD PROBABLY BE ADEQUATE TO JAM IT INTO AC.
 4256 35032 0000  UKEYC,   0
 4257 35033 5461          UUOEXT          /AND BACK TO USER
 4258             
 4259 35034 0000  UKEYFE, 0
 4260 35035 1004          TAD UKEYDB
 4261 35036 6213          CIF DATFLD
 4262 35037 4642          JMS I KSFBUG    /GET A CHARACTER
 4263 35040 2234          ISZ UKEYFE      /YES, FOUND A CHARACTER
 4264 35041 5634          JMP I UKEYFE    /NO CHARACTER FOUND
 4265 35042 3100  KSFBUG, KSFPRA
 4266             
 4267 35043 7240  UKWAIT, STA             /BACK UP HIS PC
 4268 35044 1104          TAD L2SV0
 4269 35045 3104          DCA L2SV0
 4270 35046 3106          DCA L2SA        /CLEAR HIS AC
 4271             
 4272 35047 7332  UKWAT1, CLA CLL CML RTR /AC=2000
 4273 35050 6211          DATFLD
 4274 35051 0404          AND I UKEYDB    / AND OFF THE STATUS-BITS
 4275 35052 7450          SNA             /WAS AN 'XOFF' SENT?
 4276 35053 5270          JMP UKWAT2      /NO, JUST WAIT FOR KEYBOARD
 4277 35054 7040          CMA             /CLEAR XON BIT IN DDB

      /TSS/8 CONFIGURATION FOR UWM                                      Page 108


 4278 35055 0404          AND I UKEYDB
 4279 35056 3404          DCA I UKEYDB
 4280 35057 1272          TAD UK0177      /MAKE STORE THINK SI IS CALLING
 4281 35060 3112          DCA SOURCE      /(SO WE ALWAYS GET A BUFFER
 4282 35061 1273          TAD UKXON       /OUTPUT AN XON
 4283 35062 3031          DCA TTCHAR      /TO RESTART READER
 4284 35063 1160          TAD JOB
 4285 35064 4464          TTYUSE          /GET OUTPUT DDB ADDRESS
 4286 35065 0001           1              / (OUTPUT SIDE)
 4287 35066 4575          STORE           /PUT CHARACTER IN OUTPUT BUFFER
 4288 35067 7000          NOP             /SHOULDN'T HAPPEDN
 4289 35070 1216  UKWAT2, TAD UKEYFL      /CLEAR BIT IN STR1
 4290 35071 5461          UUOEXT
 4291             
 4292 35072 0177  UK0177, 177
 4293 35073 0221  UKXON,  221

      /TSS/8 CONFIGURATION FOR UWM                                      Page 109


 4294             /READ INPUT STRING
 4295             
 4296                     IFNZRO DDBBRK-2 <GLITCH; *.-1>
 4297       0032  UKEYBA= C0002   /DDBBRK
 4298             
 4299 35074 4316  UKEYRS, JMS STRINI      /INITIALIZE STRING INPUT
 4300 35075 6211          DATFLD
 4301 35076 1404          TAD I UKEYDB    /GET WORD 1 OF INPUT DDB
 4302 35077 0036          AND C0037
 4303 35100 3112          DCA SOURCE      /CONSOLE #
 4304 35101 1004          TAD UKEYDB      /ADDRESS OF DDB
 4305 35102 1032          TAD UKEYBA      /...+2
 4306 35103 3316          DCA UKBRKM      /POINTS TO BREAK MASK
 4307 35104 1716          TAD I UKBRKM    /GET BREAK MASK
 4308 35105 3316          DCA UKBRKM      /SAVE IT
 4309 35106 4234  UKEYR1, JMS UKEYFE      /GET A CHARACTER
 4310 35107 5247          JMP UKWAT1      /NONE - WAIT FOR ONE
 4311 35110 4326          JMS STRINS      /STORE IT IN USER AREA
 4312             
 4313 35111 1316          TAD UKBRKM      /IS IT A BREAK CHARACTER?
 4314 35112 6213          CIF DATFLD      /OFF TO FIELD 1 FOR BREAKTEST
 4315 35113 4471          BREAK
 4316 35114 5341          JMP STRINE      /YES - END OF STRING
 4317 35115 5306          JMP UKEYR1      /NO - KEEP GOING
 4318             UKBRKM,
 4319 35116 0000  STRINI, 0
 4320 35117 7240          STA             /DECREMENT PC FOR REDO
 4321 35120 1104          TAD L2SV0
 4322 35121 3104          DCA L2SV0
 4323 35122 1106          TAD L2SA        /POINTS TO PARAMETERS IN USER AREA
 4324 35123 7001          IAC
 4325 35124 3003          DCA WS0         /ADDR OF USER BUFFER POINTER
 4326 35125 5716          JMP I STRINI    /ALL SET UP
 4327             
 4328 35126 0000  STRINS, 0
 4329 35127 3031          DCA TTCHAR      /SAVE CHAR
 4330 35130 4150          UDF             /SELECT USER FIELD
 4331 35131 2403          ISZ I WS0       /INCREMENT USER BUFFER ADDRESS
 4332 35132 7000          NOP
 4333 35133 1403          TAD I WS0       /GET ADDRESS TO STORE CHARACTER
 4334 35134 3005          DCA JOBSWA
 4335 35135 1031          TAD TTCHAR      /STORE CHAR IN USER BUFFER
 4336 35136 3405          DCA I JOBSWA
 4337 35137 2506          ISZ I L2SA      /DONE?
 4338 35140 5726          JMP I STRINS    /NO
 4339 35141 3106  STRINE, DCA L2SA        /CLEAR AC
 4340 35142 5743          JMP I .+1       /SKIP RETURN
 4341 35143 0324          UUOEX2
 4342             
 4343 35144 0000  PLRACE, 0
 4344 35145 6201          CDF
 4345 35146 7360          STA STL         /SOFT WARE FLAG UP TO SHOW NO FLAG IS EXPECTED
 4346 35147 3757          DCA I RACE2
 4347 35150 1364          TAD NOPNOP
 4348 35151 3760          DCA I RACE3     /NOP FOR THE TIMING COUNTER
 4349 35152 1756          TAD I RACE1
 4350 35153 7640          SZA CLA         /WAS THE BUFFER COMPLETELY FILLED?

      /TSS/8 CONFIGURATION FOR UWM                                      Page 110


 4351 35154 7001          IAC             /NO - THEN DON'T REINITIALIZE IT
 4352 35155 5744          JMP I PLRACE    /RETURN
 4353 35156 7517  RACE1,  PTPCNT
 4354 35157 7520  RACE2,  PTPBSY
 4355 35160 2432  RACE3,  PTPSKA
 4356 35161 2310          PTPISZ
 4357 35162 2507          TIPTP1
 4358 35163 4344  RLPTL,  JMS PLRACE      /SET SOFTWARE FLAG
 4359 35164 7300  NOPNOP, CLA CLL         /SAME RETURN IN ANY CASE
 4360 35165 5766          JMP I .+1
 4361 35166 3664          PTPL2
 4362             
 4363                     IFNZRO UUOERR-.&4000    <GLITCH; *.-1>
 4364       5172          *UUOERR
 4365 35172 1160  UUOERR, TAD JOB
 4366 35173 4463          ERROR           /SET "ILLEGAL IOT" ERROR CODE
 4367 35174 0001           UUOERF
 4368 35175 5577  USYN,   WAIT            /AND BACK TO SCHEDULER

      /TSS/8 CONFIGURATION FOR UWM                                      Page 111


 4369                     PAGE
 4370             
 4371             /RETURN FILE WINDOW INDEX
 4372             /CALL   TAD POINTER TO FILE CONTROL
 4373             /       JMS FILIX
 4374             /       SEGMENT ADDRESS NOT IN WINDOW
 4375             /       NON-EXISTENT FILE ADDRESS
 4376             /       OK RETURN WITH ADDRESS OF SEGMENT POINTER
 4377             
 4378                     IFNZRO FILDA-4  <GLITCH; *.-1>
 4379       0034  FILIDA= C0004   /FILDA
 4380             
 4381 35200 0000  FILIX,  0
 4382 35201 3274          DCA FILICN      /SAVE POINTER TO FILE CONTROL
 4383 35202 1274          TAD FILICN
 4384 35203 1034          TAD FILIDA      /4
 4385 35204 6211          DATFLD
 4386 35205 3365          DCA FILSP2      /POINTS TO FILE EXTENSION IN CONTROL BLOCK
 4387 35206 1765          TAD I FILSP2    /FILE EXTENSION
 4388 35207 0142          AND SEGSM1      /# WORDS/SEGMENT -1
 4389 35210 3364          DCA FILSP1      /HIGH ORDER COMPONENT OF SEG #
 4390 35211 2365          ISZ FILSP2      /POINTS TO LOW ORDER ADD
 4391 35212 1765          TAD I FILSP2    /LOW ORDER ADDRESS
 4392 35213 0134          AND SEGLMK      /GET RID OF ADDRESS IN SEGMENT
 4393 35214 7104          CLL RAL
 4394 35215 1364          TAD FILSP1      /HIGH ORDER PART
 4395 35216 7006          RTL             /"DIVIDE" BY 400 SEG SIZE
 4396 35217 7006          RTL
 4397 35220 7061          CMA CML IAC     / (THIS IS A 13-BIT NEGATE)
 4398 35221 3273          DCA FILISN      / = - (SEG # - 1)
 4399 35222 1674          TAD I FILICN    /POINT TO WINDOW
 4400 35223 3367          DCA FILICA
 4401 35224 2274          ISZ FILICN      /GET TO SEGMENT # INDEX IN WINDOW
 4402 35225 1767          TAD I FILICA    /GET WORD 1 OF WINDOW
 4403 35226 0035          AND C0007
 4404 35227 7440          SZA             /IS THIS A VALID WINDOW?
 4405 35230 5247          JMP FILIX4      /MAYBE NOT, BUT IT COULD BE THE BASIC WINDOW
 4406 35231 1674          TAD I FILICN    /YES - SEE IF OUR SEGMENT IS IN IT
 4407 35232 1273          TAD FILISN
 4408 35233 7460          SZA SNL         /FILSCT-SN>0?
 4409 35234 5244          JMP FILIX2      /YES. SEGMENT POINTER NOT IN CORE
 4410 35235 1137          TAD C0006
 4411 35236 7420          SNL             /FILSCT+6 - SN < 0?
 4412 35237 5260          JMP FILIX5
 4413 35240 7200          CLA             /YES. SEGMENT POINTER NOT IN CORE
 4414 35241 1767          TAD I FILICA    /ANY MORE SEGMENTS?
 4415 35242 7650          SNA CLA
 4416 35243 2200  FILIX1, ISZ FILIX       /NO. NON-EXISTENT FILE ADDRESS
 4417 35244 7200  FILIX2, CLA
 4418 35245 6201  FILIX3, CDF
 4419 35246 5600          JMP I FILIX     /RETURN
 4420 35247 0137  FILIX4, AND C0006       /IS IT BASIC OR INVALID WINDOW
 4421 35250 7650          SNA CLA         /IS THIS THE BASIC WINDOW? (1ST WORD=7777)
 4422 35251 5245          JMP FILIX3      /NO - INVALID WINDOW
 4423 35252 1273          TAD FILISN      /GET 13-BIT NEGATIVE SEGMENT NUMBER
 4424 35253 1135          TAD BASWIN
 4425 35254 7470          SNA SZL         /ARE WE IN THE BASIC WINDOW?

      /TSS/8 CONFIGURATION FOR UWM                                      Page 112


 4426 35255 5243          JMP FILIX1      /NO - TAKE 'NONEXISTENT ADDRESS' EXIT
 4427 35256 7041          CIA             /AC = SEGMENT POINTER
 4428 35257 5263          JMP FILIX6
 4429             
 4430 35260 7041  FILIX5, CIA
 4431 35261 1035          TAD C0007       /WINDOW INDEX
 4432 35262 1367          TAD FILICA      /START OF WINDOW
 4433 35263 3274  FILIX6, DCA FILICN      /POINTS TO SEGMENT #
 4434 35264 2200          ISZ FILIX       /SEGMENT ADDRESS IN CORE - EXIT
 4435 35265 1674          TAD I FILICN    /GET SEGMENT # FOR THIS FILE ADDRESS
 4436 35266 7650          SNA CLA
 4437 35267 5245          JMP FILIX3      /ZERO SEGMENT NUMBER IS NOT A SEGMENT!
 4438 35270 1274          TAD FILICN      /EXIT WITH POINTER TO THIS SEGMENT IN AC.
 4439 35271 2200          ISZ FILIX
 4440 35272 5245          JMP FILIX3
 4441             
 4442 35273 0000  FILISN, 0
 4443 35274 0000  FILICN, 0

      /TSS/8 CONFIGURATION FOR UWM                                      Page 113


 4444             /RETURN USER RUN TIME
 4445             /USER CALLS WITH ADDRESS OF THREE WORD BLOCK
 4446             /WORD 1 CONTAINS THE JOB #
 4447             /THE HI AND LO ORDER RUN TIMES ARE RETURNED IN WORDS 2 AND 3
 4448             
 4449 35275 4150  UURT,   UDF             /USER FIELD
 4450 35276 1506          TAD I L2SA      /JOB #
 4451 35277 7450          SNA             /THIS JOB?
 4452 35300 1160          TAD JOB         /YES
 4453 35301 0036          AND C0037
 4454 35302 1044          TAD JOBTBA
 4455 35303 3364          DCA UCOP0       /SAVE POINTER TO JOB STATUS
 4456 35304 1364          TAD UCOP0
 4457 35305 4500          GETJTI          /HI ORDER RUNTIME
 4458 35306 0017           JOBRTH
 4459 35307 3365          DCA UCOP1
 4460 35310 1364          TAD UCOP0
 4461 35311 4500          GETJTI          /LOW ORDER 
 4462 35312 0016           JOBRTM
 4463 35313 3366          DCA UCOP2
 4464 35314 5351          JMP UCOPYS      /COPY IN USER AREA
 4465             
 4466             
 4467             /RETURN THE TIME OF DAY IN TICS SINCE MIDNITE
 4468             /USER CALLS WITH ADDRESS OF TWO WORD BLOCK IN AC
 4469             /HI AND LOW ORDER PARTS RETURNED IN WORDS 1 AND 2
 4470             
 4471 35315 1051  UTOD,   TAD CLK1        /-TIME TILL MIDNITE
 4472 35316 7100          CLL
 4473 35317 1327          TAD INKLK1      /TIME AT MIDNITE
 4474 35320 3366          DCA UCOP2       /LOW ORDER TIME NOW
 4475 35321 7430          SZL
 4476 35322 7001          IAC
 4477 35323 1050          TAD CLK2        /-TIME TILL MIDNITE
 4478 35324 1330          TAD INKLK2      /TIME AT MIDNITE
 4479 35325 3365          DCA UCOP1       /TIME NOW (HI ORDER)
 4480 35326 5353          JMP UCOPY2      /COPY IN USER AREA
 4481             
 4482 35327 7000  INKLK1, INCLK1
 4483 35330 0645  INKLK2, INCLK2
 4484             
 4485             /RETURN THE NUMBER OF FREE DISC SEGMENTS. 'NFSEGS' IS
 4486             /SET BY 'FIP' EACH TIME IT EXITS.
 4487             
 4488 35331 1333  USEGS,  TAD NFSEGS      /PASS IT BACK IN HIS AC
 4489 35332 5362          JMP UCOPYA
 4490             
 4491 35333 7777  NFSEGS, 7777    / (OVERLAYED BY 'FIP')

      /TSS/8 CONFIGURATION FOR UWM                                      Page 114


 4492             /RETURN THE USER'S STATUS REGISTERS
 4493             /CALLED WITH ADDRESS OF THREE WORD BLOCK IN AC
 4494             
 4495 35334 4477  UCKS,   GETJTW
 4496 35335 0000           JOBSTS
 4497 35336 3364          DCA UCOP0       /STATUS 0
 4498 35337 6211          DATFLD
 4499 35340 2005          ISZ JOBSWA
 4500 35341 1405          TAD I JOBSWA    /STATUS 1
 4501 35342 3365          DCA UCOP1
 4502 35343 2005          ISZ JOBSWA
 4503 35344 1405          TAD I JOBSWA
 4504 35345 3366          DCA UCOP2       /STATUS 2
 4505 35346 4150          UDF             /SELECT USER FIELD
 4506 35347 1364          TAD UCOP0
 4507 35350 3506          DCA I L2SA
 4508 35351 2106  UCOPYS, ISZ L2SA        /BUMP POINTER
 4509 35352 7000          NOP
 4510 35353 4150  UCOPY2, UDF             /FOR LATER ENTRIES
 4511 35354 1365          TAD UCOP1       /SECOND WORD
 4512 35355 3506          DCA I L2SA
 4513 35356 2106          ISZ L2SA
 4514 35357 7000          NOP
 4515 35360 1366          TAD UCOP2       /THIRD WORD
 4516 35361 3506          DCA I L2SA
 4517             
 4518 35362 3106  UCOPYA, DCA L2SA        /CLEAR USER AC
 4519 35363 5461          UUOEXT
 4520             
 4521             DEVJO0,
 4522             UCOP0,
 4523 35364 0000  FILSP1, 0
 4524             UCOP1,
 4525 35365 0000  FILSP2, 0
 4526 35366 0000  UCOP2,  0

      /TSS/8 CONFIGURATION FOR UWM                                      Page 115


 4527             /ROUTINE TO EXTRACT JOB NUMBER FROM DDB
 4528             /CALL
 4529             /       TAD (DDB ADDRESS)
 4530             /       JMS DEVJOB
 4531             /       RETURN WITH JOB # IN AC
 4532             
 4533             FILICA,
 4534 35367 0000  DEVJOB, 0
 4535 35370 7001          IAC
 4536 35371 3364          DCA DEVJO0      /POINTS TO WORD 1 OF DDB
 4537 35372 6211          DATFLD
 4538 35373 1764          TAD I DEVJO0    /GET WORD 1
 4539 35374 0036          AND C0037       /IGNORE JUNK
 4540 35375 6201          CDF
 4541 35376 5767          JMP I DEVJOB    /RETURN

      /TSS/8 CONFIGURATION FOR UWM                                      Page 116


 4542                     PAGE
 4543             
 4544             /WE ENTER THIS ROUTINE AT LEVEL 2
 4545             /AFTER COMPLETING A DISC TRANSFER
 4546             /IF A FILE TRANSFER IS INVOLVED, WE CONTINUE
 4547             /WITH IT
 4548             /IF OVERLAY, WE GO TO OVERLAY CONTROL
 4549             
 4550       0003  DSURT1= WS0
 4551       0004  DSURT2= WS1
 4552             
 4553                     IFNZRO FILDA-4  <GLITCH; *.-1>
 4554       0034  DSURDA= C0004   /FILDA
 4555                     IFNZRO FILPDA-5 <GLITCH; *.-1>
 4556       0034  DSUPDA= C0004   /FILPDA-1
 4557                     IFNZRO FIX-100  <GLITCH; *.-1>
 4558       0037  DSFIX=  C0100   /FIX (I/O COMPLETION)
 4559 35400 4327  DSUMTB, -DSUTBL
 4560 35401 6634  DGETJX, GETJFX
 4561             
 4562 35402 7017  DSKCT,  DSKCON
 4563 35403 0000  DSKCOD, 0
 4564       0003  DSUET1= WS0
 4565             
 4566 35404 7742  DSURPA, DSPARM
 4567 35405 4213  DSUFEA, FILERR
 4568             
 4569 35406 7001  DSURET, IAC             /ERROR IN DISC TRANSFER
 4570 35407 3203          DCA DSKCOD      /SAVE ERROR CODE
 4571 35410 1017          TAD DSKPTR      /POINTS TO REQUEST CURRENTLY RUNNING
 4572 35411 1200          TAD DSUMTB      /FIND RELATIVE INDEX IN TABLE
 4573 35412 7112          CLL RTR         /DIVIDE BY FOUR
 4574 35413 0035          AND C0007       /SAVE FIELD
 4575 35414 1162          TAD CORTBA      /INDEX INTO CORTBL
 4576 35415 3351          DCA DSUCOR
 4577 35416 1751          TAD I DSUCOR    /GET CORTBL ENTRY
 4578 35417 0036          AND C0037       /EXTRACT JOB #
 4579 35420 1044          TAD JOBTBA      /POINTS TO JOBTBL
 4580 35421 3353          DCA DSUJTE      /SAVE JOBTBL ADDRESS
 4581 35422 1353          TAD DSUJTE
 4582 35423 4574          GETJTA          /GET ADDRESS OF STR0
 4583 35424 0000           JOBSTS
 4584 35425 3352          DCA DSUJST      /SAVE IT
 4585 35426 1203          TAD DSKCOD      /IS THERE AN ERROR
 4586 35427 7440          SZA
 4587 35430 5310          JMP DSURER      /YES JMP OUT OF THE ROUTINE AS QUICKLY AS POSSIBLE
 4588 35431 4354          JMS DSUPAR      /PARAMETER BLOCK ADDRESS
 4589 35432 1034          TAD DSURDA
 4590 35433 3003          DCA DSURT1      /POINTS TO WORD 5 OF PARAMETERS
 4591 35434 1604          TAD I DSURPA    /ADDRESS OF PARAMETERS
 4592 35435 7001          IAC
 4593 35436 3004          DCA DSURT2      /POINTS TO DISC EXTENSION IN PARAMETERS
 4594 35437 6211          DATFLD
 4595 35440 1403          TAD I DSURT1    /DISC EXTENSION FROM CONTROL...
 4596 35441 3404          DCA I DSURT2    /       ...TO PARAMETERS
 4597 35442 1004          TAD DSURT2
 4598 35443 1034          TAD DSUPDA

      /TSS/8 CONFIGURATION FOR UWM                                      Page 117


 4599 35444 3004          DCA DSURT2      /POINTS TO DISC ADDRESS IN PARAMETERS
 4600 35445 2003          ISZ DSURT1      /POINTS TO DISC ADDRESS IN FILE CONTROL
 4601 35446 1403          TAD I DSURT1    /DISC ADDRESS FROM CONTROL...
 4602 35447 3404          DCA I DSURT2    /       ...TO PARAMETERS
 4603 35450 2003          ISZ DSURT1      /POINTS TO WORD COUNT IN FILE CONTROL
 4604 35451 7144          CLL CMA RAL
 4605 35452 1004          TAD DSURT2
 4606 35453 3004          DCA DSURT2      /POINTS TO WORD COUNT IN PARAMETERS
 4607 35454 1404          TAD I DSURT2    /SAVE TEMPORARILY -WC FROM PARAMETERS
 4608 35455 7041          CIA
 4609 35456 3203          DCA DSKCOD
 4610 35457 1403          TAD I DSURT1    /MOVE WC FROM FILE CONTROL...
 4611 35460 3404          DCA I DSURT2    /       ...TO PARAMETERS
 4612 35461 2004          ISZ DSURT2      /POINTS TO CORE ADD IN PARAM.
 4613 35462 1203          TAD DSKCOD      /UPDATE CORE ADD BY COUNT TRANSFERRED
 4614 35463 1404          TAD I DSURT2
 4615 35464 3404          DCA I DSURT2    /SAVE NEW ADD
 4616 35465 1403          TAD I DSURT1    /GET WORD COUNT FROM CONTROL
 4617 35466 6201          CDF
 4618 35467 7650          SNA CLA         /ARE WE DONE?
 4619 35470 5310          JMP DSURER      /YES
 4620             
 4621             /MOVE SEGMENT WINDOW
 4622 35471 1353          TAD DSUJTE      /SET JOBLNK
 4623 35472 4574          GETJTA
 4624 35473 0007           JOBLNK
 4625 35474 3203          DCA DSKCOD      /SAVE POINTER TO JOBLNK
 4626 35475 1604          TAD I DSURPA    /GET ADDRESS OF PARAMETER BLOCK
 4627 35476 6211          DATFLD
 4628 35477 3603          DCA I DSKCOD    /AND SAVE IN JOBLNK
 4629 35500 6201          CDF
 4630 35501 3604          DCA I DSURPA    /CLEAR DSPARM
 4631 35502 1751          TAD I DSUCOR    /GET CORTBL ENTRY FOR TRANSFERRING FIELD
 4632 35503 3750          DCA I RDFJBA    / & SET IT FOR 'READFI'
 4633 35504 1307          TAD .+3
 4634 35505 3067          DCA EXITA       /FUDGE EXIT SO WE GO THRU READFI
 4635 35506 5324          JMP DSURE1      /AND AWAY.
 4636 35507 3601          DSUEXT
 4637 35510 3203  DSURER, DCA DSKCOD      /SAVE ERROR STATUS
 4638 35511 1604          TAD I DSURPA    /GET ADDRESS OF PARAMETER BLOCK
 4639 35512 3315          DCA .+3         /FOR CALL TO FILERR
 4640 35513 1203          TAD DSKCOD      /ERROR CODE
 4641 35514 4605          JMS I DSUFEA    /HANDLE ERROR
 4642 35515 0000          0
 4643 35516 1051          TAD CLK1        /SET DISC COMPLETION BIT 7/8-TH OF
 4644 35517 0035          AND C0007       /  THE TIME
 4645 35520 7640          SZA CLA
 4646 35521 1037          TAD DSFIX       /YES
 4647 35522 1751          TAD I DSUCOR    /NO
 4648 35523 3751          DCA I DSUCOR
 4649 35524 2352  DSURE1, ISZ DSUJST      /SET INACTIVE FLAG IN STR1
 4650 35525 1017          TAD DSKPTR      /FIGURE OUT WHICH INTERNAL FILE #
 4651 35526 1200          TAD DSUMTB
 4652 35527 4601          JMS I DGETJX
 4653 35530 6211          DATFLD
 4654 35531 1752          TAD I DSUJST    /NOW SET FILE READY & DUMMY WAIT BIT
 4655 35532 0146          AND C7776

      /TSS/8 CONFIGURATION FOR UWM                                      Page 118


 4656 35533 7001          IAC
 4657 35534 3752          DCA I DSUJST    /SAVE STR1
 4658 35535 1017  DSURE4, TAD DSKPTR
 4659 35536 3003          DCA DSUET1      /SET QUEUE POINTER
 4660 35537 6211          DATFLD
 4661 35540 3403          DCA I DSUET1    /CLEAR THE 'DSUTBL' ENTRY
 4662 35541 6201          CDF
 4663 35542 1604          TAD I DSURPA    /GET THE PARAMETER BLOCK ADDRESS
 4664 35543 7440          SZA
 4665 35544 4576          RETBLK          / AND RETURN IT
 4666 35545 7200          CLA
 4667 35546 4602          JMS I DSKCT     /THEN DECREMENT 'DSBUSY'
 4668 35547 5467          EXIT            / AND EXIT
 4669             
 4670 35550 3623  RDFJBA, RDFJOB

      /TSS/8 CONFIGURATION FOR UWM                                      Page 119


 4671 35551 0000  DSUCOR, 0       /POINTER TO CORE TABLE ENTRY
 4672 35552 0000  DSUJST, 0       /POINTER TO JOB STATUS
 4673 35553 0000  DSUJTE, 0       /JOB TABLE ENTRY
 4674             
 4675 35554 0000  DSUPAR, 0       /GET PARAMETER BLOCK ADDRESS
 4676 35555 1604          TAD I DSURPA    /GET ADDRESS
 4677 35556 1035          TAD C0007       /GET POINTER TO LAST WORD IN BLOCK
 4678 35557 3003          DCA DSUET1
 4679 35560 6211          DATFLD
 4680 35561 1403          TAD I DSUET1    /GET ADDRESS OF FILE CONTROL
 4681 35562 6201          CDF
 4682 35563 5754          JMP I DSUPAR    /EXIT
 4683             
 4684 35564 4354  OVERL1, JMS DSUPAR      /GET ADDRESS OF FILE CONTROL
 4685 35565 7440          SZA
 4686 35566 5373          JMP OVE2
 4687 35567 1442          TAD I FANCOR
 4688 35570 1037          TAD C0100       /DISC I/O FINISHED BIT
 4689 35571 3442          DCA I FANCOR
 4690 35572 1066          TAD RSCHEA
 4691 35573 3413  OVE2,   DCA I L2Q
 4692 35574 5335          JMP DSURE4
 4693             
 4694             /ROUTINE TO HANDLE THE 'CON' IOT - WE RETURN THE
 4695             /KEYBOARD NUMBER OF THE SPECIFIED JOB.
 4696 35575 1106  UCON,   TAD L2SA        /GET THE JOB NUMBER
 4697 35576 7450          SNA             /ANYTHING PASSED?
 4698 35577 1160          TAD JOB         /NO - GET HIS OWN JOB #
 4699 35600 0036          AND C0037
 4700 35601 1207          TAD TTYTBB
 4701 35602 3003          DCA WS0         /SET THE 'TTYTBL' ENTRY POINTER
 4702 35603 6211          DATFLD
 4703 35604 1403          TAD I WS0       /GET THE UNIT #
 4704 35605 3106          DCA L2SA        / AND RETURN IT IN HIS AC
 4705 35606 5461          UUOEXT
 4706             
 4707 35607 3330  TTYTBB, TTYTBL

      /TSS/8 CONFIGURATION FOR UWM                                      Page 120


 4708             /ROUTINE TO RECOGNIZE AND REPLY TO ^C
 4709             /CALLED ONLY FROM 'GIR':
 4710             /       JMS GIRCT0
 4711             /       UNABLE TO ECHO "^C" FOR SI
 4712             /       'SI' ECHOING HANDLED PARTIALLY - "C" IN TTCHAR
 4713             /       PROGRAM RESTART HANDLED
 4714             
 4715 35610 0000  GIRCT0, 0
 4716 35611 1666          TAD I GIRINA    /ADD OF INPUT DDB
 4717 35612 6211          DATFLD
 4718 35613 4663          JMS I GIRFB     /IS IT IN 'SI' MODE?
 4719 35614 5250          JMP GIRCT1      /YES - JUST ECHO "^C"
 4720 35615 6201          CDF
 4721 35616 1666          TAD I GIRINA
 4722 35617 4667          JMS I GIRJBA    /NO - GET USER'S JOB #
 4723 35620 6212          CIF 10
 4724 35621 4671          JMS I GIRTAP    / AND STOP ANY DECTAPES
 4725 35622 1044          TAD JOBTBA      /WE GET HIS JOB # BACK AGAIN
 4726 35623 4500          GETJTI          /PICK UP HIS STR0
 4727 35624 0000           JOBSTS
 4728 35625 7004          RAL             /CLEAR RUN BIT
 4729 35626 7130          CLL CML RAR     / & FORCE IT BACK ON
 4730 35627 6211          DATFLD
 4731 35630 3405          DCA I JOBSWA
 4732 35631 2005          ISZ JOBSWA      /POINTS TO STR1
 4733 35632 1405          TAD I JOBSWA
 4734 35633 0264          AND GIRFC1      /CLEAR HIS COMPLETION BITS & JSWAIT
 4735 35634 3405          DCA I JOBSWA
 4736 35635 7326          CLA CLL CML RTL /AC = 2
 4737 35636 1005          TAD JOBSWA
 4738 35637 3004          DCA WS1         /POINTS TO WAIT-MASK 1
 4739 35640 1404          TAD I WS1
 4740 35641 0265          AND GIRFC2      /CLEAR ALL NON-CRITICAL WAIT-BITS
 4741 35642 7450          SNA             /IS HE STILL WAITING FOR SOMETHING?
 4742 35643 2405          ISZ I JOBSWA    /NO - INDICATE NO WAIT IN STR1
 4743 35644 7001          IAC
 4744 35645 3404          DCA I WS1
 4745 35646 2210          ISZ GIRCT0      /INDICATE THIS WAS A PROGRAMMATIC RESTART
 4746 35647 5260          JMP GIRCT2
 4747             
 4748             /THE USER TYPED ^C WHILE HE WAS IN 'SI' MODE - JUST ECHO
 4749             /"^C" & LET 'SI' FIND THE DDB STATUS-BIT.
 4750 35650 1272  GIRCT1, TAD GIRUPB
 4751 35651 3031          DCA TTCHAR
 4752 35652 6201          CDF
 4753 35653 1670          TAD I GIROTA
 4754 35654 4575          STORE           /OUTPUT THE "^"
 4755 35655 5610          JMP I GIRCT0    /NO ROOM - TAKE ERROR EXIT
 4756 35656 1262          TAD GIRC
 4757 35657 3031          DCA TTCHAR      /NOW PASS A "C" BACK TO MAIN 'GIR' TO OUTPUT
 4758 35660 2210  GIRCT2, ISZ GIRCT0      /INCREMENT RETURN TO INDICATE ALL WENT WELL
 4759 35661 5610          JMP I GIRCT0    / & RETURN
 4760             
 4761 35662 0303  GIRC,   "C
 4762 35663 1362  GIRFB,  CONCB
 4763 35664 7656  GIRFC1, -JSDEL-JSTEL-JSWAIT-1
 4764 35665 3642  GIRFC2, -JSTIME-JSDEL-JSTEL-JSPTR-JSPTP-JSWAIT-1

      /TSS/8 CONFIGURATION FOR UWM                                      Page 121


 4765 35666 6012  GIRINA, GIRDBA
 4766 35667 5367  GIRJBA, DEVJOB
 4767 35670 6007  GIROTA, GIRDTA
 4768 35671 2401  GIRTAP, CNTRLC  /DECTAPE-STOP ROUTINE IN FIELD 1
 4769 35672 0336  GIRUPB, "^

      /TSS/8 CONFIGURATION FOR UWM                                      Page 122


 4770             /ROUTINE TO SET UP SWAP
 4771             /CORTBL POINTER TO FIELD TO BE SWAPPED OUT IN WS0
 4772             /FINISH= +FIELD # FOR SWAP IN ;FINISH= -FIELD# FOR SWAP OUT
 4773             /FIT=JOBTO BE SWAPPED IN OR PHANTOM TO BE BROUGHT IN
 4774             /FORCE=FIELD TO BE SWAPPED OUT
 4775             /ENTER AT SWAP FOR SWAP IN
 4776             /ENTER AT SWPOUT FOR SWAP OUT
 4777             
 4778             
 4779 35673 1003  SWPOUT, TAD WS0         /OR SWAP BIT INTO CORTBL
 4780 35674 4460          IOR
 4781 35675 4000           FSWP
 4782 35676 1403          TAD I WS0       /JOBS ARE THE ONLY ONCE TO BE SWAPPED OUT
 4783 35677 4326          JMS TRAC        /GET THE TRAC # FOR THIS JOB
 4784 35700 3154          DCA OUTTRC      /SAVE IT
 4785 35701 1054  SWAP,   TAD FINISH      /FINISH HAS FIELD # FOR SWAP ACTIVITY + OR -
 4786 35702 7510          SPA
 4787 35703 7041          CIA             /GET THE ABSOLUTE VALUE
 4788 35704 7106          CLL RTL
 4789 35705 7004          RAL             /IN POSITION 00X0
 4790 35706 3053          DCA SQREQ       /SAVE IT FOR SETTING UP DISC  IO
 4791 35707 1055          TAD FIT
 4792 35710 0144          AND C0600
 4793 35711 7450          SNA             /IS IT A PHANTOM WE NEED?
 4794 35712 5323          JMP SWAP1       /NO - JOB IS TO BROUGHT IN
 4795 35713 0156          AND C0400       /IS FIP NEEDED?
 4796 35714 7640          SZA CLA
 4797                     IFZERO RF08-40 <TAD C0100>      /YES, DF32 NEEDS TRAC IN POSITION 0X00
 4798 35715 7001          IFZERO RF08 <IAC >      /YES, RF08 NEEDS TRAC IN POSITION 000X
 4799 35716 3153  SWAP3,  DCA INTRC
 4800 35717 2165          ISZ DSBUSY      /IS ANY DISC ACTIVITY GOING ON?
 4801 35720 5465          SCHED           /YES, SO FIND A RESIDENT JOB
 4802 35721 4557          JMS I SWPIOA    /NO, START THE SWAP IO
 4803 35722 5465          SCHED           /FIND A RESIDENT JOB IN THE MEANWHILE
 4804 35723 1055  SWAP1,  TAD FIT         /GET THE JOB # TO BE SWAPPED IN
 4805 35724 4326          JMS TRAC        /GET ITS TRAC #
 4806 35725 5316          JMP SWAP3
 4807             
 4808             /SUBROUTINE TO BUILD THE DISC CONTROL-WORD TO TRANSFER
 4809             /THE SWAP AREA FOR THE JOB WHOSE NUMBER IS IN THE AC.
 4810 35726 0000  TRAC,   0
 4811 35727 0036          AND C0037       /JUST GET THE JOB #
 4812 35730 7450          SNA             /IS IT REASONABLE?
 4813 35731 4525          REBOOT          /NO - ERROR *****
 4814 35732 1334          TAD SWBASE      /YES - GET TRAC # WHERE SWAP AREA BEGINS - 1
 4815             
 4816                     IFZERO RF08-40 <
 4817                     CLL RTL; RTL; RTL       /TRAC # IN POSITION 0X00 FOR DF32
 4818                     >
 4819 35733 5726          JMP I TRAC      /RETURN
 4820             
 4821 35734 0004  SWBASE, SWDEX-1         /SWAP TRACK OF JOB 1

      /TSS/8 CONFIGURATION FOR UWM                                      Page 123


 4822             /IF WE CAN'T FINISH AN IOT FOR LACK OF SYSTEM FACILITIES,
 4823             /WE BACK UP THE USER'S PC TO POINT TO THE SAME IOT AND
 4824             /HOPE THAT THINGS WILL LOOSEN UP SHORTLY.
 4825             
 4826 35735 7340  REDO0,  CLA CLL CMA
 4827 35736 1104          TAD L2SV0       /BACK UP HIS PC
 4828 35737 3104          DCA L2SV0
 4829 35740 5577          WAIT            / AND RESCHEDULE
 4830             
 4831             /ROUTINE TO TURN USER ON IF READER IS OUT OF TAPE
 4832             /ENTERED ON L2QUE BY SCHED IF READER TIMER COUNTS
 4833             /DOWN BEFORE A BUFFERFUL OF CHARACTERS IS READ
 4834 35741 5354  PTRHNG, JMP PTPHNG      /PUNCH IS HUNG
 4835 35742 6211          DATFLD
 4836 35743 1753          TAD I PTRDV2    /GET ADDRESS OF DDB WORD 0
 4837 35744 7450          SNA             /IS IT STILL THERE?
 4838 35745 5350          JMP .+3         /NO - SKIP THE FLAG
 4839 35746 4460          IOR             /YES - OR IN END-OF-TAPE
 4840 35747 1000           PTRTAP
 4841 35750 6201          CDF
 4842 35751 5752          JMP I .+1       /NOW RUN REST OF LEVEL 2 SERVICE
 4843 35752 1163          PTRL2
 4844             
 4845 35753 3240  PTRDV2, DEVTBE          /POINTER TO READER DEVTBL ENTRY
 4846       1000  PTRTAP= 1000            /BIT 2 OF WORD 0
 4847             
 4848 35754 6211  PTPHNG, DATFLD          /PUNCH FLAG HASN'T COME UP
 4849 35755 1763          TAD I PTPDV2
 4850 35756 4764          JMS I PTJOB     /GET JOB # FROM DDB
 4851 35757 4463          ERROR
 4852 35760 0006           HUNGDV
 4853 35761 5762          JMP I .+1
 4854 35762 5163          RLPTL           /RUN THE REST OF LEVEL 2 SERVICE
 4855             
 4856 35763 3241  PTPDV2, DEVTBE+1
 4857 35764 5367  PTJOB,  DEVJOB

      /TSS/8 CONFIGURATION FOR UWM                                      Page 124


 4858                     IFNZRO INTCOM-.&4000    <GLITCH; *.-1>
 4859       5770          *INTCOM
 4860 35770 6661  INTCOM, LSF             /CHECK FOR UNREQUESTED FLAGS
 4861 35771 5374          JMP .+3         / AND CLEAR THEM
 4862 35772 6662          LCF
 4863 35773 5501          DISMIS
 4864 35774 6021          PSF
 4865 35775 5501          DISMIS          /UNDEFINED INTERRUPT - IGNORE IT (MIGHT BE KL8E BUG) *****
 4866 35776 6022          PCF
 4867 35777 5501          DISMIS

      /TSS/8 CONFIGURATION FOR UWM                                      Page 125


 4868                     PAGE
 4869             /GENERAL INPUT ROUTINE
 4870             /CALL   UNIT # IN SOURCE, CHAR IN TTCHAR
 4871             /       GIR
 4872             /        DEVTBL ADDRESS
 4873             /       BUFFER OVERFLOW RETURN. CHAR NOT DISTRIBUTED
 4874             /       NORMAL RETURN
 4875             
 4876 36000 0204  SIBRK,  SIBRKM          /THIS MUST BE FIRST WORD ON PAGE; TAD SIBRK=1200
 4877             /SWBDA, SWKBD           /WE USE TAD SIBRK TO SAVE SPACE
 4878 36001 7575  MCC,    -203    /- ^C
 4879 36002 0336  GIRUPA, "^
 4880 36003 0302  GIRB,   "B
 4881 36004 6707  GIRCLB, CLRBUF
 4882 36005 7657  GIRCLF, -JSTEL-JSDEL-1
 4883 36006 5610  GIRCTL, GIRCT0
 4884 36007 0000  GIRDTA, 0
 4885 36010 1362  GIRFA,  CONCB
 4886 36011 5367  GIRJOB, DEVJOB
 4887                     IFNZRO GIR00-1-GIRDBA   <GLITCH; *.-1>
 4888 36012 0000  GIRDBA, 0       /MUST PRECEDE 'GIR00' (SET BY 'SI')
 4889             
 4890 36013 0000  GIR00,  0
 4891 36014 1613          TAD I GIR00
 4892 36015 3212          DCA GIRDBA      /DEVTBL POINTER TO INPUT DDB
 4893 36016 2213          ISZ GIR00
 4894 36017 6214          RDF             /SET UP RETURN TO CALLER
 4895 36020 1145          TAD C6203
 4896 36021 3352          DCA GIRFUL
 4897 36022 1212          TAD GIRDBA      /INPUT OR OUTPUT DDB?
 4898 36023 7110          CLL RAR
 4899 36024 7620          SNL CLA
 4900 36025 7001          IAC             /INPUT
 4901 36026 1212          TAD GIRDBA      /OUTPUT
 4902 36027 3207          DCA GIRDTA      / = POINTER TO OUTPUT DDB
 4903 36030 6211          DATFLD
 4904 36031 1612          TAD I GIRDBA
 4905 36032 3212          DCA GIRDBA      / = ADDRESS OF INPUT DDB
 4906 36033 1112          TAD SOURCE
 4907 36034 0037          AND C0100
 4908 36035 7640          SZA CLA         /IS THIS THE USER TYPING?
 4909 36036 5354          JMP GIR9        /NO - IT'S A PROGRAM OR SI - IGNORE CTRL CHARS
 4910 36037 1031          TAD TTCHAR
 4911 36040 1201          TAD MCC
 4912 36041 7450          SNA             /YES - IS IT A CTRL/C?
 4913 36042 5255          JMP GIR1        /YES - SET FLAG & CLEAR BUFFERS
 4914 36043 7001          IAC
 4915 36044 7640          SZA CLA         /NO - IS IT A CTRL/B?
 4916 36045 5354          JMP GIR9        /NO - JUST HANDLE NORMALLY
 4917 36046 1212          TAD GIRDBA      /DDB ADDRESS
 4918 36047 4610          JMS I GIRFA     /IN SI ALREADY?
 4919 36050 5260          JMP GIR2        /YES - CLEAR OUTPUT BUFFER
 4920 36051 1212          TAD GIRDBA
 4921 36052 4460          IOR             /NO - SET KEYBOARD IN 'SI' MODE
 4922 36053 1000           DSI
 4923 36054 5263          JMP GIR3        /THEN GO CLEAR THE INPUT BUFFER
 4924 36055 1212  GIR1,   TAD GIRDBA

      /TSS/8 CONFIGURATION FOR UWM                                      Page 126


 4925 36056 4460          IOR             /INDICATE 'CTRL/C' IN DDB
 4926 36057 0040           CTRLC
 4927 36060 1607  GIR2,   TAD I GIRDTA
 4928 36061 7440          SZA             /IS THERE AN OUTPUT DDB?
 4929 36062 4604          JMS I GIRCLB    /YES - CLEAR IT
 4930 36063 6211  GIR3,   DATFLD
 4931 36064 1612          TAD I GIRDBA
 4932 36065 0340          AND GIRSIC
 4933 36066 7640          SZA CLA         /IS 'SICOM' SET?
 4934 36067 5272          JMP GIR4        /YES - WE CAN'T MESS UP SI BY CLEARING INPUT
 4935 36070 1212          TAD GIRDBA
 4936 36071 4604          JMS I GIRCLB    /NO - CLEAR INPUT BUFFER
 4937 36072 1212  GIR4,   TAD GIRDBA
 4938 36073 4611          JMS I GIRJOB    /GET JOB # TYPING 
 4939 36074 7450          SNA             /IS HE LOGGED IN?
 4940 36075 5304          JMP GIR5        /NO
 4941 36076 1044          TAD JOBTBA
 4942 36077 4500          GETJTI          /YES - GET HIS STR1
 4943 36100 0001           JOBSTS+1
 4944 36101 0205          AND GIRCLF      / & CLEAR JSDEL AND JSTEL
 4945 36102 6211          DATFLD
 4946 36103 3405          DCA I JOBSWA
 4947 36104 6211  GIR5,   DATFLD
 4948 36105 1607          TAD I GIRDTA
 4949 36106 6201          CDF
 4950 36107 7440          SZA             /DOES HE ALREADY HAVE AN OUTPUT DDB?
 4951 36110 5315          JMP GIR6        /YES
 4952 36111 1207          TAD GIRDTA
 4953 36112 4572          GETDDB          /NO - GET ONE FOR ECHOING
 4954 36113 5352          JMP GIRFUL      /NONE AVAILABLE - TAKE ERROR EXIT
 4955 36114 5304          JMP GIR5        / (SAVE TWO INSTR. THIS WAY)
 4956 36115 3207  GIR6,   DCA GIRDTA      / = ADDRESS OF OUTPUT DDB
 4957 36116 1031          TAD TTCHAR
 4958 36117 1201          TAD MCC
 4959 36120 7450          SNA             /IS OUR CHARACTER A CTRL/C?
 4960 36121 5372          JMP GIRCTC      /YES - GO HANDLE IT
 4961 36122 7001          IAC
 4962 36123 7650          SNA CLA         /NO - IS IT A CTRL/B?
 4963 36124 5362          JMP GIRCTB      /YES - JUST TYPE "^B"
 4964 36125 1212          TAD GIRDBA
 4965 36126 4575          STORE           /NO - JUST PUSH IT INTO THE INPUT BUFFER
 4966 36127 5352          JMP GIRFUL      /WON'T FIT
 4967             
 4968       1200  SIPTR=  TAD SIBRK
 4969                     IFNZRO SWKBD-SIPTR      <GLITCH; *.-1>
 4970 36130 1200  SWBDA,  TAD SIBRK       / (ASSUMED TO BE ADDRESS OF 'SWKBD')
 4971 36131 6213          CIF DATFLD
 4972 36132 4471          BREAK           /IS THIS A BREAK-CHARACTER FOR 'SI'?
 4973 36133 7410          SKP             /YES
 4974 36134 5342          JMP GIR8        /NO
 4975 36135 1212          TAD GIRDBA
 4976 36136 6211          DATFLD
 4977 36137 4460          IOR             /SET 'SICOM' TO INDICATE WE HAVE A COMMAND
 4978 36140 0100  GIRSIC,  SICOM
 4979 36141 2052  GIR7,   ISZ COMCNT      / & INCREMENT OUR COMMAND COUNTER
 4980 36142 1212  GIR8,   TAD GIRDBA
 4981 36143 4611          JMS I GIRJOB    /GET HIS JOB # AGAIN

      /TSS/8 CONFIGURATION FOR UWM                                      Page 127


 4982 36144 7650          SNA CLA         /IS HE LOGGED IN?
 4983 36145 5351          JMP GIREXT      /NO - THEN WE DON'T ECHO
 4984 36146 1207          TAD GIRDTA
 4985 36147 4575          STORE           /YES - ECHO-TYPE THE CHARACTER
 4986 36150 5352          JMP GIRFUL
 4987 36151 2213  GIREXT, ISZ GIR00       /INCREMENT RETURN
 4988 36152 0000  GIRFUL, 0               /BACK TO CALLING FIELD
 4989 36153 5613          JMP I GIR00
 4990             
 4991             /THE CHARACTER IS EITHER FROM A PROGRAM OR 'SI' OR
 4992             /IS NEITHER A CTRL/B OR A CTRL/C; I.E. WE JUST PUSH
 4993             /IT THROUGH NORMALLY.
 4994 36154 1212  GIR9,   TAD GIRDBA
 4995 36155 4610          JMS I GIRFA     /IS THIS GOING TO SI?
 4996 36156 5304          JMP GIR5        /YES
 4997 36157 4730          JMS I SWBDA     /NO - PUSH IT THROUGH & CHECK 'DUPLEX'
 4998 36160 5352          JMP GIRFUL      /NO ROOM - TAKE ERROR EXIT
 4999 36161 5351          JMP GIREXT
 5000             
 5001             /THE CHARACTER IS A CTRL/B - JUST ECHO "^B".
 5002 36162 1202  GIRCTB, TAD GIRUPA
 5003 36163 3031          DCA TTCHAR
 5004 36164 1207          TAD GIRDTA
 5005 36165 4575          STORE           /OUTPUT THE "^"
 5006 36166 5352          JMP GIRFUL
 5007 36167 1203          TAD GIRB
 5008 36170 3031          DCA TTCHAR      /THEN SET TTCHAR = "B"
 5009 36171 5342          JMP GIR8        / & GO FINISH UP
 5010             
 5011             /THE CHARACTER IS A CTRL/C - GO ECHO "^C" IF WE'RE IN 'SI' MODE
 5012             /OR CLEAR ANY REASONABLE WAIT-BITS TO RESTART HIS PROGRAM
 5013 36172 4606  GIRCTC, JMS I GIRCTL    /GO HANDLE THE CTRL/C
 5014 36173 5352          JMP GIRFUL      /NO ROOM - ERROR
 5015 36174 5341          JMP GIR7        /'SI' COMMAND
 5016 36175 5351          JMP GIREXT      /PROGRAM COMMAND

      /TSS/8 CONFIGURATION FOR UWM                                      Page 128


 5017                     PAGE
 5018             
 5019             /OUTPUT A CHARACTER
 5020             /CALL   LINE # IN SOURCE
 5021             /       JMS CHOUT
 5022             /       CHARACTER
 5023             /       RETURN
 5024             
 5025 36200 0000  CHOUT,  0
 5026             IFZERO D680-2 <
 5027                     STA
 5028                     TAD SOURCE
 5029                     SMA CLA         /CTY?
 5030                     JMP CHOUT1      /NO
 5031                     TAD I CHOUT     /YES - OUTPUT CHARACTER
 5032                     JMP I TEST1
 5033             CHOUT1, TAD I CHOUT     /GET CHARACTER
 5034                     DCA TTCHAR
 5035                     STA
 5036                     TAD SOURCE      /DC08 LINE = TSS/8 CONSOLE -1
 5037                     T8SOF           /PASS CHARACTER TO DC08
 5038                     NOP
 5039             CHOUT2, ISZ CHOUT               /RETURN
 5040                     JMP I CHOUT
 5041             TEST1,  TEST
 5042                     >
 5043             
 5044             IFZERO D680 <
 5045                     IFNZRO CPU-3  <
 5046 36201 1112          TAD SOURCE      /LINE NUMBER
 5047 36202 1113          TAD TDEV        /DEVICE CODE LIST
 5048 36203 7001          IAC
 5049 36204 3271          DCA CONOU3      /POINTER TO DEVICE CODE FOR THIS LINE
 5050 36205 1671          TAD I CONOU3    /PICK UP DEVICE CODE
 5051 36206 1121          TAD C6006       /TLS-DEVICE CODE
 5052 36207 3214          DCA CHOUT1      /TAD SOURCE
 5053 36210 1112          TAD SOURCE
 5054 36211 1116          TAD TBUFF
 5055 36212 3271          DCA CONOU3      /PTR TO TTY BUFFER FOR THIS LINE
 5056             
 5057 36213 1600          TAD I CHOUT
 5058 36214 0000  CHOUT1, 0               /OUTPUT THE CHARACTER
 5059 36215 3671          DCA I CONOU3    /PUT IT IN THE BUFFER
 5060 36216 2200          ISZ CHOUT
 5061 36217 5600          JMP I CHOUT
 5062             >
 5063                                     IFZERO  CPU-3   <
 5064             
 5065                     TAD     SOURCE          /GET THE LINE NUMBER IN THE AC
 5066                     TAD     TBUFF           /GET THE BUFFER POINTER NOW.
 5067                     DCA     CONOU3          /AND STORE AWAY IN A TEMP.
 5068                     TAD     SOURCE          /GET THE LINE NUMBER AGAIN
 5069                     DCA     CHOUTP          /SAVE AWAY FOR A SECOND
 5070                     TAD I   CHOUT           /GET THE CHARACTER
 5071                     ISZ     CHOUT           /BOP PAST THE CHARACTER
 5072                     JMS     JBDC02          /OUTPUT THE CHARACTER NOW.
 5073             CHOUTP, 0                       /LINE NUMBER GOES HERE

      /TSS/8 CONFIGURATION FOR UWM                                      Page 129


 5074                     DCA I   CONOU3          /SAVE BACK
 5075                     JMS I   JBENDC          /REENABLE THE DC02 CONTROLLER.
 5076                     JMP I   CHOUT           /AND RETURN NOW.
 5077             
 5078             
 5079             JBDC02, 0
 5080                     DCA     DC02CH          /SAVE THE CHAR FOR ASECOND
 5081                     TAD I   JBDC02          /GET THE LINE NUMBER
 5082                     ISZ     JBDC02          /BOP PAST IT,BROTHER
 5083                     SZA                     /IS IT THE CTY [0?]
 5084                     JMP I   JBBLST          /GO DOWN AND OUTPUT TO THE DC02.
 5085                     TAD     DC02CH          /GET THE CHARACTER NOW.
 5086                     TLS                     /BYE BYE
 5087             JBBTSL, JMP I   JBDC02          /RETURN NOW.
 5088             
 5089             JBBLST, JBDCY                   /POINTER TO THE DC02 OUTPUTER.
 5090             JBENDC, DC02EN                  /POINTER TO THE DC02 ENABLER.
 5091             
 5092                             >       >

      /TSS/8 CONFIGURATION FOR UWM                                      Page 130


 5093             /FILL ALL OUTPUT BUFFERS
 5094             
 5095 36220 0000  CONT1,  0
 5096 36221 0000  CONDDB, 0
 5097                     IFNZRO DDBOUP-6 <GLITCH; *.-1>
 5098       0137  CONOUP= C0006   /DDBOUP
 5099                     IFNZRO DDBINP-DDBOUP+2  <GLITCH; *.-1>
 5100       0146  CONINP= C7776   /DDBINP-DDBOUP
 5101             
 5102 36222 0000  CONOUT, 0
 5103             
 5104                     IFZERO D680-2 <
 5105                     IOF
 5106                     TAD TCHAR
 5107                     SMA SZA CLA
 5108                     JMP CONOU6
 5109                     TAD TCHAR
 5110                     SZA CLA
 5111                     JMP CONM60+3
 5112                     JMS CONFET
 5113                     JMP CONOU6
 5114             CONM60, TLS
 5115                     STL RAR
 5116                     DCA TCHAR               /REMEMBER IT IS BEEN OUTPUT
 5117                     JMS CONFET
 5118                     JMP CONOU6
 5119                     TAD C1000
 5120                     DCA TCHAR
 5121             CONOU6, ION
 5122                     TAD T8NL
 5123                     DCA CONLPC      /LOOP COUNT:=#LINES
 5124             CONOU1, TAD CONLPC
 5125                     TAD T8NUML
 5126                     TAD T8K36
 5127                     DCA CONFET      /POINTS TO THIS LINE'S SECOND OUTBUF
 5128                     TAD I CONFET
 5129                     SZA CLA         /ANY ROOM IN THE INN??
 5130                     JMP CONOU3      /NO, SO GO AWAY
 5131                     TAD CONLPC
 5132                     TAD T8NUML
 5133                     IAC
 5134                     JMS CONFET
 5135                     JMP CONOU3
 5136                     DCA TTCHAR
 5137                     TAD CONLPC
 5138                     TAD T8NUML
 5139                     T8SOF
 5140                     NOP
 5141             CONOU3, ISZ CONLPC      /DONE?
 5142                     JMP CONOU1      /NO
 5143                     JMP I CONOUT    /YES
 5144             CONLPC, 0
 5145                     >
 5146             
 5147                     IFZERO D680 <
 5148 36223 1116          TAD TBUFF
 5149 36224 3267          DCA CONOU1      /BUFFER POINTER

      /TSS/8 CONFIGURATION FOR UWM                                      Page 131


 5150             
 5151                     IFNZRO CPU-3 <
 5152 36225 1113          TAD TDEV
 5153 36226 7001          IAC
 5154 36227 3270          DCA CONOU2      /DEVICE CODE POINTER
 5155                     >
 5156 36230 3271          DCA CONOU3      /DEVICE COUNTER
 5157 36231 1667  CONO11, TAD I CONOU1    /PICK UP A CHARACTER
 5158 36232 7750          SPA SNA CLA     /IS IT WAITING TO GO OUT?
 5159 36233 5245          JMP CONO14      /NO - WE'RE READY FOR ANOTHER
 5160 36234 2267  CONOU6, ISZ CONOU1
 5161             
 5162                     IFNZRO CPU-3 <
 5163 36235 2270          ISZ CONOU2      /ADVANCE THE DEVICE-CODE POINTER
 5164                     >
 5165 36236 2271          ISZ CONOU3      /INCREMENT THE KEYBOARD NUMBER
 5166 36237 1117          TAD TBUFFE      /END OF BUFFER
 5167 36240 7040          CMA
 5168 36241 1267          TAD CONOU1
 5169 36242 7640          SZA CLA         /ARE WE DONE?
 5170 36243 5231          JMP CONO11      /NO - CHECK THE NEXT LINE
 5171             
 5172                     IFZERO CPU-3 <
 5173                     JMS I JBENDC    /REENABLE THE DC02 CHANNELS.
 5174                     >
 5175 36244 5622          JMP I CONOUT    / AND RETURN
 5176             /
 5177             /HERE WE FETCH A CHARACTER FROM THE USER'S BUFFER AND
 5178             /EITHER SHIP IT OFF OR PUT IT INTO 'TBUFF' FOR THE
 5179             /INTERRUPT HANDLER TO USE.
 5180 36245 1271  CONO14, TAD CONOU3
 5181 36246 4272          JMS CONFET      /FETCH A CHARACTER FROM THE USER BUFFER
 5182 36247 5234          JMP CONOU6      /NONE AVAILABLE
 5183 36250 3133          DCA TCHAR       /SAVE THE CHARACTER
 5184             
 5185                     IFNZRO CPU-3 <
 5186 36251 1670          TAD I CONOU2    /PICK UP DEVICE CODE
 5187 36252 1121          TAD C6006       /TLS-DEVICE CODE
 5188 36253 3260          DCA CONO15
 5189                     >
 5190 36254 1667          TAD I CONOU1
 5191 36255 7640          SZA CLA         /IS THE PRINTER ALREADY ACTIVE?
 5192 36256 5263          JMP CONO16      /YES - PUT NEW CHARACTER IN FINAL BUFFER
 5193 36257 1133          TAD TCHAR       /NO - SEND OUT THIS CHARACTER
 5194             
 5195                     IFNZRO CPU-3 <
 5196 36260 0000  CONO15, 0               /OUTPUT THE CHARACTER
 5197                     >
 5198             
 5199                     IFZERO CPU-3 <
 5200                     JMS JBDC02      /OUTPUT THE CHARACTER NOW
 5201             CONOU3, 0               /THE LINE NUMBER
 5202                     >
 5203 36261 7130          STL RAR
 5204 36262 5265          JMP CONJBP      /NOW MARK AS DONE
 5205             
 5206 36263 1040  CONO16, TAD C1000       /FORCE CHAR TO BE NON-ZERO

      /TSS/8 CONFIGURATION FOR UWM                                      Page 132


 5207 36264 1133          TAD TCHAR
 5208 36265 3667  CONJBP, DCA I CONOU1    /PLACE NEW CHARACTER IN FINAL BUFFER
 5209 36266 5231          JMP CONO11      /SEE IF WE CAN DOUBLE-FEED THIS LINE
 5210             
 5211 36267 0000  CONOU1, 0
 5212                     IFNZRO CPU-3 <
 5213 36270 0000  CONOU2, 0
 5214 36271 0000  CONOU3, 0
 5215                     >
 5216                     >

      /TSS/8 CONFIGURATION FOR UWM                                      Page 133


 5217 36272 0000  CONFET, 0
 5218 36273 7104          CLL RAL
 5219 36274 7001          IAC
 5220 36275 1163          TAD DEVTBA
 5221 36276 3221          DCA CONDDB      /NOW POINTS TO USER'S OUTPUT ENTRY IN DEVTBL
 5222 36277 6211  CONOU5, DATFLD
 5223 36300 1621          TAD I CONDDB
 5224 36301 6201          CDF
 5225 36302 7450          SNA             /DOES  THIS USER HAVE AN OUTPUT DDB?
 5226 36303 5672          JMP I CONFET    /NO; THUS HE HASN'T ANY CHARACTERS TO OUTPUT.
 5227 36304 6212          CIF+10          /FETCH IN FIELD 1
 5228 36305 4573          FETCH
 5229 36306 7766  CONO12,  -12
 5230 36307 5313          JMP CONOU4      /BLOCK EMPTY. RETURN IT TO FREE STORAGE
 5231 36310 5313          JMP CONOU4      /NONE LEFT
 5232 36311 2272          ISZ CONFET      /GOT A CHAR
 5233 36312 5672          JMP I CONFET
 5234 36313 6211  CONOU4, DATFLD
 5235 36314 1621          TAD I CONDDB
 5236 36315 1137          TAD CONOUP
 5237 36316 3220          DCA CONT1       /NOW POINTS TO OUTPUT BLOCK POINTER
 5238 36317 1620          TAD I CONT1     /PICK UP OUTPUT BLOCK POINTER
 5239 36320 6201          CDF
 5240 36321 7450          SNA             /IS THERE STILL SOME OUTPUT BUFFER?
 5241 36322 5672          JMP I CONFET    /NO, SO WE'RE DONE!
 5242 36323 4576          RETBLK          /YES, SO RETURN THE ONE WE JUST EMPTIED
 5243 36324 6211          DATFLD
 5244 36325 3620          DCA I CONT1     /SET THE POINTER TO THE NEXT OUTPUT BUFFER (OR 0)
 5245 36326 7240          STA
 5246 36327 1221          TAD CONDDB      /POINTS TO  INPUT DDB PTR IN DEVTBL
 5247 36330 3200          DCA CHOUT
 5248 36331 1600          TAD I CHOUT
 5249 36332 4776          JMS I CONCBA    /IS INPUT SIDE IN SI MODE?
 5250 36333 5361          JMP CONO20      /YES-DON'T PLAY WITH JSTEL
 5251 36334 1621          TAD I CONDDB    /NO-GET HIS JOB #
 5252 36335 4775          JMS I CONJOB    /EXTRACT JOB# FROM DDB
 5253 36336 6211          DATFLD
 5254 36337 7440          SZA             /DOES THIS DDB BELONG TO A DEFINED JOB?
 5255 36340 5774          JMP I CONO7A    /YES
 5256 36341 1620          TAD I CONT1
 5257 36342 7640          SZA CLA         /NO - IS THERE ANOTHER BUFFER?
 5258 36343 5364          JMP CONOU8
 5259 36344 1621          TAD I CONDDB    /NO - RELEASE THE DDB
 5260 36345 6201          CDF
 5261 36346 4576          RETBLK
 5262 36347 7200          CLA
 5263 36350 6211  CONO10, DATFLD
 5264 36351 3621          DCA I CONDDB
 5265 36352 6201          CDF
 5266 36353 5672          JMP I CONFET
 5267             
 5268 36354 4574  CONO70, GETJTA          /TURN ON JSTEL
 5269 36355 0001           JOBSTS+1
 5270 36356 6211          DATFLD
 5271 36357 4460          IOR
 5272 36360 0020           JSTEL
 5273 36361 1620  CONO20, TAD I CONT1

      /TSS/8 CONFIGURATION FOR UWM                                      Page 134


 5274 36362 7650          SNA CLA         /ARE THERE ANY MORE OUTPUT BUFFERS?
 5275 36363 5370          JMP CONOU9      /NO - THEN RESET THE FILL POINTER
 5276 36364 2220  CONOU8, ISZ CONT1
 5277 36365 1306          TAD CONO12
 5278 36366 3620          DCA I CONT1     /YES - JUST RESET THE EMPTY COUNTER
 5279 36367 5277          JMP CONOU5
 5280             
 5281 36370 1146  CONOU9, TAD CONINP
 5282 36371 1220          TAD CONT1
 5283 36372 3221          DCA CONDDB
 5284 36373 5350          JMP CONO10
 5285             
 5286 36374 1557  CONO7A, CONOU7
 5287 36375 5367  CONJOB, DEVJOB
 5288 36376 1362  CONCBA, CONCB

      /TSS/8 CONFIGURATION FOR UWM                                      Page 135


 5289                     PAGE
 5290                     IFZERO D680 <
 5291             
 5292 36400 7127  T8CNT4, TIBUFF
 5293             
 5294 36401 0000  T8INS,  0
 5295 36402 1120          TAD KBUFFE      /END OF KEYBOARD BUFFER
 5296 36403 7040          CMA
 5297 36404 1200          TAD T8CNT4
 5298 36405 7650          SNA CLA
 5299 36406 5223          JMP T8INS1      /END OF BUFFER
 5300 36407 1600          TAD I T8CNT4
 5301 36410 7450          SNA
 5302 36411 5227          JMP T8INS2      /EMPTY SLOT
 5303                     IFZERO TTYEVEN-1 <
 5304 36412 0226          AND CC0177
 5305 36413 1141          TAD C0200
 5306                     >
 5307                     IFZERO TTYEVEN  <
 5308                     AND C0377
 5309                     NOP
 5310                     >
 5311 36414 3031          DCA TTCHAR
 5312 36415 3600          DCA I T8CNT4    /CLEAR DEVICE BUFFER
 5313 36416 1115          TAD KBUFF
 5314 36417 7041          CIA
 5315 36420 1200          TAD T8CNT4
 5316 36421 2201          ISZ T8INS
 5317 36422 5601          JMP I T8INS
 5318             
 5319 36423 1115  T8INS1, TAD KBUFF
 5320 36424 3200          DCA T8CNT4
 5321 36425 5601          JMP I T8INS
 5322 36426 0177  CC0177, 177
 5323             
 5324 36427 2200  T8INS2, ISZ T8CNT4
 5325 36430 5202          JMP T8INS+1

      /TSS/8 CONFIGURATION FOR UWM                                      Page 136


 5326                     IFNZRO CPU-3  <
 5327 36431 3235  TSER,   DCA .+4         /SET THE 'TLS' IOT
 5328 36432 1710          TAD I KTBUF     /CHECK OUR SINGLE-CHAR BUFFER
 5329 36433 7550          SPA SNA         /ANOTHER CHAR READY TO GO?
 5330 36434 5241          JMP TSER1       /NO - JUST CLEAR THE FLAG
 5331 36435 7402           HLT            /OUTPUT A CHARACTER
 5332 36436 7340          CLA CLL CMA     /SET TBUFF NEGATIVE
 5333 36437 3710          DCA I KTBUF
 5334 36440 5501          DISMIS
 5335 36441 7201  TSER1,  CLA IAC
 5336 36442 1265          TAD INT4        /CONSTRUCT TCF
 5337 36443 3244          DCA .+1
 5338 36444 7402           HLT
 5339 36445 5251          JMP TSER2       /FORCE FEED ROUTINE ACTIVE
 5340             
 5341 36446 3247  KSER,   DCA .+1         /SET OUR 'KRB'
 5342 36447 7402           HLT
 5343 36450 1040          TAD C1000       /FORCE THE CHAR .GT. 0
 5344 36451 3710  TSER2,  DCA I KTBUF
 5345 36452 2257          ISZ ECHOFL      /IS ECHO SCHEDULED?
 5346 36453 5501          DISMIS          /YES
 5347 36454 1256          TAD .+2         /NO - SCHEDULE IT NOW
 5348 36455 5501          DISMIS
 5349 36456 2511          ECHO            /LEVEL 2 ECHO SERVICE
 5350             
 5351 36457 7777  ECHOFL, -1              /-1 IF INPUT CHARACTERS NOT PROCESSED
 5352             
 5353             /
 5354             /ROUTINE TO CHECK A LIST OF DEVICE CODES FOR A 
 5355             /SKIPPING DEVICE. CALL:
 5356             /       TAD (DEVLST-1)
 5357             /       JMS I (INT2)
 5358             /        END OF DEVLST + 1
 5359             /       RETURN IF INTERRUPTING DEVICE WAS FOUND
 5360             /       RETURN IF NO FLAG FOUND
 5361             /
 5362 36460 0000  INT2,   0
 5363 36461 3010          DCA T8AX1
 5364 36462 1410  INT1,   TAD I T8AX1
 5365 36463 1311          TAD C6001       /KSF-DEVICE CODE
 5366 36464 3265          DCA .+1
 5367 36465 7402  INT4,    HLT
 5368 36466 5275          JMP INT5        /NOT THIS DEVICE
 5369 36467 1010          TAD T8AX1       /WE FOUND THE DEVICE
 5370 36470 1306          TAD BUFCNV
 5371 36471 3310          DCA KTBUF       /SET THE SINGLE-CHAR BUFFER POINTER
 5372 36472 1265          TAD INT4
 5373 36473 1307          TAD C0005       / AND BUILD THE 'TLS' OR 'KRB'
 5374 36474 5304          JMP INT3
 5375 36475 1010  INT5,   TAD T8AX1
 5376 36476 7040          CMA
 5377 36477 1660          TAD I INT2
 5378 36500 7640          SZA CLA         /HAVE WE REACHED THE END OF THE LIST?
 5379 36501 5262          JMP INT1        /NO - KEEP POLLING THE TTY LINES
 5380 36502 2260          ISZ INT2        /YES - INTERRUPTING DEVICE WASN'T FOUND
 5381             
 5382                     IFZERO TC01-1 <

      /TSS/8 CONFIGURATION FOR UWM                                      Page 137


 5383 36503 4712          JMS I DTCHK1    /CHECK THE DECTAPES AGAIN
 5384                     >
 5385 36504 2260  INT3,   ISZ INT2
 5386 36505 5660          JMP I INT2
 5387             
 5388                     IFNZRO TIBUFF-TIDEV-TOBUFF+TODEV        <GLITCH; *.-1>
 5389 36506 7740  BUFCNV, TIBUFF-TIDEV
 5390 36507 0005  C0005,  5
 5391 36510 0000  KTBUF,  0
 5392 36511 6001  C6001,  6001
 5393                     IFZERO TC01-1 <
 5394 36512 0272  DTCHK1, DTCHK
 5395                     >>

      /TSS/8 CONFIGURATION FOR UWM                                      Page 138


 5396                     IFZERO CPU-3  <
 5397             DC02K,  0
 5398                     DCA I   DD02LN          /ZAP OUT THE DC02 LINE.
 5399                     KSF                     /WAS IT THE CTY?
 5400                     SKP                     /NOPE
 5401                     JMP I   DC02K           /AND RETURN
 5402                     JMS     DC02CK          /CHECK FOR INPUT NOW
 5403                     MKTF                    /INPUT FLAGS
 5404                     ISZ     DC02K           /SKIPS IF INPUT ON RETURN, THUS AVOIDING
 5405                     JMP I   DC02K           /THE ISZ
 5406             
 5407             
 5408             DC02T,  0
 5409                     DCA I   DD02LN          /ZAP OUT THE LINES NOW.
 5410                     TSF                     /IS IT THE CTY?
 5411                     SKP
 5412                     JMP I   DC02T           /RETURN NOW
 5413                     JMS     DC02CK          /CHECK FOR THE DC02 NOW
 5414                     MTPF                    /OUTPUT FLAGS
 5415                     ISZ     DC02T           /BOP UP THE RETURN IF NOT FOUND
 5416                     JMP I   DC02T           /RETURN NOW.
 5417             
 5418             
 5419             DC02CK, 0                       /CHECKS FOR A GIVEN DC02 INTERUPT
 5420                     TAD I   DC02CK          /THE THING WE WANT
 5421                     DCA     DC02S           /SAVE AWAY FOR THE SUBORUTINE TO USE
 5422                     ISZ     DC02CK          /BOP PAST THE SUBROUTINE ARGUEMENT
 5423                     TAD     DC02ALL         /CHECK ALL GROUPS NOW.
 5424                     JMS     DC02SUB         /READ IN THE STUFF
 5425                     SNA CLA                 /ANY GROUP?
 5426                     JMP I   DC02CK          /NOPE. RETURN NOW.
 5427                     TAD     DC02L1          /CHECK GROUP ONE NOW
 5428                     JMS     DC02GK          /CHECK IT,BABY
 5429                     TAD     DC02L2          /CHECK GROUP TWO NOW.
 5430                     JMS     DC02GK          /AND SO ON DOWN FOR ALL FOUR GROUPS
 5431                     TAD     DC02L3
 5432                     JMS     DC02GK
 5433                     TAD     DC02L4          /LAST ONE
 5434                     JMS     DC02GK          /GO DO IT. MUST BE THIS ONE,
 5435                     REBOOT                  /OR ELSE SYSTEM IS BLOWN.
 5436             
 5437             DC02SUB,0
 5438             DC02S,  0                       /PUTS ARGUMENT HERE
 5439                     AND     DC7760          /JUST RETURN THE STATION IN CASE OF DC02 FAILURE
 5440                     JMP I   DC02SUB         /RETURN NOW
 5441             
 5442             DC02GK, 0                       /CHECKS A GIVEN GROUP
 5443                     JMS     DC02SUB         /CHECK THIS ONE OUT
 5444                     SNA
 5445                     JMP     DC02GE          /NOT HERE. BOP LN AND RETURN
 5446                     ISZ     DC02CK          /WE FOUND IT. BOP PAST CALLERS ISZ.
 5447                     CLL RAL                 /START TO SHIFT BITS AROUND
 5448                     ISZ I   DD02LN          /BOP AND TEST THIS LINE NUMBER
 5449                     SNL
 5450                     JMP     .-3             /NOT THIS ONE
 5451                     CLA                     /ALL DONE. RETURN NOW
 5452                     JMP I   DC02CK          /AND AWAY

      /TSS/8 CONFIGURATION FOR UWM                                      Page 139


 5453             
 5454             DC02GE, TAD     DC0210          /BOP THE LINE NUMBER BY 10
 5455                     TAD I   DD02LN
 5456                     DCA I   DD02LN          /AND STASH AWAY
 5457                     JMP I   DC02GK          /RETURN TO CHECK NEXT SOON.
 5458             
 5459             DC02ALL,17                      /MASK TO CHECK FOR ALL 4 GROUPS.
 5460             DC02L1, 10                      /GROUP 1 MASK
 5461             DC02L2, 4                       /GROUP 2 MASK
 5462             DC02L3, 2                       /GROUP 3 MASK
 5463             DC02L4, 1                       /GROUP 4 MASK
 5464             DC0210, 10                      /LITERAL FOR LINE BOPPING.
 5465             DD02LN, DC02LN
 5466             DC7760, 7760                    /MASKING CONSTANT FOR DC02 IN CASE OF FAILURE
 5467             
 5468                     >>
 5469                     IFZERO CPU-3  <
 5470             /DECTAPE FIELD 0 DISPATCHES
 5471                     IFZERO TC01-1  <
 5472                     IFNZRO DTL20-.&4000     <GLITCH; *.-1>
 5473                     *DTL20
 5474             DTL20,  CIF DATFLD      /LEVEL 2 DISPATCHER
 5475                     JMP I .+1
 5476                     DTL21
 5477                     >>

      /TSS/8 CONFIGURATION FOR UWM                                      Page 140


 5478             IFZERO D680-2 <
 5479             T8MNC,  0               /MINOR LOOP COUNTER
 5480             T8LC,   0               /INTERRUPT LEVEL COUNTER
 5481             T8K9,   0               /STARTING LINE NUMBER -1
 5482             
 5483             /MULTIPLE LEVEL INTERRUPT ROUTINE
 5484             /ALLOWS MULTIPLE LEVEL INTERRUPT TO THIS ROUTINE AND UNLIMITED OTHERS
 5485             T8DIS,  TT8ON
 5486                     ISZ T8LC              /LEVEL COUNTER
 5487                     JMP T8DIS3              /2ND LEVEL INTERRUPT
 5488                     DCA T8SA              /SAVE ACCUMULATOR
 5489                     RTR                   /GET LINK
 5490                     DCA T8SVLK              /SAVE LINK
 5491                     TAD 0           /SAVE INTERRUPT ADDRESS
 5492                     DCA T8SV0
 5493                     RIB
 5494                     DCA T8SF
 5495             T8DIS2, CDF CIF
 5496                     TAD T8K0                /-N15
 5497                     TT8CLR                  /LOAD R REG.
 5498                     CLA
 5499                     ION
 5500                     JMP I T8K1              /JUMP TO TTI LOOP
 5501             
 5502             /2ND LEVEL INTERRUPT
 5503             T8DIS3, RMF
 5504                     ION                   /RE-ENABLE PROGRAM INTERRUPT
 5505                     JMP I 0         /RETURN TO THE MAIN PROGRAM
 5506             
 5507             /RETURN FROM INPUT TTI LOOP
 5508             T8COM,    TAD T8MNC             /MINOR COUNTER, NUMBER OF LINES/5
 5509                       DCA T8CNT2          /MINOR LOOP COUNTER
 5510                       TAD T8LN              /LINE NUMBER
 5511                       TTSL+1                /SET LINE NUMBER
 5512                       CLA
 5513             T8COM0,   TAD I T8OUTK        /OUTPUT WORD
 5514                       SNA                   /SOMETHING TO TRANSMIT
 5515                       JMP T8COM8            /SEE IF WORD AVAILABLE
 5516                       TTO+1                 /INCR. LINE REGISTER AND OUTPUT
 5517                       DCA I T8OUTK        /STORE WORD
 5518             T8COM3,   ISZ T8OUTK          /UPDATE OUTPUT ADDR
 5519                       ISZ T8OTK2          /UPDATE 2ND BUFFER ADDRESS
 5520                       ISZ T8CNT2          /ARE ONE-FIFTH OF LINES CHECKED?
 5521                       JMP T8COM0             /CHECK NEXT LINE
 5522             
 5523             T8COM4,   TTRL                  /READ LINE NUMBER
 5524                       DCA T8LN              /SAVE LINE NUMBER
 5525                       ISZ T8CNT1          /HAVE ALL LINES BEEN CHECKED
 5526                       JMP T8COM5            /RESET AND DISMISS
 5527                       TAD T8K2              /-5
 5528                       DCA T8CNT1          /RESET MAJOR LOOP COUNTER
 5529                       TAD T8K9              /STARTING LINE-1
 5530                       DCA T8LN              /RESET LINE NUMBER
 5531                       TAD T8K7            /T8OBF
 5532                       DCA T8OUTK          /RESET OUTPUT LINE POINTER
 5533                       TAD T8K36           /T8OBF2
 5534                       DCA T8OTK2          /RESET 2ND BUFFER POINTER

      /TSS/8 CONFIGURATION FOR UWM                                      Page 141


 5535             T8COM5,   IOF                   /TURN OFF INTERRUPT
 5536                       STA                   /-1
 5537                       TAD T8LC              /LEVEL COUNTER
 5538                       DCA T8LC              /RESTORE LEVEL COUNTER
 5539                       TAD T8LC              /LEVEL COUNTER
 5540                       SMA CLA                       /RESTORE AC ETC
 5541                       JMP T8DIS2            /CHECK INPUT AGAIN, ETC.
 5542                     TAD L2Q
 5543                     CIA
 5544                     TAD L2QE
 5545                     SNA CLA
 5546                     JMP T8COM9
 5547                     TAD T8SF
 5548                     AND C0100
 5549                     SZA CLA         /INTERRUPT FROM EXEC MODE?
 5550                     JMP L2CLK       /NO ,EXIT TO LEVEL 2
 5551             T8COM9, TAD T8SFA
 5552                     JMP I RESTA
 5553             T8COM8,   TAD I T8OTK2        /PICK UP DOUBLE-BUFFERED WORD
 5554                       SZA                   /NOTHING TO SEND
 5555                       JMP .+3               /SEND NEW WORD
 5556                       TTINCR                /INCREMENT LINE REGISTER
 5557                       JMP T8COM3             /CONTINUE
 5558                       TTO+1                 /INCR. LINE REGISTER AND OUTPUT
 5559                       DCA I T8OUTK        /STORE WORD
 5560                       DCA I T8OTK2        /ZERO 2ND WORD
 5561                       JMP T8COM3             /CONTINUE
 5562             
 5563             T8SF,   0
 5564             T8SV0,  0
 5565             T8SVLK, 0
 5566             T8SA,   0
 5567             T8K1,     T8IN                  /START OF TTI SERIES
 5568             T8K2,     -5                    /TO RESET MAJOR LOOP COUNTER
 5569             T8K5,     -3                    /FOR SUBTRACTION
 5570             T8K6,     1770                  /ZERO ALL BUT LINE NO
 5571             T8SFA,  T8SF
 5572             RESTA,  RESTOR

      /TSS/8 CONFIGURATION FOR UWM                                      Page 142


 5573             /INPUT CHARACTER PROCESSING - ENTER WITH THE
 5574             /CHARACTER IN THE AC, BITS 1-11 - ENTER VIA THE JMS
 5575             /AFTER THE TTI - LSW- CAW
 5576             
 5577             T8KFLL, 0
 5578                     CLL RAR
 5579                     CLL RTR
 5580                     AND T8K11       /ZAP THE START & STOP BITS
 5581                     DCA I T8AX2     /STORE THE CHARACTER
 5582                     TTRL
 5583                     DCA I T8AX2     /STORE THE LINE NO.
 5584                     TAD T8K5        /-3
 5585                     TAD T8KFLL      /STEP THE POINTER BACK
 5586                     DCA T8CNT2      /TO THE LSW
 5587                     TAD I T8CNT2    /LSW
 5588                     AND T8K6        /1770
 5589                     DCA I T8CNT2    /SAVE LINE NO
 5590                     ISZ T8CNT2      /STEP TO CAW
 5591                     CLA CLL CML RTR /AC=2000
 5592                     DCA I T8CNT2    /RESET THE CAW
 5593                     TTRINC          /STEP CTR WHICH CONTROLS MAX
 5594                                     /NO. CHARS PER INTERRUPT
 5595                     ISZ T8INFL      /COUNT FOR THE BUFF
 5596                     ISZ T8K14       /SKP IF END OF INPUT BUFF
 5597                     JMP .+5
 5598                     TAD T8BFK       /T8IBF -1
 5599                     DCA T8AX2       /RECYCLE THE BUFFER
 5600                     TAD T8NL        /-N
 5601                     DCA T8K14       /RESET THE COUNTER
 5602             /NOW REMEMBER THAT WE HAVE AN INPUT CHAR
 5603                     ISZ     ECHOFL  /DO WE ALREADY KNOW WE HAVE ONE?
 5604                     JMP I T8KFLL    /YES, SO OKAY TO EXIT
 5605                     TAD ECHOA
 5606                     DCA I   L2Q     /NO, SO QUEUE AN ECHO REQUEST
 5607                     JMP I T8KFLL    /XIT
 5608             ECHOA,  ECHO
 5609             ECHOFL, -1
 5610             
 5611             /CLOCK TIME
 5612             
 5613             INT81A, INT81
 5614             CLKITA, CLKIT
 5615             L2CLK,  TAD EXITA
 5616                     DCA I CLKITA
 5617                     TAD T8SVLK
 5618                     DCA L2SVLK
 5619                     TAD T8SA
 5620                     DCA L2SA
 5621                     TAD T8SV0
 5622                     DCA L2SV0
 5623                     TAD T8SF
 5624                     JMP I INT81A
 5625                     >

      /TSS/8 CONFIGURATION FOR UWM                                      Page 143


 5626                     PAGE
 5627             /RETURN ADDRESS OF LINKED TABLE ENTRY
 5628             /CALL   TAD TABLE ENTRY ADDRESS
 5629             /       GETJTA
 5630             /        ENTRY NAME
 5631             /       RETURN
 5632             
 5633 36600 0000  GETJTB, 0
 5634 36601 3231          DCA GETJT1      /SAVE JOBTABLE ADDRESS
 5635 36602 1600          TAD I GETJTB    /ENTRY #
 5636 36603 3232          DCA GETJT2
 5637 36604 6214          RDF             /FIELD CALLED FROM
 5638 36605 1145          TAD C6203
 5639 36606 3227          DCA GETJT3      /SO WE CAN GET BACK
 5640 36607 6211          DATFLD          /CHANGE TO DATA FIELD
 5641 36610 1631  GETJ1,  TAD I GETJT1    /GET JOBTBL ENTRY
 5642 36611 7450          SNA             /LINK 0?
 5643 36612 5226          JMP GETJ3       /YES - RETURN 0
 5644 36613 3231          DCA GETJT1      /NO. JOB DATA ADDRESS
 5645 36614 1233          TAD GETJM7
 5646 36615 1232          TAD GETJT2      /ARE WE IN PROPER BLOCK?
 5647 36616 7510          SPA             /ENTRY<7?
 5648 36617 5222          JMP .+3         /YES
 5649 36620 3232          DCA GETJT2      /NO. LINK TO NEXT
 5650 36621 5210          JMP GETJ1       /AND TRY AGAIN
 5651 36622 7200          CLA
 5652 36623 1232          TAD GETJT2      /INDEX INTO BLOCK
 5653 36624 1231          TAD GETJT1      /START OF BLOCK
 5654 36625 7001          IAC
 5655 36626 2200  GETJ3,  ISZ GETJTB      /SKIP CALLING ARGUMENT
 5656 36627 0000  GETJT3, 0               /BACK TO CALLING FIELD
 5657 36630 5600          JMP I GETJTB
 5658             
 5659 36631 0000  GETJT1, 0
 5660 36632 0000  GETJT2, 0
 5661 36633 7771  GETJM7, -7

      /TSS/8 CONFIGURATION FOR UWM                                      Page 144


 5662             /GET JSFX
 5663             /CALL   TAD FILE #
 5664             /       JMS GETJFX
 5665             /       RETURN WITH JSFX IN AC
 5666             
 5667 36634 0000  GETJFX, 0
 5668 36635 0033          AND C0003       /FILE # ONLY
 5669 36636 7040          CMA
 5670 36637 3247          DCA GETJF0      /-SHIFT COUNT
 5671 36640 7130          STL RAR
 5672 36641 7010          RAR
 5673 36642 2247          ISZ GETJF0      /DONE?
 5674 36643 5241          JMP .-2
 5675 36644 5634          JMP I GETJFX    /YES, EXIT WITH BIT SET IN AC

      /TSS/8 CONFIGURATION FOR UWM                                      Page 145


 5676             /RESTORE JOB REGISTERS
 5677             /CALL   TAD JOB #
 5678             /       RESJOB
 5679             /       RETURN
 5680             
 5681 36645 7776  QUANTA, QUANT
 5682 36646 0637  RESMSK, FIP+SI+37
 5683             
 5684             GETJF0,
 5685 36647 0000  RESJO0, 0
 5686 36650 0246          AND RESMSK      /CLEAR CORE STATUS BITS
 5687 36651 3160          DCA JOB         /AND SAVE IN JOB
 5688 36652 1160          TAD JOB
 5689 36653 0036          AND C0037
 5690 36654 1044          TAD JOBTBA
 5691 36655 3302          DCA RESJO1      /JOBTBL POINTER FOR THIS JOB
 5692 36656 6211          DATFLD
 5693 36657 1702          TAD I RESJO1    /GET ADDRESS OF JOB DATA AREA
 5694 36660 3561          DCA I CJOBDA    /AND SAVE IN FIELD 1
 5695 36661 6201          CDF
 5696 36662 1245          TAD QUANTA      /INITIALIZE HIS QUANTUM RUN TIME
 5697 36663 3043          DCA JOBTIM
 5698 36664 3104          DCA L2SV0       /SET PC=0 IN ANTICIPATION OF PHANTOMS
 5699 36665 1160          TAD JOB         /IS IT A PHANTOM?
 5700 36666 0144          AND C0600
 5701 36667 7640          SZA CLA
 5702 36670 5647          JMP I RESJO0    /YES; WE'RE RESTORED!
 5703             /
 5704             / NOW RESTORE THE EAE REGISTERS IF THEY EXIST
 5705             /
 5706                     IFZERO EAE-20 <
 5707                             IFZERO CPU-2 <
 5708                     SWAB            /PUT EAE IN MODE B
 5709                     GETJTW          /PICK UP MODE, GT, & SC
 5710                      JOBREG+1
 5711                     MQL             / & SAVE THEM IN MQ
 5712                     TAD C1000
 5713                     MQA             /IF THE 'GT' FLAG WAS SET BEFORE,
 5714                     SAM             / THIS WILL SET IT NOW
 5715                     CLA MQA ACS     /LOAD SC ALL THE WAY FROM MQ
 5716                     MQA             /GET MODE BACK INTO AC
 5717                     SMA CLA         /WAS IT SET?
 5718                     SWBA            /NO - SET MODE 'A'
 5719                             >
 5720                             IFNZRO CPU-2 <
 5721                     GETJTW          /PICK UP SC
 5722                      JOBREG+1
 5723                     AND C0037       /ZAP ALL BUT THE SEQUENCE-COUNT
 5724                     CMA             /COMPLEMENT AND STORE FOR
 5725                     DCA .+2         /  OLD-STYLE EAE
 5726                     SCL             /LOAD SC
 5727                     0
 5728                             >
 5729                     >
 5730                     IFZERO MQREG-1 <
 5731 36671 4477          GETJTW          /RESTORE MQ
 5732 36672 0014           JOBEAE

      /TSS/8 CONFIGURATION FOR UWM                                      Page 146


 5733 36673 7421          MQL
 5734                     >
 5735 36674 1302          TAD RESJO1
 5736 36675 4574          GETJTA          /GET ADDDRESS OF PC IN JOB DATA AREA
 5737 36676 0011           JOBREG
 5738 36677 3302          DCA RESJO1
 5739 36700 4567          BLT             /MOVE PC, AC, & LINK TO LEVEL-2 REGISTERS
 5740 36701 6211           DATFLD
 5741 36702 0000  RESJO1,  0
 5742 36703 6201           CDF
 5743 36704 0104           L2SV0
 5744 36705 7775           -3
 5745 36706 5647          JMP I RESJO0    /ALL RESTORED

      /TSS/8 CONFIGURATION FOR UWM                                      Page 147


 5746             /CLEAR BUFFER
 5747             /CALL   TAD DDB ADDRESS
 5748             /       JMS CLRBUF
 5749             /       RETURN
 5750             
 5751                     IFNZRO DDBINP-4 <GLITCH; *.-1>
 5752       0034  CLRINP= C0004   /DDBINP
 5753                     IFNZRO DDBOUP-DDBINP-2  <GLITCH; *.-1>
 5754       0032  CLROUP= C0002   /DDBOUP-DDBINP
 5755             
 5756             TTYSR1, 
 5757 36707 0000  CLRBUF, 0               /ENTER WITH DDB ADDRESS
 5758 36710 1034          TAD CLRINP      /...+4
 5759 36711 3331          DCA CLRBU1      /POINTS TO FILL POINTER
 5760 36712 6211          DATFLD
 5761 36713 3731          DCA I CLRBU1    /FILL POINTER = 0
 5762 36714 1331          TAD CLRBU1
 5763 36715 1032          TAD CLROUP      /...+2
 5764 36716 3331          DCA CLRBU1      /POINTS TO EMPTY POINTER
 5765 36717 1731          TAD I CLRBU1
 5766 36720 6201          CDF
 5767 36721 7450          SNA             /EMPTY PTR=0?
 5768 36722 5325          JMP CLRBU2      /YES
 5769 36723 4576          RETBLK          /NO - RETURN THE BUFFER
 5770 36724 5321          JMP .-3         /KEEP RETURNING BUFFERS
 5771 36725 6211  CLRBU2, DATFLD
 5772 36726 3731          DCA I CLRBU1    /CLEAR EMPTY POINTER
 5773 36727 6201          CDF
 5774 36730 5707          JMP I CLRBUF    /AND RETURN

      /TSS/8 CONFIGURATION FOR UWM                                      Page 148


 5775             /SEARCH FOR TTY
 5776             /CALL   TAD JOB #
 5777             /       TTYUSE
 5778             /        0 FOR INPUT BUFFER, 1 FOR OUTPUT BUFFER
 5779             /       RETURN WITH DDB ADDR IN AC, 0 IF NOT FOUND
 5780             
 5781             CLRBU1,
 5782 36731 0000  TTYSRC, 0
 5783 36732 0036          AND C0037       /GET JOB #
 5784 36733 1351          TAD TTYTBA      /START OF TTY TABLE
 5785 36734 3307          DCA TTYSR1
 5786 36735 6211          DATFLD
 5787 36736 1707          TAD I TTYSR1    /GET UNIT # FROM TABLE
 5788 36737 6201          CDF
 5789 36740 7104          CLL RAL         /POSITION IN DEVTBL
 5790 36741 1163          TAD DEVTBA      /POINTER TO DEVTBL
 5791 36742 1731          TAD I TTYSRC    /INPUT OR OUTPUT
 5792 36743 3307          DCA TTYSR1
 5793 36744 6211          DATFLD
 5794 36745 1707          TAD I TTYSR1    /DDB ADDRESS
 5795 36746 6201          CDF
 5796 36747 2331          ISZ TTYSRC      /INDEX PAST ARGUMENT
 5797 36750 5731          JMP I TTYSRC
 5798             
 5799 36751 3330  TTYTBA, TTYTBL
 5800             
 5801             /FIELD 0 DISPATCH FOR  PEEK IOT
 5802             
 5803 36752 4477  UPEEK,  GETJTW          /GET HIS STATUS-WORD
 5804 36753 0000           JOBSTS
 5805 36754 0362          AND UJPRIV
 5806 36755 7650          SNA CLA         /IS HE PRIVILEGED NOW?
 5807 36756 5547          JMP I UUOERA    /NO - "ILLEGAL IOT"
 5808 36757 6212          CIF+10          /YES - OFF TO FIELD 1
 5809 36760 5761          JMP I .+1
 5810 36761 2700          UPEEK1
 5811 36762 0200  UJPRIV, JSPRIV

      /TSS/8 CONFIGURATION FOR UWM                                      Page 149


 5812                     PAGE
 5813             
 5814                     IFZERO   D680-2 <
 5815             TEST,   IOF             /TO BE ON THE SAFE SIDE
 5816                     DCA X           /STORE THE CHARACTER TO BE PUT OUT (BELL/XOFF)
 5817                     TAD TCHAR               /TEST TCHAR TO SEE IF FLAG IS EXPECTED
 5818                     SZA CLA
 5819                     JMP Y           /YES, PUT THE CHAR IN TCHAR TO WAIT FOR THE FLAG
 5820                     TAD X           /NO FLAG, GET THE CHAR TO BE PUT OUT
 5821                     TLS             /SEND IT OUT
 5822             TEST2,  DCA TCHAR               /REMEMBER IT WAS SENT
 5823                     ION
 5824                     JMP I TEST3             /THIS ROUTINE IS CALLED ONLY ONCE!!!
 5825             Y,      TAD X           /HAVE TO WAIT FOR THE FLAG, GET THE CHAR
 5826                     AND C0377               /REMOVE BIT 0 WHICH IS ALREADY THERE!!!
 5827                     JMP TEST2               /GO BACK STORE IT IN TCHAR TO BE SENT LATER
 5828             
 5829             X,      0
 5830             TEST3,  CHOUT2          >
 5831             
 5832 37000 0000  UCSTO,  0
 5833 37001 3216          DCA X1          /SAVE -3 WHICH IS IN AC FOR COUNT
 5834 37002 4150  Y1,     UDF             /UP TO USER FIELD
 5835 37003 1506          TAD I L2SA      /GET BITS TO CLEAR
 5836 37004 7040          CMA
 5837 37005 6211          DATFLD
 5838 37006 0405          AND I JOBSWA    /CLEAR THEM
 5839 37007 3405          DCA I JOBSWA    /SAVE NEW VALUE
 5840 37010 2106          ISZ L2SA        /BUMP POINTER
 5841 37011 7000          NOP
 5842 37012 2005          ISZ JOBSWA      /BUMP POINTER
 5843 37013 2216          ISZ X1          /COUNT, 3 STATUS WORDS TO CLEAR
 5844 37014 5202          JMP Y1
 5845 37015 5600          JMP I UCSTO     /RETURN
 5846 37016 0000  X1,     0

      /TSS/8 CONFIGURATION FOR UWM                                      Page 150


 5847             /ROUTINE TO DECREMENT THE DISC ACTIVITY-COUNT &
 5848             /START UP THE NEXT TRANSFER IF THERE IS ONE.
 5849 37017 0000  DSKCON, 0
 5850 37020 7340          CLA CLL CMA
 5851 37021 1165          TAD DSBUSY
 5852 37022 3165          DCA DSBUSY      /DECREMENT COUNT
 5853 37023 1165          TAD DSBUSY
 5854 37024 7700          SMA CLA         /IS IT NOW -1?
 5855 37025 4462          JMS I FIUSER    /NO - START THE NEXT TRANSFER
 5856 37026 5617          JMP I DSKCON    /YES - THEN THERE IS NO MORE
 5857             
 5858             /ROUTINE TO SET THIS JOB IN 'BONUS' SO THAT IT HAS
 5859             /SCHEDULING PRIORITY.
 5860 37027 0000  DELBON, 0
 5861 37030 4634          JMS I PTJOBA    /GET HIS JOB NUMBER
 5862 37031 3057          DCA BONUS
 5863 37032 1057          TAD BONUS       /RETURN WITH JOB # IN AC
 5864 37033 5627          JMP I DELBON
 5865             
 5866 37034 5367  PTJOBA, DEVJOB
 5867             
 5868             /TAKE CARE OF DUPLEX AND UNDUPLEX IOT'S
 5869             
 5870 37035 1141  UDUP,   TAD C0200       /DUPLEX BIT IN DDB WORD 1
 5871 37036 3003  UUND,   DCA WS0         /WS0 CONTAINS BIT TO ADD FOR BOTH IOT'S
 5872 37037 1160          TAD JOB
 5873 37040 4464          TTYUSE          /FIND INPUT DDB
 5874 37041 0000           0              / (INPUT SIDE)
 5875 37042 3004          DCA WS1         /ADDRESS OF DDB
 5876 37043 6211          DATFLD
 5877 37044 1404          TAD I WS1       /WORD ONE OF DDB
 5878 37045 0251          AND CMDUPL      /CLEAR DUPLEX BIT
 5879 37046 1003          TAD WS0         /SET IT AS CALLED FOR
 5880 37047 3404          DCA I WS1
 5881 37050 5461          UUOEXT
 5882             
 5883 37051 7577  CMDUPL, -DUPL-1

      /TSS/8 CONFIGURATION FOR UWM                                      Page 151


 5884                     IFZERO CPU-3 <
 5885             DC02EN, 0                       /THIS SUBROUTINE ENABLES ALL STATIONS AND ALL GROUPS
 5886                     CLA CMA
 5887                     MTON
 5888                     CLA                     /THEY'RE ENABLED NOW
 5889                     JMP I   DC02EN          /BYE BYE
 5890             
 5891             
 5892             DC02SL, 0                       /THIS ROUTINE SELECTS A GIVEN STATION AND GROUP
 5893                     TAD     DC7777          /ENTERED WITH LINE NUMBER IN AC.
 5894                     DCA     DC02EN          /SAVE FOR A SECOND
 5895                     TAD     DC17
 5896                     MTON                    /DISABLE ALL GROUPS
 5897                     CLA
 5898                     TAD     DC02EN          /REGET THE LINE NUMBER
 5899                     RTR
 5900                     RAR
 5901                     AND     C0003           /JUST MAJOR GROUP NUMBER
 5902                     CMA                     /ONE'S COMP NEGATE
 5903                     DCA     DCTEMP          /NOW PREPARE TO SET UP THE GROUP BITS.
 5904                     TAD     DC0220          /GROUP 1 BIT OFFSET ONE.
 5905                     CLL RAR                 /NOW SHIFT THE GROUP BIT ACCROSS
 5906                     ISZ     DCTEMP          /DONE?
 5907                     JMP     .-2             /NOPE
 5908                     DCA     DCTEMP          /SAVE GROUP BIT NOW IN DCTEMP
 5909                     TAD     DC02EN          /REGET THE LINE NUMBER
 5910                     AND     C0007           /JUST THE STATION BITS NOW
 5911                     CMA CLL CML             /SET THE LINC TO 1 WHILE NEGATING IT
 5912                     DCA     DC02EN
 5913                     RAR                     /ROTATE STATION BIT
 5914                     ISZ     DC02EN          /DONE
 5915                     JMP     .-2             /NOPE. LOOP
 5916                     TAD     DCTEMP          /ADD IN THE GROUP BIT
 5917                     MTON                    /SELECT IT, BABY
 5918                     CLA
 5919                     JMP I   DC02SL          /AND RETURN NOW
 5920             
 5921             DCTEMP, 0
 5922             DC17,   17
 5923             DC7777, -1
 5924             
 5925             TSER,   TAD     DC02LN          /GET THE LINE NUMBER NOW
 5926                     TAD     TBUFF           /GET THE TTY BUFFER NOW
 5927                     DCA     KTBUF           /SAVE FOR A SECOND NOW
 5928                     TAD I   KTBUF           /DOES HE HAVE A CHARACTER THERE?
 5929                     SPA CLA
 5930                     JMP     TSERX           /NOPE. JUST CLEAR THE FLAG
 5931                     TAD I   KTBUF           /GET THE CHARACTER NOW
 5932                     JMS I   TSERPP          /OUTPUT IT USING THE SPECIAL LITTLE ROUTINE NOW
 5933             DC02LN, 0                       /LINE NUMBER
 5934                     CLL CML RAR             /SET THE HIGH ORDER BIT ON[I HOPE THIS WORKS]
 5935                     DCA I   KTBUF           /STASH AWAY
 5936                     JMS     DC02EN          /ENABLE THE TTY'S NOW
 5937                     DISMIS                  /DISMIS IT.
 5938             
 5939             TSERPP, JBDC02                  /POINTER TO THE CHARACTER PUTTER
 5940             

      /TSS/8 CONFIGURATION FOR UWM                                      Page 152


 5941             TSERX,  TAD     DC02LN          /GET THE LINE NUMBER NOW
 5942                     SZA
 5943                     JMP     TSERX1          /IT'S THE DAMN DC02. WHAT A PAIN
 5944                     TCF
 5945                     JMP     TSERC           /CLEAN UP AND EXIT
 5946             
 5947             TSERX1, JMS     DC02SL          /SELECT THE RIGHT TTY
 5948                     MTCF
 5949                     JMP     TSERC           /CLEAN UP AND EXIT
 5950             
 5951             KSER,   TAD     DC02LN          /GET THE LINE NUMBER NOW
 5952                     TAD     KBUFF
 5953                     DCA     KTBUF           /PLAY AROUND WITH THE BUFFER POINTERS
 5954                     TAD     DC02LN          /REGET THE LINE NUMBER NOW
 5955                     SZA
 5956                     JMP     KSSER1          /DC02 INPUT
 5957                     KRB                     /READ IN THE CHARACTER NOW
 5958                     JMP     KSSER2          /COMMON FIXER
 5959             
 5960             KSSER1, JMS     DC02SL          /SELECT THE LINE NOW
 5961                     MKRB                    /READ IN THE CHARACTER NOW
 5962             
 5963             KSSER2, TAD     C1000           /FORCE THE CHARACTER NON-ZERO
 5964             TSERC,  DCA I   KTBUF
 5965                     JMS     DC02EN
 5966                     ISZ     ECHOFL
 5967                     DISMIS                  /NOT ECHOING
 5968                     TAD     .+2
 5969                     DISMIS                  /RETURN NOW
 5970                     ECHO                    /WITH ECHO POINTER IN THE AC.
 5971             ECHOFL, -1
 5972             
 5973             KTBUF,  0
 5974             DC0220, 20                      /GROUP STARTER UPPER
 5975                     >

      /TSS/8 CONFIGURATION FOR UWM                                      Page 153


 5976                     IFNZRO CORTBL-.&4000    <GLITCH; *.-1>
 5977       7100          *CORTBL
 5978             /
 5979             /THIS IS THE FIELD ALLOCATION TABLE
 5980             /THE LOCK-BITS ARE REMOVED BY INIT AS A FUNCTION
 5981             /OF THE NUMBER OF USER FIELDS.
 5982 37100 2000  CORTBL, LOCK    /DATFLD
 5983 37101 2000          LOCK    /FIELD 2
 5984 37102 2000          LOCK    /FIELD 3
 5985 37103 2000          LOCK    /FIELD 4
 5986 37104 2000          LOCK    /FIELD 5
 5987 37105 2000          LOCK    /FIELD 6
 5988 37106 2000          LOCK    /FIELD 7
 5989             
 5990             /
 5991             /THE FOLLOWING IS THE LEVEL-2 ACTIVITY QUEUE.
 5992 37107 0000  L2QTB,  ZBLOCK 20
      37110 0000
      37111 0000
      37112 0000
      37113 0000
      37114 0000
      37115 0000
      37116 0000
      37117 0000
      37120 0000
      37121 0000
      37122 0000
      37123 0000
      37124 0000
      37125 0000
      37126 0000
 5993             
 5994                     IFZERO D680 <
 5995 37127 0000  TIBUFF, ZBLOCK NULINE+1 /INPUT CHAR BUFFER FOR EACH LINE
      37130 0000
      37131 0000
      37132 0000
      37133 0000
      37134 0000
      37135 0000
      37136 0000
      37137 0000
      37140 0000
      37141 0000
      37142 0000
      37143 0000
      37144 0000
      37145 0000
      37146 0000
 5996 37147 0000  TOBUFF, ZBLOCK NULINE+1 /OUTPUT CHAR BUFFER
      37150 0000
      37151 0000
      37152 0000
      37153 0000
      37154 0000
      37155 0000

      /TSS/8 CONFIGURATION FOR UWM                                      Page 154


      37156 0000
      37157 0000
      37160 0000
      37161 0000
      37162 0000
      37163 0000
      37164 0000
      37165 0000
      37166 0000
 5997                             IFNZRO CPU-3 <
 5998 37167 0000  TIDEV,  ZBLOCK NULINE+1 /INPUT DEVICE CODE TABLE
      37170 0000
      37171 0000
      37172 0000
      37173 0000
      37174 0000
      37175 0000
      37176 0000
      37177 0000
      37200 0000
      37201 0000
      37202 0000
      37203 0000
      37204 0000
      37205 0000
      37206 0000
 5999 37207 0000  TODEV,  ZBLOCK NULINE+1 /OUTPUT DEVICE CODE TABLE
      37210 0000
      37211 0000
      37212 0000
      37213 0000
      37214 0000
      37215 0000
      37216 0000
      37217 0000
      37220 0000
      37221 0000
      37222 0000
      37223 0000
      37224 0000
      37225 0000
      37226 0000
 6000                             >
 6001                             IFZERO CPU-3 <
 6002             TIDEV,  0
 6003             TODEV,  0
 6004                             >
 6005       37227  TYBEND= .               /END OF LINE-CONTROL TABLES
 6006                     >
 6007             
 6008                     IFZERO  D680-2  <
 6009             
 6010                     *T8OBF
 6011                     ZBLOCK NULINE
 6012             
 6013                     *T8OBF2
 6014                     ZBLOCK NULINE

      /TSS/8 CONFIGURATION FOR UWM                                      Page 155


 6015             
 6016                     *T8IBF
 6017                     ZBLOCK NULINE+NULINE    /CHARACTER / LINE #
 6018             
 6019             / ABOVE AREA IS FOR 680 BUFFER
 6020             
 6021             
 6022                     *T8IN
 6023                     TTI
 6024                     0               /LSW  LINE #
 6025                     2000            /CAW
 6026                     JMS I T8K99             /
 6027                     TTI
 6028                     10              /LSW  LINE #
 6029                     2000            /CAW
 6030                     JMS I T8K99             /
 6031                     TTI
 6032                     20              /LSW  LINE #
 6033                     2000            /CAW
 6034                     JMS I T8K99             /
 6035                     TTI
 6036                     30              /LSW  LINE #
 6037                     2000            /CAW
 6038                     JMS I T8K99             /
 6039                     TTI
 6040                     040             /LSW  LINE #
 6041                     2000            /CAW
 6042                     JMS I T8K99             /
 6043                     TTI
 6044                     050             /LSW  LINE #
 6045                     2000            /CAW
 6046                     JMS I T8K99             /
 6047                     TTI
 6048                     060             /LSW  LINE #
 6049                     2000            /CAW
 6050                     JMS I T8K99             /
 6051                     TTI
 6052                     070             /LSW  LINE #
 6053                     2000            /CAW
 6054                     JMS I T8K99             /
 6055                     TTI
 6056                     0100            /LSW  LINE #
 6057                     2000            /CAW
 6058                     JMS I T8K99             /
 6059                     TTI
 6060                     0110
 6061                     2000
 6062                     JMS I T8K99             /
 6063                     TTI
 6064                     0120            /LSW  LINE #
 6065                     2000            /CAW
 6066                     JMS I T8K99             /
 6067                     TTI
 6068                     0130            /LSW  LINE #
 6069                     2000            /CAW
 6070                     JMS I T8K99             /
 6071                     TTI

      /TSS/8 CONFIGURATION FOR UWM                                      Page 156


 6072                     0140            /LSW  LINE #
 6073                     2000            /CAW
 6074                     JMS I T8K99             /
 6075                     TTI
 6076                     0150            /LSW  LINE #
 6077                     2000            /CAW
 6078                     JMS I T8K99             /
 6079                     TTI
 6080                     0160            /LSW  LINE #
 6081                     2000            /CAW
 6082                     JMS I T8K99             /
 6083                     TTI
 6084                     0170            /LSW  LINE #
 6085                     2000            /CAW
 6086                     JMS I T8K99             /
 6087                     TTI
 6088                     0200            /LSW  LINE #
 6089                     2000            /CAW
 6090                     JMS I T8K99             /
 6091                     TTI
 6092                     0210            /LSW  LINE #
 6093                     2000            /CAW
 6094                     JMS I T8K99             /
 6095                     TTI
 6096                     0220            /LSW  LINE #
 6097                     2000            /CAW
 6098                     JMS I T8K99             /
 6099                     TTI
 6100                     0230            /LSW  LINE #
 6101                     2000            /CAW
 6102                     JMS I T8K99             /
 6103             
 6104             
 6105                     *TYBEND-1
 6106                     JMP I T8K8
 6107             
 6108             
 6109                     >

      /TSS/8 CONFIGURATION FOR UWM                                      Page 157


 6110                     IFNZRO 7323-.&4000      <GLITCH; *.-1>
 6111       7323          *7323
 6112             
 6113             /ROUTINE TO FIND THE BEST FIELD TO SWAP. THIS ALGORITHM
 6114             /GIVES A SYSTEM PHANTOM PRIORITY OVER NON-RUNNABLE JOBS
 6115             /BUT NOT OVER RUNNABLE JOBS. SINCE INACTIVE JOBS THUS TEND
 6116             /TO BE SWAPPED OUT, MORE CORE IS AVAILABLE FOR ACTIVE JOBS
 6117             /AND LESS SWAPPING NEEDS TO BE DONE.
 6118             
 6119 37323 1365  SCNSWP, TAD SCNSAV
 6120 37324 3764          DCA I SCNPTR    /SET OUR OWN POINTER IN 'CORE'
 6121 37325 1763          TAD I SCNCNT
 6122 37326 3003          DCA WS0         /SET FIELD COUNTER
 6123 37327 4570  SCN1,   CORE            /FIND AN UN-PROTECTED FIELD
 6124 37330 7700           FSWP+LOCK+NOTRUN+FIP+SI+FIX
 6125 37331 5345          JMP SCN2        /NONE THERE
 6126 37332 0035          AND C0007
 6127 37333 3056          DCA FORCE       /SAVE THE FIELD NUMBER
 6128 37334 1056          TAD FORCE
 6129 37335 1162          TAD CORTBA
 6130 37336 3005          DCA JOBSWA
 6131 37337 1405          TAD I JOBSWA    /GET THE 'CORTBL' ENTRY
 6132 37340 0036          AND C0037       / AND PICK OFF THE JOB NUMBER
 6133 37341 4502          RUNABL          /IS THE JOB RUNNABLE?
 6134 37342 5357          JMP SCN3        /NO - FORCE IT OUT
 6135 37343 2003          ISZ WS0
 6136 37344 5327          JMP SCN1        /YES - TRY AGAIN
 6137 37345 3056  SCN2,   DCA FORCE       /CLEAR 'FORCE'
 6138 37346 4570          CORE            /CHECK FOR NON-BUSY PHANTOM
 6139 37347 7037           FSWP+LOCK+NOTRUN+37
 6140 37350 7410          SKP
 6141 37351 5766          JMP I SCN12A    /OK - JUST LOAD OVER PHANTOM
 6142 37352 4570          CORE            /NO - LOOK FOR ANY VALID FIELD
 6143 37353 7700           FSWP+LOCK+NOTRUN+FIP+SI+FIX
 6144 37354 5767          JMP I SCN13A    /NOTHING TO SWAP - FIND NEW JOB
 6145 37355 0035          AND C0007
 6146 37356 3056          DCA FORCE       /FOUND ONE - SAVE THE FIELD NUMBER
 6147 37357 1764  SCN3,   TAD I SCNPTR    /PICK UP AND SAVE THE SEARCH POINTER
 6148 37360 3365          DCA SCNSAV      / SO WE CAN SWAP FAIRLY
 6149 37361 5762          JMP I .+1       /THEN GO SET UP TO SWAP OUT
 6150 37362 2744          SCHFR1
 6151             
 6152 37363 1300  SCNCNT, CORCNT
 6153 37364 1360  SCNPTR, CORTBP  /SEARCH POINTER IN 'CORE'
 6154 37365 7101  SCNSAV, CORTBL+1
 6155 37366 2733  SCN12A, SCHE12
 6156 37367 2611  SCN13A, SCHE13
 6157             
 6158             /CODE TO HANDLE SEVERAL SIMPLE RESIDENT-IOTS. ALL
 6159             /THEY DO IS RETURN A SINGLE VALUE IN THE AC.
 6160 37370 1160  UUSE,   TAD JOB         /RETURN JOB # IN AC
 6161 37371 5373          JMP UUSAC2
 6162             
 6163 37372 1156  USIZE,  TAD SEGSIZ      /RETURN SEGMENT SIZE IN AC
 6164 37373 3106  UUSAC2, DCA L2SA
 6165 37374 5461          UUOEXT

      /TSS/8 CONFIGURATION FOR UWM                                      Page 158


 6166             /PAPER TAPE PUNCH SERVICE FOR TSS/8
 6167             
 6168 37375 6212  UPTP,   CIF 10          /FIELD 1 HAS THIS ROUTINE 
 6169 37376 4543          JMS I   PTPCHK          /DOES HE OWN DEVICE?
 6170 37377 3241          DEVTBE+1                /POINTER TO PUNCH ENTRY IN DEVTBL
 6171 37400 4306          JMS     PTPINI          /YES; INITIALIZE IT.
 6172             
 6173 37401 4716          JMS I   PTPIOT          /ANALYZE IOT
 6174 37402 5230          JMP     UPST            /PUNCH STRING
 6175 37403 0004  PTPFL,  JSPTP
 6176 37404 5226          JMP     UPPWX           /FLAG TEST AND FLAG NOT SET
 6177             
 6178 37405 7650          SNA CLA                 /PCF OR PLS?
 6179 37406 5227          JMP     UPPX            /NO - EXIT WITH NO WAIT
 6180 37407 1317          TAD     PTPCNT          /YES-IS THERE ROOM?
 6181 37410 7650          SNA CLA
 6182 37411 5223          JMP     UPPWAT          /NO - CLEAR FLAG AND REDO
 6183 37412 6211          DATFLD                  /YES - PUT CHARACTER IN BUFFER
 6184 37413 6002          IOF                     /DON'T LET A PUNCH INTERRUPT SCREW US
 6185 37414 1106          TAD     L2SA
 6186 37415 3657          DCA I   PTPFIL
 6187 37416 2257          ISZ PTPFIL
 6188 37417 2317          ISZ     PTPCNT          /ONE LESS SLOT IN BUFFER
 6189 37420 7000  PTPEMP, NOP                     /IF IT GOES TO 0 WE DON'T CARE
 6190 37421 4271          JMS PTPGO               /START PUNCH IF NECESSARY
 6191 37422 5227          JMP UPPX                /EXIT WITH OUT WAITING
 6192 37423 7240  UPPWAT, STA                     /BACK UP USER'S PC TO POINT TO THIS
 6193 37424 1104          TAD     L2SV0           /IOT
 6194 37425 3104          DCA     L2SV0
 6195             
 6196 37426 1203  UPPWX,  TAD PTPFL               /CLEAR PUNCH FLAG
 6197 37427 5461  UPPX,   UUOEXT
 6198             
 6199 37430 1317  UPST,   TAD     PTPCNT          /PUNCH STRING
 6200 37431 7650          SNA CLA                 /ROOM IN BUFFER
 6201 37432 5223          JMP     UPPWAT          /NO - EXIT AND WAIT
 6202 37433 4150          UDF                     /YES - SELECT USER FIELD
 6203 37434 1506          TAD I   L2SA            /GET CHAR COUNT
 6204 37435 7650          SNA CLA                 /ANYTHING TO DO?
 6205 37436 5266          JMP     PTP3A           /NO (CHAR COUNT IS ALREADY=0)
 6206 37437 1106          TAD     L2SA            /YES
 6207 37440 7001          IAC
 6208 37441 3004          DCA     WS1             /POINTS TO WORD 2 OF PARAMETERS
 6209 37442 1404          TAD I   WS1
 6210 37443 6002          IOF
 6211 37444 3015          DCA     AXS1            /ADDRESS-1 OF DATA TO PUNCH
 6212 37445 1415  PTP2A,  TAD I   AXS1            /GET CHARACTER FROM USER AREA
 6213 37446 6211          DATFLD                  /SELECT BUFFER FIELD
 6214 37447 3657          DCA I   PTPFIL          /PLACE IN BUFFER
 6215 37450 2257          ISZ PTPFIL
 6216 37451 4150          UDF                     /SELECT USER FIELD
 6217 37452 2317          ISZ     PTPCNT          /STILL ROOM?
 6218 37453 5263          JMP     PTP1A           /YES
 6219 37454 1015          TAD     AXS1            /NO - UPDATE USER'S PARAMETERS
 6220 37455 3404          DCA I   WS1             /STARTING ADD-1
 6221 37456 2506          ISZ I   L2SA            /UPDATE COUNT OF CHARACTERS TO PUNCH
 6222 37457 7000  PTPFIL, NOP                     /OUR THANKS TO CARLETON COLLEGE FOR THIS ONE

      /TSS/8 CONFIGURATION FOR UWM                                      Page 159


 6223 37460 3106          DCA     L2SA            /CLEAR HIS AC
 6224 37461 4271          JMS PTPGO               /START THE PTP
 6225 37462 5226          JMP     UPPWX           /WAIT FOR BUFFER TO DRAIN
 6226             
 6227 37463 2506  PTP1A,  ISZ I   L2SA            /ANYTHING LEFT TO PUNCH?
 6228 37464 5245          JMP     PTP2A           /YES, DO ANOTHER CHARACTER
 6229 37465 4271          JMS PTPGO
 6230 37466 3106  PTP3A,  DCA     L2SA            /NO, ALL DONE
 6231 37467 5670          JMP I   .+1             /EXIT WITH PC INCREMENTED
 6232 37470 0324          UUOEX2

      /TSS/8 CONFIGURATION FOR UWM                                      Page 160


 6233 37471 0000  PTPGO,  0
 6234 37472 2320          ISZ     PTPBSY          /PUNCH ON?
 6235 37473 5303          JMP PTPION              /YES - PINT WILL GET THIS CHAR
 6236 37474 6211          DATFLD
 6237 37475 1620          TAD I   PTPEMP          /NO - START IT
 6238 37476 6201          CDF
 6239 37477 6026  PTP2,   PLS             /PUNCH CHAR
 6240 37500 7600  PTPBSZ, 7600            /-SIZE OF PUNCH BUFFER (ALSO 'CLA')
 6241 37501 1305          TAD RACE3A      /GET PARAMETER ADDRESS
 6242 37502 4745          JMS I PTPTIM
 6243 37503 6001  PTPION, ION             /TURN INTERRUPT BACK ON
 6244 37504 5671          JMP I   PTPGO           /RETURN
 6245 37505 5160  RACE3A, RACE3
 6246             
 6247 37506 0000  PTPINI, 0                       /INITIALIZE PUNCH BUFFER
 6248 37507 1300          TAD     PTPBSZ          /-MAX# CHARS IN BUFFER
 6249 37510 3317          DCA     PTPCNT
 6250 37511 1141          TAD     C0200           /FILL POINTER TO START
 6251 37512 3257          DCA     PTPFIL
 6252 37513 1141          TAD     C0200           /EMPTY POINTER TO START
 6253 37514 3220          DCA     PTPEMP
 6254 37515 5706          JMP I   PTPINI          /RETURN
 6255             
 6256 37516 2067  PTPIOT, UKT1
 6257 37517 0000  PTPCNT, 0
 6258 37520 7777  PTPBSY, -1      /-1 FOR PUNCH OFF; .GE.=0 FOR ON

      /TSS/8 CONFIGURATION FOR UWM                                      Page 161


 6259             /PAPER TAPE PUNCH INTERUPT SERVICE
 6260             
 6261 37521 2220  PTPINT, ISZ     PTPEMP          /BUMP EMPTY POINTER
 6262 37522 1257          TAD     PTPFIL
 6263 37523 7041          CIA
 6264 37524 1220          TAD     PTPEMP
 6265 37525 7700          SMA CLA                 /HAS EMPTY PTR CAUGHT FILL PTR
 6266 37526 5337          JMP PINT1       /YES - STOP PUNCH
 6267 37527 6211          DATFLD          /NO - GET CHAR AND PUNCH
 6268 37530 1620          TAD I PTPEMP
 6269 37531 6026  PTP3,   PLS             /LOAD & PUNCH
 6270 37532 7300          CLA CLL
 6271 37533 6021  PTP4,   PSF             /FLAG READY AGAIN?
 6272 37534 5501          DISMIS          /NO
 6273             
 6274                     IFZERO TC01-1 <
 6275 37535 4746          JMS I DTCHK2    /YES - BUT IS THE DECTAPE READY NOW?
 6276                     >
 6277 37536 5321          JMP PTPINT      /NO - GO LOAD NEXT CHAR TO SEND
 6278                     IFZERO TC01 <
 6279                     NOP             / (SO 'PTP5' DOESN'T MOVE)
 6280                     >
 6281             
 6282             PTP5,
 6283 37537 6022  PINT1,  PCF             /CLEAR PUNCH FLAG
 6284 37540 4744          JMS I PTPL3     /INDICATE PUNCH IS OFF & TURN OFF TIMER
 6285 37541 1343          TAD .+2         /SCHEDULE LEVEL 2 SERVICE
 6286 37542 5501          DISMIS
 6287 37543 3664          PTPL2
 6288             
 6289 37544 5144  PTPL3,  PLRACE
 6290 37545 3146  PTPTIM, PTTIM
 6291                     IFZERO TC01-1 <
 6292 37546 0272  DTCHK2, DTCHK
 6293                     >

      /TSS/8 CONFIGURATION FOR UWM                                      Page 162


 6294             /ROUTINE TO SET FLAG IN USER STATUS REG AND EXIT.
 6295             /CALLING SEQUENCE:
 6296             /       TAD (FLAGS TO SET)
 6297             /       LINK = 0 FOR EXIT THRU EXIT
 6298             /       LINK = 1 FOR EXIT THRU UUOEXT
 6299             /       JMS PTSTAR
 6300             /        PTR TO DEVTBL ENTRY FOR THIS DEVICE
 6301             
 6302 37547 0000  PTSTAR, 0
 6303 37550 3367          DCA PTFLAG      /SAVE FLAGS TO SET
 6304 37551 7010          RAR
 6305 37552 3003          DCA PTST1       /SAVE INCOMING LINK
 6306 37553 1747          TAD I PTSTAR
 6307 37554 3004          DCA WS1         /POINTS TO DEVTBL
 6308 37555 6211          DATFLD
 6309 37556 1404          TAD I WS1
 6310 37557 7450          SNA             /IS THIS JOB STILL AROUND?
 6311 37560 5370          JMP PTEXIT      /NO
 6312 37561 4774          JMS I PTPBON    /GET JOB # FROM DDB & SET 'BONUS'
 6313 37562 1044          TAD JOBTBA      /START OF JOB TABLE
 6314 37563 4574          GETJTA          /GET ADDRESS OF STR1
 6315 37564 0001           JOBSTS+1
 6316 37565 6211          DATFLD          /FIELD 1
 6317 37566 4460          IOR             /OR IN FLAGS
 6318 37567 0000  PTFLAG,  0
 6319 37570 1003  PTEXIT, TAD PTST1
 6320 37571 7700          SMA CLA         /WAS LINK SET ON ENTRY?
 6321 37572 5467          EXIT            /NO - TAKE LEVEL-2 EXIT
 6322 37573 5461          UUOEXT          /YES - TAKE RESIDENT-IOT EXIT
 6323             
 6324 37574 7027  PTPBON, DELBON
 6325       0003  PTST1=  WS0

      /TSS/8 CONFIGURATION FOR UWM                                      Page 163


 6326                     PAGE
 6327                     
 6328 37600 0000  SWPIO,  0
 6329 37601 7346          CLA CLL CMA RTL /=3 IN AC
 6330 37602 3343          DCA DSERRI      /#OF TRIES
 6331 37603 1054          TAD FINISH
 6332 37604 7700          SMA CLA         /WHICH WAY DO WE SWAP?
 6333 37605 5210          JMP INSET       /SWAP IN
 6334 37606 4231          JMS SWOUT       /SWAP OUT
 6335 37607 5600          JMP I SWPIO     /RETURN
 6336             
 6337 37610 4212  INSET,  JMS SWPIN       /SWAP IN
 6338 37611 5600          JMP I SWPIO     /RETURN
 6339             
 6340 37612 0000  SWPIN,  0
 6341 37613 6601          DCMA            /TO STOP THE DISC
 6342 37614 1230          TAD SWINA       /RETURN ADDRESS FOR INTURRUPT CHAIN
 6343 37615 3745          DCA I DSWATA    /SAVE IT
 6344 37616 1153          TAD INTRC       /GET THE TRAC # TO BE READ IN
 6345             
 6346                     IFZERO RF08-40 <
 6347                     TAD SQREQ       /FIELD TO BE USED
 6348                     DEAL
 6349                     CLA
 6350                     NOP             /JUST FOR PROPER LENGTH
 6351                     >
 6352                     IFZERO RF08 <
 6353 37617 6643          DXAL
 6354 37620 1053          TAD SQREQ       /FIELD TO BE SWAPPED IN
 6355 37621 1353          TAD C0500       /ENABLE INTERRUPT ON ERROR AND ON COMPLETION
 6356 37622 6615          DIML
 6357                     >
 6358 37623 3350          DCA DSWC        /WORD COUNT
 6359 37624 7040          CMA
 6360 37625 3351          DCA DSMA        /CORE ADDRESS
 6361 37626 6603          DMAR
 6362 37627 5612          JMP I SWPIN
 6363 37630 7674  SWINA,  SWINR           /SWAPIN RETURN ADDRESS
 6364             
 6365 37631 0000  SWOUT,  0
 6366 37632 6601          DCMA            /TO STOP THE DISC IN CASE OF PROBLEM
 6367 37633 1247          TAD SWOUA       /RETURN ADDRESS FOR INTERRUPT CHAIN
 6368 37634 3745          DCA I DSWATA    /SAVE IT
 6369 37635 1154          TAD OUTTRC      /GET THE TRAC # TO BE SWAPPED OUT
 6370                     IFZERO RF08-40 <
 6371                     TAD SQREQ       /FIELD TO BE SWAPPED OUT
 6372                     DEAL
 6373                     CLA
 6374                     NOP
 6375                     >
 6376                     IFZERO RF08 <
 6377 37636 6643          DXAL
 6378 37637 1053          TAD SQREQ       /FIELD TO SWAPPED OUT
 6379 37640 1353          TAD C0500       /INTERRUPT ON ERROR AND ON COMPLETION
 6380 37641 6615          DIML
 6381                     >
 6382 37642 3350          DCA DSWC        /WORD COUNT

      /TSS/8 CONFIGURATION FOR UWM                                      Page 164


 6383 37643 7040          CMA
 6384 37644 3351          DCA DSMA        /CORE ADDRESS
 6385 37645 6605          DMAW
 6386 37646 5631          JMP I SWOUT
 6387             
 6388             
 6389 37647 7650  SWOUA,  SWOUTR          /RETURN ADDRESS AFTER SWAP OUT
 6390             
 6391 37650 5260  SWOUTR, JMP SOUTR1      /ERROR
 6392 37651 1054          TAD FINISH      /FINISH = -FIELD # AT THIS STAGE MAKE IT +
 6393 37652 7041          CIA
 6394 37653 3054          DCA FINISH      /SAVE IT
 6395 37654 7346          CLA CLL CMA RTL / -3
 6396 37655 3343          DCA DSERRI      /# OF TRIES FOR SWAP IN
 6397 37656 4212  SOUT5,  JMS SWPIN
 6398 37657 5501          DISMIS          /GO BACK TO WHAT WE WERE DOING
 6399 37660 2343  SOUTR1, ISZ DSERRI      /3 TRIES BEFORE GIVING UP
 6400 37661 5272          JMP SOUTR2
 6401             SOUTR4,
 6402                             IFZERO RF08  <
 6403 37662 6616          DIMA            /GET THE ERROR FLAGS
 6404 37663 0034          AND C0004       /IS IT DUE TO EAE?
 6405 37664 7650          SNA CLA
 6406                                     >
 6407 37665 1270          TAD NORMAL      /NO, DISC IN REAL TROUBLE
 6408 37666 1271          TAD SLEP2A      /EAE, PUT TO SLEEP
 6409 37667 5375          JMP NOTOK       /JMP TO COMMON PART  SAVE CORE!!!
 6410             
 6411 37670 0715  NORMAL, -SLEEP2+SWERR
 6412 37671 2125  SLEP2A, SLEEP2
 6413             
 6414 37672 4231  SOUTR2, JMS SWOUT       /TRY AGAIN TO SWAP OUT
 6415 37673 5501          DISMIS
 6416             
 6417 37674 5277  SWINR,  JMP SWIN1       /ERROR
 6418 37675 1045          TAD SWPGD2      /OK WHAT TO DO NEXT? L2Q
 6419 37676 5375          JMP NOTOK       /COMMON CODE
 6420 37677 2343  SWIN1,  ISZ DSERRI      /TRY 3 TIMES ON ERROR
 6421 37700 5256          JMP SOUT5
 6422 37701 5262          JMP SOUTR4      /GIVE UP

      /TSS/8 CONFIGURATION FOR UWM                                      Page 165


 6423             /START DISC TRANSFER
 6424             /CALL   TAD ADDRESS OF PARAMETERS
 6425             /       DSGO
 6426             /       RETURN
 6427             
 6428       0012  DSPAR=  12
 6429             
 6430 37702 0000  DSGO0,  0
 6431 37703 3342          DCA DSPARM
 6432 37704 7346          CLA CLL CMA RTL
 6433 37705 3343          DCA DSERRI
 6434 37706 4310          JMS DSTRYA
 6435 37707 5702          JMP I DSGO0
 6436             
 6437 37710 0000  DSTRYA, 0
 6438 37711 6601          DCMA            /CLEAR THE FLAG & STOP THE DISC
 6439 37712 1344          TAD DSRETA
 6440 37713 3745          DCA I DSWATA
 6441 37714 7240          CLA CMA         /ADDRESS OF PARA-1 FOR INDEX REGISTER
 6442 37715 1342          TAD DSPARM
 6443 37716 3012          DCA DSPAR
 6444 37717 6211          DATFLD
 6445 37720 1412          TAD I DSPAR     /FUNCTION
 6446 37721 3340          DCA DSRORW
 6447 37722 1412          TAD I DSPAR     /DISC EXTENSION
 6448             
 6449                     IFZERO RF08-40 <
 6450                     CLL RTL
 6451                     CLL RAL
 6452                     TAD I DSPAR     /MEMORY EXTENSION
 6453                     CLL RAL
 6454                     DEAL
 6455                     CLA
 6456                     >
 6457                     IFZERO RF08 <
 6458 37723 7112          CLL RTR
 6459 37724 6643          DXAL
 6460 37725 1412          TAD I DSPAR
 6461 37726 7104          CLL RAL
 6462 37727 0140          AND C0070
 6463 37730 1353          TAD C0500
 6464 37731 6615          DIML            /LOAD INTERRUPT ENABLE AND MEMORY EXTENSION
 6465                     >
 6466 37732 1412          TAD I DSPAR
 6467 37733 3350          DCA DSWC
 6468 37734 1412          TAD I DSPAR
 6469 37735 3351          DCA DSMA
 6470 37736 1412          TAD I DSPAR
 6471 37737 6201          CDF
 6472 37740 0000  DSRORW, 0
 6473 37741 5710          JMP I DSTRYA
 6474             
 6475 37742 0000  DSPARM, 0
 6476 37743 0000  DSERRI, 0
 6477 37744 7760  DSRETA, DSRET
 6478 37745 0241  DSWATA, DSWAIT
 6479             

      /TSS/8 CONFIGURATION FOR UWM                                      Page 166


 6480                     IFNZRO 7750-.&4000      <GLITCH; *.-1>
 6481       7750          *7750
 6482 37750 7751          7751    /FOR LOADING INTO FIELD 0 ON INITIALIZATION
 6483 37751 7751          7751    /(SINCE THE 4K TRANSFER OVERWRITES THE DATA BREAK LOCATIONS)
 6484             
 6485 37752 2122  SLEEPA, SLEEP
 6486 37753 0500  C0500,  500
 6487 37754 0000          0               /FOR DECTAPE SERVICE
 6488 37755 0000          0               /FOR DECTAPE SERVICE
 6489 37756 4310  DSERR1, JMS DSTRYA
 6490 37757 5501          DISMIS
 6491 37760 5363  DSRET,  JMP .+3         /ERROR
 6492 37761 7001          IAC
 6493 37762 5373          JMP OK          /OK
 6494 37763 2343          ISZ DSERRI
 6495 37764 5356          JMP DSERR1
 6496             
 6497                     IFZERO RF08 <
 6498 37765 6616          DIMA
 6499 37766 0034          AND C0004       /IS DRL FLAG ON?
 6500 37767 7650          SNA CLA
 6501 37770 5373          JMP OK          /NO, NORMAL ERROR RETURN
 6502 37771 1352          TAD SLEEPA      /YES, EAE MAY BE THE REASON PUT IT TO SLEEP
 6503 37772 5375          JMP NOTOK
 6504                     >
 6505 37773 6211  OK,     DATFLD
 6506 37774 1412          TAD I DSPAR
 6507 37775 6201  NOTOK,  CDF
 6508 37776 6601          DCMA
 6509 37777 5501          DISMIS          /RETURN TO MONITOR
 6510             
 6511       7750  DSWC=   7750
 6512       7751  DSMA=   7751
 6513             
 6514             /////   $$$$$

      No detected errors
