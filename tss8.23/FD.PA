///	HANDLER FOR THE ADC FLOPPY DISC
/
IFNDEF FDN	<FDN=	1>
/
IDTRK=	20	/FIXED LOCATION FOR 'READ SECTOR I.D.'
IDSECT=	21
/
X=	20	/IOT DIGIT FOR FIRST CONTROLLER
Y=	30
/
CLRC=	6700+X	/CLEAR CONTROLLER
RTSR=	6701+X	/READ STATUS REGISTER
RTCA=	6703+X	/READ CURRENT ADDRESS REGISTER
DKGO=	6704+X	/START OPERATION
LTCR=	6705+X	/LOAD COMMAND REGISTER
LCAR=	6706+X	/LOAD CURRENT ADDRESS REGISTER
LDTA=	6707+X	/LOAD THE DATA REGISTER
SKRY=	6700+Y	/SKIP ON READY
SKER=	6701+Y	/SKIP ON ERROR
SKCE=	6702+Y	/SKIP ON CRC ERROR
/
	*0
	-1	/ONE HANDLER
	IFZERO FDN	<DEVICE FDK0; DEVICE FD0>
	IFZERO FDN-1	<DEVICE FDK1; DEVICE FD1>
	IFZERO FDN-2	<DEVICE FDK2; DEVICE FD2>
	IFZERO FDN-3	<DEVICE FDK3; DEVICE FD3>
	IFZERO FDN-4	<DEVICE FDK4; DEVICE FD4>
	IFZERO FDN-5	<DEVICE FDK5; DEVICE FD5>
	IFZERO FDN-6	<DEVICE FDK6; DEVICE FD6>
	IFZERO FDN-7	<DEVICE FDK7; DEVICE FD7>
	4400; FDK0-200+4000; ZBLOCK 2
///
	*200
/
/SUBROUTINE TO SELECT THE DATA-BUFFER'S DATA FIELD
FDUDF,	0
	HLT
	JMP I FDUDF
/
FDPFIX,	-74-1
FD37,	37
FD70,	70
FDRIVE,	FDN+200	/SET 'HEAD LOAD' BIT ALSO
M1898D,	-3552	/-1898
/
/SUBROUTINE TO INITIALIZE STUFF
FDINIT,	HLT
	CLA CLL CMA RAL
	TAD FDEXIT
	DCA FDIN2	/SET CDF BACK TO CALLING FIELD
FD6201,	CDF
	TAD FDPTR1
	TAD FDINIT	/MAKE OUR POINTER ABSOLUTE
	DCA FDPTR1
FDIN1,	TAD I FDPTR1	/GET RELATIVE ADDRESS
	TAD FDINIT	/ AND ADD THE BASE ADDRESS
FDBUF,	DCA I FDPTR1	/STORE THE ABSOLUTE POINTER
FDCMD,	ISZ FDPTR1
FDFUNC,	ISZ FDCNT1
FDPGCT,	JMP FDIN1
FDPKMK,	TAD .+3		/FIX SO WE ONLY INITIALIZE ONCE
FDREC,	DCA FDINIT+1
FDIN2,	HLT		/SET CALLING FIELD AGAIN
FDSECT,	JMP I FDINIT
/
FDK0,	01		/HANDLER VERSION NUMBER
FDM200,	7600		/ALSO 'CLA'
	RDF		/GET THE CALLING FIELD
	TAD FD6203
	DCA FDEXIT	/ AND SET THE EXIT 'CIF CDF'
	JMS FDINIT	/INITIALIZE THE HANDLER
FDBASE,	TAD I FDK0	/GET THE FUNCTION CODE
	DCA FDFUNC
	ISZ FDK0
	TAD FDFUNC
	AND FD70	/GET THE DATA FIELD SELECT
	BSW
	TAD FDRIVE	/ ADD IN THE DRIVE NUMBER
	DCA FDCMD	/SAVE AS THE COMMAND BASE
	TAD FDFUNC
	AND FD70	/GET THE BUFFER DATA FIELD AGAIN
	TAD FD6201	/ AND BUILD A 'CDF' TO IT
	DCA FDUDF+1
	TAD I FDK0	/GET THE BUFFER ADDRESS
	DCA FDBUF
	ISZ FDK0
	TAD I FDK0	/GET THE OS/8 BLOCK NUMBER
	ISZ FDK0
FD6203,	CIF CDF
	CLL RAL		/CONVERT IT TO A RECORD NUMBER
	SPA SZL		/REASONABLE RECORD NUMBER?
	JMS FATAL	/NO - FATAL ERROR
	DCA FDREC	/YES - SAVE THE RECORD NUMBER
	TAD FDFUNC
	BSW
	AND FD37	/GET THE RECORD COUNT
	CMA
	DCA FDPGCT
	JMP FDEPG	/DO ZERO PAGES IF ZERO SPECIFIED
FDPGLP,	TAD FDREC
	CLL RAL
	SPA SZL		/LEGAL?
	JMS FATAL	/NO
	DCA FDSECT	/SECTOR NUMBER = RECORD * 2
	TAD FDSECT
	TAD M1898D
	SMA CLA		/LEGAL SECTOR NUMBER?
	JMS FATAL	/NO - TAKE ERROR EXIT
	TAD FDFUNC
	SMA CLA		/READ OR WRITE?
	JMP FDKRD	/READ
/
/WRITE A PAGE OUT TO DISC
	TAD FDSECT
	JMS I FDSTRT	/FIRST A SECTOR OF FULL BYTES
	 20
	JMS FDPACK	/THEN OVERLAY THE PARTIAL SECTOR
	 -1
	TAD FDSECT
	IAC
	JMS I FDSTRT	/ AND WRITE BACK THE PARTIAL SECTOR
	 20
	JMP .+5
/
/READ A PAGE FROM THE DISC.
FDKRD,	TAD FDSECT
	IAC
	JMS I FDSTRT	/FIRST READ THE PARTIAL SECTOR
	 10
	JMS FDPACK	/ AND SHIFT THE HALF-BYTES UP
	 +1
	TAD FDSECT
	JMS I FDOVER	/THEN OVERLAY IT WITH THE FULL BYTES
	CDF
	RTCA		/NOW UPDATE THE BUFFER ADDRESS
	DCA FDBUF
	ISZ FDREC	/ AND THE RECORD NUMBER
FDEPG,	ISZ FDPGCT
	JMP FDPGLP	/ AND GO TRANSFER ANOTHER PAGE
	ISZ FDK0	/OTHERWISE WE'RE DONE
FDEXIT,	HLT
	JMP I FDK0	/ AND RETURN
/
/SUBROUTINE TO PACK THE PARTIAL BYTES
FDPACK,	HLT
	JMS I FDWAIT	/MAKE SURE THE DISC IS DONE
	TAD FDBUF
	DCA FDPTR1
	TAD FDM200	/SET THE WORD COUNT
	DCA FDCNT1
	TAD I FDPACK	/GET THE READ/WRITE SWITCH
	ISZ FDPACK
	SPA CLA		/READ-PACK OR WRITE-PACK?
	TAD FDPFIX	/WRITE - SET MASK = 74
	CMA		/READ - SET MASK = 7777
	DCA FDPKMK
	JMS FDUDF	/CHANGE TO BUFFER'S DATA FIELD
FDPK1,	TAD I FDPTR1	/GET THE WORD
	BSW		/SWAP HALVES
	AND FDPKMK	/ AND MAYBE AND OFF PART
	DCA I FDPTR1	/THEN STORE BACK THE WORD
	ISZ FDPTR1
	ISZ FDCNT1	/DECREMENT COUNTER
	JMP FDPK1	/ AND CONTINUE
	CDF
	JMP I FDPACK
/
FATAL,
FDCNT1,	FDPTR1-FDEREL	/LENGTH OF RELOCATION LIST
	CLA CLL CMA	/YES - INDICATE FATAL ERROR
	JMP FDEXIT	/ AND EXIT
/
	IFNZRO 400-4-.&4000	<GLITCH>
	*400-4		/PART OF LIST BELONGS IN SECOND PAGE
FDPTR1,	.+1-FDBASE	/USED DURING INITIALIZATION
FDOVER,	FDOVLY-FDBASE
FDSTRT,	FDST-FDBASE
FDWAIT,	FDWT-FDBASE
FDUDFA,	FDUDF-FDBASE
FDCMDA,	FDCMD-FDBASE
FDBUFA,	FDBUF-FDBASE
FDQUIT,	FATAL-FDBASE
FDEREL=	.-1		/END OF RELOCATION LIST
///
/
/SUBROUTINE TO OVERLAY PART OF THE BUFFER WITH A SECTOR.
FDOVLY,	0
	DCA SECT
	TAD I FDBUFA
	DCA FDPTR2	/SET THE OVERLAY POINTER
	TAD M200
	DCA FDCNT2	/ AND THE WORD COUNTER
	TAD SECT
	JMS FDST	/START THE TRANSFER
	 10
	SKER		/ANY ERROR NOW?
	SKP
	JMS I FDQUIT	/YES - TAKE FATAL ERROR EXIT
	JMS I FDUDFA	/CHANGE TO USER'S DATA FIELD
FDOV1,	TAD I FDPTR2	/GET THE WORD
	MQL		/ AND SAVE IT IN THE MQ
FDOV2,	RTCA		/NOW GET THE CURRENT ADDRESS
	CIA
	TAD FDPTR2
	SMA CLA		/PAST OUR WORD YET?
	JMP FDOV2	/NO - WAIT FOR IT
	TAD I FDPTR2	/YES - GET THE NEW VALUE
	MQA		/ AND 'OR' IN THE ORIGINAL
	DCA I FDPTR2	/THEN STORE THE FINAL RESULT
	ISZ FDPTR2
	ISZ FDCNT2	/DECREMENT THE COUNTER
	JMP FDOV1	/ AND CONTINUE
	JMS FDWT	/THEN WAIT FOR I/O COMPLETION
	JMP I FDOVLY	/ AND RETURN
/
/SUBROUTINE TO START A DISC TRANSFER.
FDST,	0
	DCA SECT	/SAVE THE SECTOR NUMBER
	CLA IAC
	DCA TRK
	TAD SECT
FDST1,	TAD M26D	/NOW DIVIDE THE SECTOR BY 26
	SPA
	JMP .+3
	ISZ TRK		/ TO GET THE TRACK NUMBER
	JMP FDST1
	TAD K27D	/SECTOR = REMAINDER + 1
	DCA SECT
	TAD M26D
	DCA TKERR	/SET ERROR LIMITS
	TAD M200
	DCA SCERR
	TAD IDTRK	/SAVE THE FIELD ZERO LOCATIONS
	DCA SAVIDT
	TAD IDSECT
	DCA SAVIDS
FDST2,	TAD I FDCMDA
	LTCR		/READ SECTOR I.D.
	DKGO
	SKRY		/WAIT FOR 'READY'
	JMP .-1
	RTSR
	AND FDSMSK
	SZA CLA		/ANY FATAL ERRORS?
	JMS I FDQUIT	/YES - DIE
	SKCE		/CRC ERROR?
	JMP FDST3	/NO
	ISZ TKERR	/YES - COUNT AS TRACK ERROR
	JMP FDST2	/ AND TRY AGAIN
	JMS I FDQUIT	/OTHERWISE ERROR
FDST3,	TAD IDTRK
	CIA
	TAD TRK
	SNA		/RIGHT TRACK?
	JMP FDST4	/YES - CHECK SECTOR NUMBER
	LDTA		/NO LOAD THE DIFFERENCE
	TAD I FDCMDA
	TAD FDSEEK
	LTCR		/SET THE MOVE HEAD FUNCTION
	DKGO
	JMS FDWT	/WAIT FOR COMPLETION
	ISZ TKERR	/COUNT THIS AS A TRACK-ERROR
	JMP FDST2	/ AND CHECK AGAIN
	JMS I FDQUIT
FDST4,	TAD IDSECT
	CIA
	TAD SECT
	SNA CLA		/ARE WE AT THE RIGHT SECTOR?
	JMP FDST5	/YES
	ISZ SCERR	/NO - COUNT OUR TRIES
	JMP FDST2	/ AND TRY AGAIN
	JMS I FDQUIT	/ERROR LIMIT REACHED
FDST5,	TAD I FDBUFA
	LCAR		/SET THE BUFFER ADDRESS
	TAD K373
	LDTA		/ASSUME SECTOR GOOD
	TAD TRK
	TAD M44D
	SMA CLA		/TRACK NUMBER .GE. 44?
	TAD K40		/YES - SET FLAG TO USE LOWER WRITE CURRENT
	TAD I FDST	/GET THE FUNCTION CODE
	ISZ FDST	/ AND INCREMENT THE RETURN
	TAD I FDCMDA	/GET THE REST OF THE COMMAND
	LTCR
	TAD SAVIDT	/NOW RESTORE THE PAGE ZERO STUFF
	DCA IDTRK
	TAD SAVIDS
	DCA IDSECT
	DKGO		/NOW START THE TRANSFER
	JMP I FDST	/ AND RETURN
/
K40,	40
K373,	373
M26D,	-32
M44D,	-54
M200,	-200
K27D,	33
FDSMSK,	2235
TRK,	0
SECT,	0
TKERR,	0
SCERR,	0
FDPTR2,	0
FDCNT2,	0
FDSEEK,	30	/MOVE HEAD
SAVIDS,	0
SAVIDT,	0
/
/SUBROUTINE TO WAIT FOR DISC COMPLETION.
FDWT,	0
	SKRY
	JMP .-1
	SKER		/ANY ERROR BITS?
	JMP I FDWT	/NO - JUST RETURN
	JMS I FDQUIT	/YES - TAKE FATAL ERROR EXIT
/
AAAFD=	.-1
///	$$$
	$$$
