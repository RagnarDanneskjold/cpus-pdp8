
      /TSS/8 CONFIGURATION FOR UWM                                        Page 1


    1             /TSS/8 CONFIGURATION FOR UWM
    2             /CONFIGURATION PARAMETERS FOR THE TSS/8 MONITOR
    3             /COPYRIGHT 1971
    4             /DIGITAL EQUIPMENT CORP. -MAYNARD, MASS
    5             /
    6             /TSS/8 PDP-8/E HARDWARE OPTIONS
    7             /THIS SECTION DEFINES THE HARDWARE CONFIGURATION ON
    8             /WHICH THIS TSS/8 MONITOR WILL BE RUN
    9             /FOR EACH STATEMENT THE COMMENT INDICATES THE
   10             /POSSIBLE RESPONSES
   11             
   12       0002  CPU=    2       /0 IF CPU IS PDP-8/I; 1 IF PDP-8
   13                             / 2 IF PDP-8/E; 3 IF PDP-12
   14             
   15       0000  EAE=    0       /20 IF CPU INCLUDES EAE; 0 IF NOT
   16             
   17       0070  CORMEM= 70      /HIGHEST DATA FIELD SELECT; FOR 12K SYS,
   18                             / RESPOND 20; FOR 16K, RESPOND 30; FOR 32K, 70
   19             
   20       0000  D680=   0       /2 IF TTY INTERFACING IS 680 OR DC08;
   21                             / 0 IF TTY INTERFACING IS PT08'S
   22             
   23       0000  D689=   0       /4 IF 680 OR DC08 INCLUDES 689 OR DC08F;
   24                             / 0 IF IT DOESN'T OR TTY INTERFACING IS PT08'S
   25             
   26       0000  RF08=   0       /40 IF SYSTEM DISC IS DF32; 0 IF RF08
   27             
   28       0001  RS08=   1       /# OF DISCS IN SYSTEM, WHETHER RF08 OR DF32
   29             
   30       0000  RK8E=   0       /# OF RK8E DRIVES; ONLY FIRST IS USED FOR SYSTEM
   31                             / THE REMAINDER ARE TREATED AS PERIPHERALS
   32             
   33       0001  READER= 1       /1 IF SYSTEM INCLUDES HIGH-SPEED READER; 0 IF NOT
   34             
   35       0001  PUNCH=  1       /1 IF SYS HAS HSP, 0 IF NOT
   36             
   37       0001  TC01=   1       /1 IF SYS HAS DECTAPES; 0 IF NOT
   38             
   39       0000  TU55=   0       /1 IF SYSTEM INCLUDES MORE THAN TWO DECTAPES
   40                             / 0 IF 0, 1, OR 2 DRIVES
   41             
   42       0000  TD8E=   0       /1 IF TD8E DECTAPES AVAILABLE FOR LOADING & DUMPING
   43                             / 0 IF NOT; NOTE THAT TD8E TAPES CANNOT BE USED UNDER
   44                             / TSS/8, THEY REQUIRE CONTINUOUS CPU ATTENTION
   45             
   46       0000  PLOTTER=0       /NO SYSTEMS CAN HAVE PLOTTER
   47             
   48       0000  LPT=    0       /0 IF NO PRINTER ON SYS; 1 IF LP08; 2 IF LS8E
   49             
   50       0000  CDR=    0       /NO SYS CAN HAVE CARD READER
   51             /
   52             /MONITOR OPTIONS 
   53             /FILL IN THE FOLLOWING LINES TO INDICATE THE 
   54             /MONITOR CAPACITY FOR THIS SYSTEM
   55             
   56                     DECIMAL
   57       0024  JOBMAX= 20      /NUMBER OF SIMULTANEOUS USERS (.LE. 20)

      /TSS/8 CONFIGURATION FOR UWM                                        Page 2


   58             
   59       0017  NULINE= 15      /NUMBER OF TTYS TO BE ATTACHED TO SYS.
   60                             / SIMULTANEOUSLY, NOT COUNTING CONSOLE (.LE. 19)
   61                             / GENERALLY .GE. JOBMAX; IF SYS. USES 680 OR DC08,
   62                             / NULINE MUST BE A MULTIPLE OF 5 (FIVE); IF CPU IS
   63                             / A PDP-12, NULINE MUST BE MULTIPLE OF 8 (EIGHT)
   64             
   65       0011  TRUKBD= 9       /NUMBER OF ACTUAL KEYBOARDS ON SYSTEM (NOT COUNTING
   66                             / CONSOLE TTY). THIS MUST BE .LE. NULINE; NULINE
   67                             / MAY INCLUDE DUMMY TERMINALS, THIS MAY NOT.
   68             
   69       0011  FRCMAX= TRUKBD  /THE HIGHEST KEYBOARD # A '00XX' ACCT # MAY FORCE
   70                             / NOTE THAT A '000X' ACCOUNT MAY FORCE UP TO 'NULINE'
   71             
   72       0011  TLKMAX= TRUKBD  /THE HIGHEST KEYBOARD # WHICH MAY BE 'TALK'ED TO
   73             
   74       0011  BRDMAX= TRUKBD  /THE HIGHEST KEYBOARD WHICH WILL RECEIVE BROADCASTS
   75                     OCTAL
   76             
   77       0002  DTAMIN= 2       /THE FIRST DECTAPE DRIVE WHICH WILL BE ASSIGNED
   78                             / FOR 'ASSIGN D' COMMAND; NORMALLY =0, BUT MAY
   79                             / VARY FOR SLIGHTLY RESTRICTED DRIVE USE.
   80             
   81       0007  BILLNG= 7       /THE ACCOUNT NUMBER OF THE BILLING SYSTEM
   82                             / 0, IF NO BILLING SYSTEM USED
   83             /
   84             /SYSTEM CONSTANTS
   85             
   86       37777777776  QUANT=  -2      /NUMBER OF SYSTEM TICKS PER TIME SLICE  (-)
   87       0005  SWDEX=  5       /DISC TRACK OF FIRST SWAP AREA
   88       0001  TTYEVEN=1       /1 INDICATES PARITY TTY MAY BE USED WITH SYS
   89                             / 0 ALLOWS ONLY DEC MODIFIED TTYS
   90       0020  INFLD=  20      /FIELD SELECT THAT 'INIT' SHOULD BE BOOTED INTO
   91                             / MAKING IT 20 AVOIDS PROBLEMS SHOULD A
   92                             / FIELD NEED REPAIR & SYSTEM IS RUN ON 12K
   93             
   94             ///     END OF SYSTEM CONFIGURATION PARAMETERS

      /TSS/8 CONFIGURATION FOR UWM                                        Page 3


   95                96             /PARAMETERS - UWM VERSION 23
   97             /
   98             /COPYRIGHT 1971                 DIGITAL EQUIPMENT CORPORATION
   99             /                               MAYNARD, MASSACHUSETTS
  100             /
  101             /
  102       0027  VERNUM= 27      /SYSTEM VERSION NUMBER
  103             /
  104       0005  STOMIN= 5       /MINIMUM # FREE STORAGE BLOCKS FOR NEW JOB
  105                     IFZERO RK8E <
  106                     IFZERO RF08-40 <
  107             DSKSIZ= RS08^10
  108                     >
  109                     IFZERO RF08 <
  110       0100  DSKSIZ= RS08^100        /# OF 4K DISC TRACKS
  111                     >
  112                     >
  113                     IFNZRO RK8E <
  114             DSKSIZ= 400     /# OF 4K DISC TRACKS
  115                     >
  116       0062  CLOCKR= 62      /50 MILLISECONDS
  117       2260  TICMIN= 2260    /1200
  118       0645  INCLK2= 0645    /1,728,000 TICKS PER DAY
  119       7000  INCLK1= 7000
  120       0024  TICSPS= 24      /NUMBER OF SYSTEM TICKS PER SECOND
  121       0010  INIDEX= 10      /INIT DISC EXTENSION
  122       0030  TS8DEX= 30      /FIELD 0 DISC EXTENSION*2^3
  123       0000  ERPDEX= 0       /ERP DISC EXTENSION*4
  124       0000  ERPWC=  0       /ERP WORD COUNT
  125       0004  FIPDEX= 4       /FIP DISC EXTENSION*4
  126       0000  FIPWC=  0       /FIP WORD COUNT
  127       0000  SIDEX=  ERPDEX  /SI DISC EXTENSION*4
  128       0000  SIWC=   ERPWC   /SI WORD COUNT
  129       0002  LIBACT= 2       /LIBRARY ACCOUNT #
  130       4000  BRKINI= 4000    /INITIAL USER BREAK MASK
  131       0400  WRDSEG= 400     /#WORDS PER DISC SEGMENT
  132             
  133             /IOT DEFINITIONS
  134             
  135                     IFZERO D680-2 <
  136             TTINCR= 6401    /INCREMENT LINE REGISTER
  137             TTI=    6402    /TELETYPE INPUT COMMAND
  138             TTO=    6404    /TELETYPE OUTPUT COMMAND
  139             TTCL=   6411    /CLEAR LINE REGISTER
  140             TTSL=   6412    /SET LINE REGISTER, CLEAR AC
  141             TTRL=   6414    /READ LINE REGISTER
  142             T8SKP=  6421    /SKIP ON CLOCK FLAG
  143             T8OFF=  6422    /TURN CLOCK OFF
  144             TT8ON=  6424    /TURN CLOCK ON
  145             TTRINC= 6461    /INCREMENT THE R REG.
  146             TT8CLR= 6473    /CLEAR AND LOAD THE R REG.
  147                     >

      /TSS/8 CONFIGURATION FOR UWM                                        Page 4


  148             /EXTENDED MEMORY
  149             
  150       6201  CDF=    6201    /CHANGE TO DATA FIELD 0
  151       6202  CIF=    6202    /CHANGE TO INSTRUCTION FIELD 0
  152       6204  CIOT=   6204    /CLEAR USER IOT
  153             
  154       6214  RDF=    6214    /READ DATA FIELD
  155       6224  RIF=    6224    /READ INSTRUCTION FIELD
  156       6234  RIB=    6234    /READ INTERRUPT BUFFER
  157       6244  RMF=    6244    /RESTORE MEMORY FIELD
  158       6254  SKPIOT= 6254    /SKIP ON USER IOT
  159       6264  UFF=    6264    /USER FLAG OFF
  160       6274  UFN=    6274    /USER FLAG ON
  161             
  162             /EAE
  163                     IFZERO EAE-20 <
  164             MUY=    7405    /MULTIPLY
  165             DVI=    7407    /DIVIDE
  166             NMI=    7411    /NORMALIZE
  167             SHL=    7413    /SHIFT ARITHMETIC LEFT
  168             ASR=    7415    /ARITHMETIC SHIFT RIGHT
  169             LSR=    7417    /LOGICAL SHIFT RIGHT
  170             MQL=    7421    /LOAD MQ
  171             SCL=    7403    /STEP COUNTER LOAD FROM MEMORY
  172             SCA=    7441    /STEP COUNTER TO AC
  173             MQA=    7501    /MQ TO AC
  174             
  175                     IFZERO CPU-2 <
  176             SAM=    7453    /SUBTRACT AC FROM MQ
  177             SKB=    7671    /SKIP IF MODE B (MESSES UP AC AND MQ)
  178             SWBA=   7447    /CHANGE MODE TO A
  179             SWAB=   7431    /CHANGE MODE TO B (ALSO DOES MQL)
  180             ACS=    7403    /AC(7:11) TO SC; AC CLEARED 
  181                     >>
  182       6006  SGT=    6006    /SKIP ON GT FLAG
  183                             /SOMEDAY FIX 'WHERE' COMMAND TO PRINT MODE & GT
  184             
  185             /LINE PRINTER IOTS
  186       6661  LSF=    6661    /SKIP ON CHAR FLAG SET
  187       6662  LCF=    6662    /CLEAR CHAR FLAG
  188       6663  LSRP=   6663    /SKIP ON NOT READY OR ON ERROR
  189       6664  LLC=    6664    /TRANSMIT CHAR TO PRINTER
  190       6665  LSP=    6665    /SET PROGRAM INTERRUPT
  191       6666  LPC=    6666    /TRANSMIT CHAR & CLEAR FLAG
  192       6667  LCP=    6667    /CLEAR PROGRAM INTERRUPT

      /TSS/8 CONFIGURATION FOR UWM                                        Page 5


  193             /CTY
  194             
  195       6044  TPC=    6044    /LOAD TELEPRINTER AND PRINT
  196             
  197             /DISC (DF32)
  198             
  199       6601  DCMA=   6601    /CLEAR
  200       6603  DMAR=   6603    /READ
  201       6605  DMAW=   6605    /WRITE
  202       6611  DCEA=   6611    /CLEAR DISC EXTENDED ADDRESS
  203       6615  DEAL=   6615    /LOAD EXTENDED ADDRESS
  204       6621  DFSE=   6621    /SKIP ON ERROR
  205       6622  DFSC=   6622    /SKIP ON COMPLETION
  206       6616  DEAC=   6616    /READ EXTENDED ADDRESS
  207             
  208             /DISC (RF08)
  209             
  210       6615  DIML=   6615
  211       6616  DIMA=   6616
  212       6643  DXAL=   6643
  213             
  214                     IFNZRO RK8E <
  215             DCLR=   6742    /CLEAR THE CONTROLLER
  216             DLAG=   6743    /LOAD DISC ADDRESS & GO
  217             DLDC=   6746    /LOAD THE COMMAND REGISTER
  218             DRST=   6745    /READ THE STATUS
  219             DSKP=   6741    /SKIP IF DONE OR ERROR
  220             DLCA=   6744    /LOAD CURRENT CORE ADDRESS
  221                     >
  222             
  223             /
  224             /STANDARD DECTAPE CONTROLLER IOTS
  225       6761  DTRA=   6761    /READ A-REGISTER
  226       6762  DTCA=   6762    /CLEAR A-REGISTER
  227       6764  DTXA=   6764    /XOR INTO A-REGISTER
  228       6771  DTSF=   6771    /SKIP ON DECTAPE FLAG
  229       6772  DTRB=   6772    /READ STATUS-REGISTER (B)
  230       6774  DTLB=   6774    /LOAD STATUS-REGISTER (B)
  231             
  232                     IFZERO CPU-3 <
  233             CLAB=   6133
  234             CLLR=   6132
  235             CLEN=   6134
  236             CLSA=   6135
  237             CLSK=   6131
  238             
  239             MTPF=   6113
  240             MINT=   6115
  241             MTON=   6117
  242             MKTF=   6123
  243             MINS=   6125
  244             MTRS=   6127
  245             
  246             MKSF=   6111
  247             MKCC=   6112
  248             MKRS=   6114
  249             MKRB=   6116

      /TSS/8 CONFIGURATION FOR UWM                                        Page 6


  250             
  251             MTSF=   6121
  252             MTCF=   6122
  253             MTPC=   6124
  254             MTLS=   6126
  255                     >
  256             
  257                     IFZERO CPU <
  258             /KW8I           REAL TIME CLOCK
  259             
  260             CECI=   6137    /CLEAR AND ENABLE CLOCK AND INTERRUPT
  261             CSCF=   6133    /SKIP AND CLEAR FLAG IF FLAG
  262                     >
  263             
  264                     IFZERO CPU-1 <
  265             CECI=   6315    /CLOCK ENABLE
  266             CSCF=   6301    /SKIP ON CLOCK FLAG
  267             CCF=    6302    /CLEAR CLOCK FLAG, CLEAR ENABLE AND CLEAR BUFFER
  268             CLB=    6304    /LOAD BUFFER FROM AC
  269                     >
  270             
  271                     IFZERO CPU-2 <
  272       6131  CECI=   6131    /CLOCK ENABLE
  273       6133  CSCF=   6133    /SKIP AND CLEAR FLAG IF FLAG
  274       6007  CAF=    6007    /CLEAR ALL FLAGS
  275                     >
  276             
  277                     IFZERO D689-4 <
  278             /689AG
  279             
  280             SRF=    6701    /SKIP IF RING FLAG
  281             SCF=    6711    /SKIP IF CARRIER FLAG
  282             DFCRF=  6742    /CLEAR RING FLAG
  283             CTG=    6721    /CLEAR GROUP COUNTER
  284             RRS=    6702    /READ RING STATUS
  285             ITG=    6731    /INCREMENT GROUP COUNTER
  286             STR=    6722    /SET TERMINAL READY
  287             EDF=    6704    /ENABLE DATAPHONE FEATURES
  288             DDF=    6714    /DISABLE DATAPHONE FEATURES
  289             CTR=    6724    /CLEAR TERMINAL FLAG
  290             CCF=    6741    /CLEAR CARRIER FLAG
  291             RCS=    6712    /READ CARRIER STATUS
  292                     >

      /TSS/8 CONFIGURATION FOR UWM                                        Page 7


  293             /TSS/8 IOTS
  294       0406  SEGS=   406     /RETURN NUMBER OF FREE SEGMENTS ON DISC
  295       0440  ASD=    440     /ASSIGN DEVICE
  296       0442  REL=    442     /RELEASE DEVICE
  297       0600  REN=    600     /RENAME FILE
  298       6601  OPEN=   6601    /OPEN FILE
  299       0602  CLOS=   602     /CLOSE
  300       6603  RFILE=  6603    /READ FILE
  301       0604  PROT=   604     /PROTECT
  302       6605  WFILE=  6605    /WRITE FILE
  303       6606  XOPEN=  6606    /OPEN FILE WITH EXCLUSIVE USE
  304       0607  CPASS=  607     /CHANGE A USER'S PASSWORD
  305       0610  CRF=    610     /CREATE
  306       0611  EXT=    611     /EXTEND
  307       0612  RED=    612     /REDUCE
  308       6613  FINF=   6613    /FILE INFORMATION
  309       0614  LIN=    614     /LOGIN
  310       0615  LOUT=   615     /LOGOUT
  311       0620  BCLR=   620     /CLEAR MFD BILLING INFORMATION
  312             
  313             /DEVICE DATA BLOCK
  314             
  315       0000  DDBSTS= 0               /WORD 1.  STATUS AND UNIT NUMBER
  316       2000          DXON=   2000    /XOFF SENT FLAG
  317       1000          DSI=    1000    /DESTINATION IS S.I. FLAG
  318       0400          DXOUT=  400     /BIT TO CAUSE 'XOFF' TO GO OUT
  319       0200          DUPL=   200     /CONSOLE IN DUPLEX MODE
  320       0100          SICOM=  100     /COMMAND WAITING
  321       0040          CTRLC=  40      /USER TYPED CTRL/C
  322             
  323                     /DEVICE UNIT NUMBER IS IN BITS 6-11
  324             
  325       0001  DDBJN=  1       /WORD 2. JOB NUMBER IN 7-11
  326       0002  DDBBRK= 2       /BREAK MASK
  327       0204  SIBRKM= 204     /SI BREAK MASK
  328       0003  DDBTIM= 3       /TIME THAT DEVICE WAS ASSIGNED
  329       0004  DDBINP= 4       /BUFFER FILL POINTER
  330       0005  DDBINC= 5       /BUFFER FILL COUNT
  331       0006  DDBOUP= 6       /BUFFER EMPTY POINTER
  332       0007  DDBOUC= 7       /BUFFER EMPTY COUNT

      /TSS/8 CONFIGURATION FOR UWM                                        Page 8


  333             /JOB DATA AREA
  334             
  335       0000  JOBSTS= 0               /STATUS
  336                     /STR0
  337       4000          JSRUN=  4000    /RUN BIT
  338       2000          JSEREN= 2000    /USER ERROR ENABLE
  339       1000          JCOMBD= 1000    /LAST TIME THE JOB RAN AS COMPUTE BOUND
  340       0400          JSHLT=  400     /PROGRAM EXECUTED 'HLT'
  341       0200          JSPRIV= 200     /LIBRARY PROGRAM (HAS PRIVILEGES)
  342       0100          JSIOT=  100     /NON-RESIDENT IOT
  343       0040          JSIOTC= 40      /COPY IOT RESULT TO USER
  344       0020          JSEXON= 20      /EXECUTE ONLY
  345                     /BITS 9-11 ARE SYSTEM ERROR CODE
  346       0001          UUOERF= 1       /IOT ERROR
  347       0002          SWPRER= 2       /SWAP READ ERROR
  348       0003          SWPWER= 3       /SWAP WRITE ERROR
  349       0005          DSKERR= 5       /DISC ERROR
  350       0006          HUNGDV= 6       /HUNG DEVICE
  351             
  352                     /STR1
  353       4000          JSTIME= 4000    /TIME IS UP
  354       2000          JSF0=   2000    /FILE 0 NOT BUSY
  355       1000          JSF1=   1000    /FILE 1 IS NOT BUSY
  356       0400          JSF2=   400     /FILE 2 IS NOT BUSY
  357       0200          JSF3=   200     /FILE 3 IS NOT BUSY
  358       0100          JSDEL=  100     /DELIMITER SEEN
  359       0020          JSTEL=  20      /OUTPUT BUFFER NOT FULL
  360       0010          JSPTR=  10      /CHARACTER IN READER BUFFER
  361       0004          JSPTP=  4       /PUNCH BUFFER IS NOT FULL
  362       0002          JSERR=  2       /SYSTEM ERROR DETECTED
  363       0001          JSWAIT= 1       /JOB NOT IN WAIT STATE
  364             
  365       0001  STR2=   1       /TC01&1!PUNCH&1!PLOTTER&1!LPT&1!CDR&1
  366             
  367       1000          JSPLT=  1000    /PLOTTER DONE
  368       0400          JSCDR=  400     /CHARACTER IN CDR BUFFER
  369       0200          JSCRNR= 200     /CDR NOT READY
  370       0100          JSCREF= 100     /CDR END FILE
  371       0004          JSDTC=  4       /DECTAPE CONTROLLER FLAG
  372       0002          JSDTE=  2       /DT ERROR FLAG
  373       0001          JSDTF=  1       /DT DONE FLAG
  374             
  375       0003  JOBWMK= 2+STR2          /WAIT MASK
  376       0005  JOBSRA= JOBWMK+1+STR2   /JOB RESTART ADDRESS
  377       0006  JOBERR= JOBSRA+1        /JOB ERROR RESTART ADDRESS
  378       0007  JOBLNK= JOBERR+1        /IOT LINKAGE
  379       0010  JOBSWR= JOBLNK+1        /SWITCH REGISTER
  380       0011  JOBREG= JOBSWR+1        /PC, AC, & LINK (W/MODE, GT, & SC)
  381       0014  JOBEAE= JOBREG+3        /MQ REGISTER
  382       0015  JOBACT= JOBEAE+1        /USER'S ACCOUNT #
  383       0016  JOBRTM= JOBACT+1        /LOW ORDER RUN TIME
  384       0017  JOBRTH= JOBRTM+1        /HIGH ORDER RUN TIME
  385       0020  JOBF0=  JOBRTH+1        /POINTER TO FILE 0 CONTROL
  386       0021  JOBF1=  JOBF0+1         /POINTER TO FILE 1 CONTROL
  387       0022  JOBF2=  JOBF1+1         /POINTER TO FILE 2 CONTROL
  388       0023  JOBF3=  JOBF2+1         /POINTER TO FILE 3 CONTROL
  389       0024  JOBSTB= JOBF3+1         /DECTAPE STATUS REGISTER B

      /TSS/8 CONFIGURATION FOR UWM                                        Page 9


  390             
  391             /TUNING PARAMETERS
  392             
  393       0010  MAXBUF= 10      /MAXIMUM PERMITTED # OF OUTPUT BUFFERS
  394       0003  MINBUF= 3       /RESTART JOB WHEN ONLY MINBUF BUFFERS ARE STILL FULL
  395             
  396             /FILE CONTROL BLOCK - POINTED TO BY JOBFX, X=0,1,2,3
  397             
  398       0000  FILWPT= 0       /POINTER TO FILE RETRIEVAL WINDOW
  399       0001  FILSCT= 1       /SEGMENT NUMBER OF FIRST WINDOW ENTRY
  400       0002  FILPRO= 2       /FILE PROTECTION - BIT 9
  401       0003  FILPAR= 3       /POINTER TO RFILE OR WFILE PARAMETER BLOCK
  402       0004  FILDA=  4       /DISC ADDRESS OF RFILE OR WFILE
  403       0006  FILWC=  6       /-WORD COUNT OF RFILE OR WFILE
  404       0007  FILRES= 7       /POINTER TO FILPIF IN USER AREA
  405             
  406             /FILE  RETRIEVAL WINDOW
  407             /WORD 0:        UFD LINK TO NEXT GROUP OF 7 SEGMENT POINTERS
  408             /WORDS 1-7:     SEVEN SEGMENT ADDRESSES
  409             
  410             /RFILE OR WFILE PARAMETER BLOCK - POINTED AT BY FILPAR
  411             
  412       0000  FILPFN= 0       /FUNCTION: 0603 OR 0605
  413       0001  FILPDX= 1       /DISC EXTENSION
  414       0002  FILPIF= 2       /INTERNAL FILE # (BITS 10-11) AND FIELD # (BITS 7-9)
  415       0003  FILPWC= 3       /-WORD COUNT FOR THIS TRANSFER
  416       0004  FILPCA= 4       /CORE ADDRESS FOR THIS TRANSFER
  417       0005  FILPDA= 5       /DISC ADDRESS
  418       0006  FILPRA= 6       /EXEC RETURN ADDRESS FOR THIS TRANSFER
  419       0007  FILPCT= 7       /POINTER TO FILE CONTROL BLOCK
  420             
  421             /CORE TABLE CONTROL FLAGS
  422             
  423       4000  FSWP=   4000    /SWAP REQUEST
  424       2000  LOCK=   2000    /LOCK IN CORE
  425       1000  NOTRUN= 1000    /HAS NOT BEEN SCHEDULED TO RUN
  426       0400  FIP=    400     /FILE PHANTOM (NOTE: FIP HAS BEEN ASSUMED EQUAL TO SEGISZ)
  427       0200  SI=     200     /SYSTEM COMMAND INTERPRETER PHANTOM
  428       0100  FIX=    100     /JUST FINISHED DISC TRANSFER
  429             /BITS 7-11 CONTAIN THE JOB #
  430             
  431             /FIP TABLE DEFINITIONS
  432             
  433       0530  SATSIZ= 530
  434       5600  ENTABL= 5600
  435       6040  UTABLE= ENTABL+JOBMAX+JOBMAX+JOBMAX+JOBMAX+JOBMAX+JOBMAX+JOBMAX+JOBMAX
  436       6160  RTABLE= UTABLE+JOBMAX+JOBMAX+JOBMAX+JOBMAX

      /TSS/8 CONFIGURATION FOR UWM                                       Page 10


  437       0020  SIDATA=20       /SYSTEM INTERPRETER DATA
  438       0020          *SIDATA
  439             
  440 00020 0020  COMPTR, .       /POINTER TO LAST DEVTBL ENTRY SCANNED. INITIALIZE TO DEVTBL-1
  441 00021 0021  SIBUF,  .       /BUFFER STATE
  442 00022 0022  SICNT,  .
  443 00023 0023  COMDSP, .       /FIP RETURN DISPATCH
  444 00024 0024  SIFLG,  .       /COMMAND FLAGS
  445 00025 0025  SICHAR, .       /SAVE LAST CHAR FROM COMMAND SCAN
  446 00026 0026  SIREG,  .       /USER AC, LINK, PC
  447 00027 0027          .
  448 00030 0030          .
  449 00031 0031  TTCHAR, .       /TTY CHARACTER
  450             
  451       0032  CONSTANTS=SIDATA+12
  452       0032  *CONSTANTS
  453 00032 0002  C0002,  2
  454 00033 0003  C0003,  3
  455 00034 0004  C0004,  4
  456 00035 0007  C0007,  7
  457 00036 0037  C0037,  37
  458 00037 0100  C0100,  100
  459 00040 1000  C1000,  1000
  460 00041 7770  C7770,  7770
  461             
  462       0043  JOBCON=CONSTANTS+11     /JOB CONTROL
  463       0043  *JOBCON
  464             
  465 00043 0043  JOBTIM, .       /-#TICKS REMAINING TO RUN
  466 00044 3256  JOBTBA, JOBTBL  /JOB TABLE ADDRESS
  467             
  468       0046  FRSTOR=JOBCON+3
  469       0046  *FRSTOR
  470             
  471 00046 0046  FREE,   .       /POINTER TO HEAD OF FREE STORAGE
  472 00047 0047  FRECNT, .       /# FREE BLOCKS AVAILABLE

      /TSS/8 CONFIGURATION FOR UWM                                       Page 11


  473       0050  TIMDAT= FRSTOR+2        /CLOCK AND DATE
  474       0050  *TIMDAT
  475             
  476             /CLOCK
  477 00050 0050  CLK2,   .
  478 00051 0051  CLK1,   .
  479             
  480       0052  SCHDAT=TIMDAT+2
  481       0052  *SCHDAT         /SCHEDULING DATA
  482             
  483 00052 0052  COMCNT, .       /NUMBER OF COMMANDS WAITING EXECUTION
  484 00053 0053  SQREQ,  .       /SWAP REQUEST FLAG
  485 00054 0054  FINISH, .       /+(I)-(O) FIELD OF JOB BEING SWAPPED
  486 00055 0055  FIT,    .       /JOB # TO BE SWAPPED IN
  487 00056 0056  FORCE,  .       /FIELD TO BE SWAPPED OUT
  488             
  489       0060  DATEND= 60      /END OF FIELD 0 PAGE 0 DATA
  490             
  491       0156  FIPDAT=156      /DATA REFERENCED BY FIP
  492       0156          *FIPDAT
  493             
  494 00156 0400  C0400,  400
  495                     IFNZRO WRDSEG-400       <GLITCH>
  496       0156  SEGSIZ= C0400   /WRDSEG
  497 00157 0031  FIBASE, SWDEX+JOBMAX    /BASE ADDRESS OF ALLOCATABLE DISC STORAGE
  498 00160 0160  JOB,    .       /# OF CURRENT JOB
  499 00161 0161  JOBDAT, .       /ADDRESS OF CURRENT JOB DATA LIST. MUST RESIDE IN DATA FIELD.
  500 00162 7077  CORTBA, CORTBL-1        /CORE ALLOCATION TABLE
  501 00163 3200  DEVTBA, DEVTBL  /DEVICE TABLE
  502 00164 3451  DSUTBA, DSUTBL  /USER DISC REQUEST QUEUE
  503 00165 0165  DSBUSY, .       /DISC BUSY COUNT
  504             
  505             /THE DATE IS KEPT AS A 12 BIT NUMBER IN THE FORMAT
  506             /DATE=((YEAR-1974)*12+(MONTH-1))*31+DAY-1
  507             
  508 00166 0166  DATE,   .

      /TSS/8 CONFIGURATION FOR UWM                                       Page 12


  509       0167  FISUBR=FIPDAT+11        /INST FIELD INDEPENDENT SUBROUTINES
  510       0167          *FISUBR
  511             
  512       0400  FISUBL=400
  513             
  514       1600  BLT0=   FISUBL+1200
  515 00167 1600  BLTA,   BLT0            /BLOCK TRANSFER
  516       4567  BLT=    JMS I Z BLTA
  517 00170 1302  CORSRA, CORSRC
  518       4570  CORE=   JMS I CORSRA
  519 00171 1400  GETBA,  GETB
  520       4571  GETBLK= JMS I GETBA
  521 00172 1451  GETDBA, GETDB0          /GET A DATA BLOCK
  522       4572  GETDDB= JMS I GETDBA
  523 00173 2200  TOFA,   TOF             /FETCH CHARACTER
  524       4573  FETCH=  JMS I Z TOFA
  525 00174 6600  GETJT0, GETJTB          /GET JOB DATA TABLE ADDRESS
  526       4574  GETJTA= JMS I Z GETJT0
  527 00175 0404  GIRSCA, GIRSC           /STORE CHARACTER IN BUFFER
  528       4575  STORE=  JMS I Z GIRSCA
  529 00176 0600  RETBA,  RETB            /RETURN BLOCK TO FREE STORAGE
  530       4576  RETBLK= JMS I Z RETBA
  531 00177 2455  WAITA,  WSCHED
  532       5577  WAIT=   JMP I WAITA
  533             
  534             /TABLES
  535                     IFNZRO CPU-3 <
  536       7100  DATA=   7100    /START OF FIELD 0 TABLES AND BUFFERS
  537                     >
  538             
  539                     IFZERO CPU-3 <
  540             DATA=   7200    /IF DC02 THERE LEAVE ROOM FOR THE CODE
  541                     >
  542       7100  CORTBL= DATA    /CORE ASSIGNMENT TABLE
  543       7107  L2QTB=  CORTBL+7
  544                     IFZERO D680-2 <
  545             T8OBF=  L2QTB+20        /TTY CHAR OUT BUFFER 1. # LINES
  546             T8OBF2= T8OBF+NULINE    /TTY CHAR OUT BUFFER 2.  # LINES
  547             T8IBF=  T8OBF2+NULINE   /TTY CHAR IN BUFFER. 2*# LINES
  548             T8IN=   T8IBF+NULINE+NULINE     /TTI LIST. 4*#LINES+1
  549             TYBEND= T8IN+NULINE+NULINE+NULINE+NULINE+1
  550                     >
  551                     IFZERO D680 <
  552       7127  TIBUFF= L2QTB+20                /TTY INPUT BUFFER. # LINES
  553       7147  TOBUFF= TIBUFF+NULINE+1 /TTY OUTPUT BUFFER. # LINES
  554       7167  TIDEV=  TOBUFF+NULINE+1 /DEVICE CODES (INPUT)
  555                             IFNZRO CPU-3 <
  556       7207  TODEV=  TIDEV+NULINE+1  /DEVICE CODES (OUTPUT)
  557       7227  TYBEND= TODEV+NULINE+1
  558                             >
  559             
  560                             IFZERO CPU-3 <
  561             TODEV=  TIDEV+1
  562             TYBEND= TODEV+1
  563                             >
  564                     >
  565             

      /TSS/8 CONFIGURATION FOR UWM                                       Page 13


  566             IFZERO TC01     <DTASIZ=0>      /SIZE OF DTA CODE+BUFFERS
  567       1400  IFZERO TC01-1   <DTASIZ=1400>
  568             
  569       0000  IFZERO D689     <D689SIZ=0>     /SIZE OF 689AG CODE
  570             IFZERO D689-4   <D689SIZ=200>
  571             
  572       0200  PTRSIZ= 200
  573       0200  PTPSIZ= 200
  574       0200  PTPBUF= 200                     /START OF DEVICE BUFFERS
  575       0400  PTRBUF= PTPBUF+PTPSIZ
  576       0600  DTBUF1= PTRBUF+PTRSIZ
  577       1001  DTBUF2= DTBUF1+201
  578             
  579       6211  DATFLD=6211                     /MONITOR DATA FIELD SELECT
  580             
  581             IFZERO EAE-20   <MQREG=1>
  582       0001  IFZERO EAE      <IFZERO CPU-2 <MQREG=1>
  583                              IFNZRO CPU-2 <MQREG=0>>

      /TSS/8 CONFIGURATION FOR UWM                                       Page 14


  584             /SUPER CRITICAL LOCATIONS
  585             /THESE LOCATIONS ARE USED TO LINK TS8 AND TS8II
  586             
  587             /IT MAY BE NECESSARY TO ADJUST THEM ACCORDINGLY
  588             
  589             /DEFINED IN TS8:
  590             
  591       1600  BLT0=   1600
  592       1302  CORSRC= 1302    /SEARCH CORE TABLE
  593       0166  DATE=   166
  594       0300  DISMI0= 300     /DISMIS
  595       0273  DTINT=  273     /DECTAPE SLOT IN INTERRUPT CHAIN
  596       2375  IFNZRO CPU-3  <DTL20=   2375>
  597             IFZERO CPU-3   <DTL20=  6575>
  598       1400  GETB=   1400    /GET A BLOCK OF FREE CORE
  599       1451  GETDB0= 1451    /GET A DDB
  600       6600  GETJTB= 6600    /GETJTA
  601       0404  GIRSC=  404     /STORE A CHARACTER
  602       6013  GIR00=  6013    /ENTRY TO GIR (GENERAL INPUT ROUTINE)
  603       5770  INTCOM= 5770    /COMPLETION OF INTERRUPT CODE
  604       0354  L2EXIT= 354     /LEAVE LEVEL 2
  605       0104  L2SV0=  104     /LEVEL 2 SAVED PC
  606       2175  OVERLA= 2175    /FILE STUFF
  607       0576  OVRLA1= 0576
  608       5333  NFSEGS= 5333    /NUMBER OF FREE DISC SEGMENTS
  609       7420  PTPEMP= 7420    /PTP BUFFER EMPTY PTR
  610       7457  PTPFIL= 7457    /PTP BUFFER FILL PTR
  611       0211  IFZERO D680     <PTP1=  211>    /IOTS TO BE OVERLAYED
  612             IFZERO D680-2   <PTP1=  234>
  613       7477  PTP2=   7477
  614       7531  PTP3=   7531
  615       7533  PTP4=   7533
  616       7537  PTP5=   7537
  617       3604  READFI= 3604    /MORE FILE STUFF
  618       3400  RELOAD= 3400    /AUTOMATIC SYSTEM RESTART
  619       0600  RETB=   600     /RETURN A BLOCK TO FREE CORE
  620       0112  SOURCE= 112     /CHARACTER SOURCE FOR GIR
  621       6402  T8K9=   6402
  622       6401  T8LC=   6401
  623       6400  T8MNC=  6400    /DC08 COMMON STORAGE LOCATIONS
  624       0151  UUDF=   151     /USER DATA FIELD SELECT
  625       5172  UUOERR= 5172
  626       0326  UUOEX1= 326     /UUO (RESIDENT IOT HANDLERS) EXIT
  627       2455  WSCHED= 2455    /ADDRESS FOR WAIT
  628             
  629             /DEFINED IN TS8II
  630             
  631       0032  DTBST1= 32      /DT BUFFER 1 STATUS
  632       2000  DTL21=  PTRSIZ+PTPSIZ+DTASIZ    /DT LEVEL 2 DISPATCH
  633       7720  FIPBLK= 7720    /FIXED BLOCK FOR FIP I/O
  634       0151  F1OFFJ= 151     /FOR OFF /ON COMMANDS USED BY SI
  635       1400  UDTXA=  DTL21-400       /DT UUO SERVICE
  636       0174  UPTIM1= 174     /UPTIME COUNTER IN FIELD 1
  637       0173  UPTIM2= 173
  638       7730  WINBAS= 7730    /ADDRESS OF THE BASIC WINDOW
  639             
  640                     IFNZRO CPU-3 <

      /TSS/8 CONFIGURATION FOR UWM                                       Page 15


  641       2001  DTL11=  DTL21+1 /DT LEVEL 1 DISPATCH
  642                     >
  643             
  644                     IFZERO CPU-3 <
  645             DTL11=  DTL21+1+1       /DT LEVEL 1 DISPATCH; TO ALLOW FOR DISPLAY CHARACTERS
  646                     >
  647       2200  TOF=    DTL21+200       /FETCH A CHARACTER
  648       2316  BUFTST= TOF+116
  649       2400  CRASH=  TOF+200
  650       2401  CNTRLC= CRASH+1 /DECTAPE CTRL/C HANDLER
  651       2505  BRKTST= CRASH+105
  652       2600  TIMER0= CRASH+200
  653       2700  UPEEK1= TIMER0+100
  654       2734  DFINT1= UPEEK1+34
  655       3000  SWK1=   UPEEK1+D689SIZ+100
  656       3200  IFNZRO CPU-3    <DATA1= SWK1+200>
  657             
  658                     IFZERO CPU-3 <
  659             PDPBAS= SWK1
  660             DATA1=  PDPBAS+1000
  661             PDPEXT= PDPBAS
  662             PDPIDE= PDPEXT+2
  663             DSCX=   PDPBAS&6000+1
  664                     >
  665       3000  DEVCHK= DATA1-200
  666       3100  KSFPRA= DATA1-100
  667       3200  DEVTBL= DATA1
  668       3240  DEVTBE= DEVTBL+NULINE+NULINE+2
  669       3256  JOBTBL= DEVTBE+16
  670       3303  CLKTBL= JOBTBL+JOBMAX+1
  671       3330  TTYTBL= CLKTBL+JOBMAX+1
  672       3355  PRGTBL= TTYTBL+JOBMAX+1
  673       3451  DSUTBL= PRGTBL+JOBMAX+JOBMAX+JOBMAX
  674             
  675       4201  AUTOST= 4201    /SYSTEM RESTART ADDRESS IN INIT
  676             
  677             ///     END OF PARAMETERS & COMMON DATA

      /TSS/8 CONFIGURATION FOR UWM                                       Page 16


  678               679             /FIP - UWM VERSION 23
  680             /
  681             /COPYRIGHT 1971                 DIGITAL EQUIPMENT CORPORATION
  682             /                               MAYNARD, MASSACHUSETTS
  683             /
  684             /
  685             
  686             /HANDLES ALL NON RESIDENT FILE IOT'S
  687             
  688             /RUNS IN EXEC MODE
  689             
  690             FIELD 1                         /FIP LOADS ONTO DISK TRACK 1
  691       0000          *0
  692 10000 5401          JMP I .+1
  693 10001 0200          FIP0
  694 10002 3365  RETBK1, RETBKS
  695 10003 3765  LNK01,  LNK0
  696 10004 2513  ZDS1,   DSWORD  /POINTER TO 'FIND' LOCATION IN DIRECTORY
  697       10005  P0004=  .
  698 10005 0004  FIDEXP, FIPDEX  /FIP DISC EXTENSION (SHIFTED 2 BITS)
  699       10006  C002=   .
  700 10006 0002  FILPRP, FILPRO
  701       10007  C0020=  .
  702 10007 0020  FIPFLD, 20      /FIELD WE ARE RUNNING IN
  703             
  704       0010  *10
  705 10010 0000  INDEX,  0       /ONLY REGISTER AVAILABLE IN FIP FOR INDEXING
  706             
  707             /CONSTANTS
  708             
  709 10011 0003  P0003,  3
  710 10012 0005  C0005,  5
  711 10013 0006  C0006,  6
  712 10014 0007  P0007,  7
  713 10015 0010  C0010,  10
  714 10016 0037  P0037,  37
  715 10017 0077  P0077,  77
  716 10020 0200  C0200,  200
  717 10021 1000  P1000,  1000
  718 10022 2000  P2000,  2000
  719 10023 3777  C3777,  3777
  720 10024 5400  P5400,  5400
  721 10025 6603  C6603,  6603    /DMAR - DISC READ IOT
  722 10026 6605  C6605,  6605    /DMAW - DISC WRITE IOT
  723 10027 7000  C7000,  7000
  724 10030 7700  C7700,  7700
  725 10031 7770  P7770,  -10
  726 10032 7771  C7771,  -7
  727 10033 7774  C7774,  -4
  728             
  729 10034 7101  FANFLD, CORTBL-1+2      /PHANTOM FIELD ENTRY
  730 10035 0000  FIUSPC, 0       /SAVED USER PC
  731 10036 0000  FILINK, 0       /SAVED USER EAE MODE, LINK, GT, & SC
  732 10037 0000  FIUSAC, 0       /SAVED USER AC
  733 10040 0000          0       /SAVED USER MQ (IF ANY)
  734 10041 0000  FIACCT, 0       /USER'S ACCOUNT NUMBER

      /TSS/8 CONFIGURATION FOR UWM                                       Page 17


  735 10042 0000  FIJOB,  0       /JOB NUMBER FILE PHANTOM IS REPRESENTING
  736 10043 0000  FIOPTR, 0       /POINTER TO FIELD 0 IOT
  737 10044 0000  GDRETP, 0       /RETRIEVAL POINTER, SET BY GD0 ROUTINE
  738 10045 0000  WNDREM, 0       /REMAINDER FROM DIVISION BY 7
  739 10046 0000  BUFSTA, 0       /BUFFER STATUS, 7777 IF FULL
  740 10047 0000  BUFWRT, 0       /-1, IF BUFFER CHANGED
  741 10050 0000  SATSTA, 0       /SAT STATUS, 7777 IF CHANGED THIS RUN
  742 10051 0000  TABSTA, 0       /TABLE STATUS, 7777 IF CHANGED THIS RUN
  743             
  744             /GLOBALS TO MONITOR IN FIELD ZERO
  745             
  746 10052 3240  DEVEND, DEVTBE
  747             
  748             /POINTERS TO FILE PHANTOM'S INTERNAL TABLES
  749             
  750             ENTEND,         /END OF ENTRY TABLE
  751 10053 6040  UFDTBL, UTABLE  /TABLE OF ALL ACCESSED UFD'S
  752             UFDEND,         /TOP OF UFD TABLE
  753 10054 6160  RETTBL, RTABLE  /TABLE OF RETRIEVAL INFORMATION FOR ALL ACCESSED UFD'S
  754 10055 5570  ENTTBL, ENTABL-10       /TABLE REFLECTING STATE OF ALL POSSIBLE FILE NUMBERS
  755 10056 5200  BUFFER, SEGBUF  /BUFFER FOR DIRECTORY MANIPULATIONS
  756 10057 7250  SATBOT, -SATSIZ /BOTTOM OF STORAGE ALLOCATION TABLE
  757 10060 3256  DEVOVR, JOBTBL  /END OF FIELD 1 DEVICE ASSIGNMENT TABLE

      /TSS/8 CONFIGURATION FOR UWM                                       Page 18


  758             /SUBROUTINE POINTERS
  759             
  760 10061 1141  BLDP1,  BLDP    /BUILD A POINTER TO RETTBL
  761       4462  CHKACT= JMS I . /CHECK TYPE OF ACCOUNT NUMBER
  762 10062 1162          CHKAC0
  763       4463  CHKSRC= JMS I . /CHECK SOURCE OF FIP CALL
  764 10063 1362          CHKSR0
  765 10064 1020  CL01,   CL0     /CLOSE A FILE
  766 10065 4045  DE01,   DE0     /GET A FREE DIRECTORY ENTRY
  767 10066 2475  DS01,   DS0     /DIRECTORY SEARCH
  768 10067 3701  DTE01,  DTE0
  769 10070 0366  EBLD0,  EBLD    /BUILD 'ENTTBL' ENTRY ADDRESS FROM FILE #
  770 10071 2124  ENS01,  ENS0    /COUNT NUMBER OF FILE OPENINGS
  771       4472  FGETJT= JMS I . /FIND JOB STATUS-BLOCK WORD ADDRESS
  772 10072 3562          FGETJ0
  773 10073 3120  FIO01,  FIPIO   /COMMON DISC IO ROUTINE
  774 10074 0342  GD01,   GD0     /GET A FILE DIRECTORY ENTRY INTO CORE
  775 10075 3000  GE01,   GE0     /GET A DIRECTORY WORD INTO CORE
  776 10076 2735  GTBLO1, GTBLOK
  777 10077 0360  IFN01,  IFN0
  778       4500  REBOOT= JMS I . /INITIATE AUTOMATIC SYSTEM RESTART
  779 10100 4324          RBOOT
  780 10101 4203  REL01,  REL00
  781 10102 2600  SATL1,  SATLOK  /GET A FREE SEGMENT FROM SAT
  782 10103 2660  SATR1,  SATREL  /RELEASE A SEGMENT IN SAT
  783       4504  SAVBUF= JMS I . /SET 'BUFFER CHANGED' SWITCH
  784 10104 1372          SAVBF0
  785 10105 3045  SCL01,  SCL0    /CLEAR A DISC SEGMENT TO ZEROES
  786 10106 3744  TF01,   TF0     /FREE AN ENTRY ON UFD TABLE
  787 10107 3200  UC01,   UC0     /USER-OWNER FILE CHECK
  788 10110 3400  UFO01,  UFO0    /OPEN A UFD
  789 10111 3510  UTS01,  UTS0    /SEARCH UFD TABLE FOR PROJ,PROG NUMBER
  790 10112 1152  WRT1,   WRITE   /MAKE SURE THE BUFFER IS EMPTY
  791             
  792 10113 3600  FIEXIT, FIX0    /EXIT ROUTINE
  793 10114 2370  LGI201, LGI20   /-1 TO USER AC
  794             
  795             /UTILITY ROUTINES
  796 10115 0000  UTPRNU, 0       /USED BY UTS0 ROUTINE TO HAVE THE PTR TO UFD TABLE WHILE SEARCHING
  797 10116 0000  CFH,    0       /THIS LOCATION IS USED FOR TEMP STORAGE BY MANY ROUTINES
  798       6221  CFLD=   6221    /FIP IS IN FIELD 2 ALWAYS
  799 10117 7730  BASWIN, WINBAS  /FIELD 1 ADDRESS OF BASIC WINDOW
  800 10120 3777  MPUNCH, -4001   /PUNCH DEVICE #
  801 10121 3776  MLPT,   -4002   /LPT DEVICE #
  802 10122 0000  REL6,   0
  803 10123 4707  REL4,   RELLPT
  804             
  805 10124 0000  FIOSTK, 0       /STACK HOLDING IOT LINKAGE
  806 10125 0000          0
  807 10126 0000          0
  808 10127 0000          0
  809 10130 0000          0
  810 10131 0000          0
  811 10132 0000          0
  812 10133 0000          0
  813             
  814 10134 0000  FLPARB, 0       /TABLE FOR READ OR WRITE PARAMETER CONSTRUCTION

      /TSS/8 CONFIGURATION FOR UWM                                       Page 19


  815 10135 0000          0
  816 10136 0000          0
  817 10137 0000          0
  818 10140 0000          0
  819 10141 0000          0
  820 10142 2175          OVERLA
  821 10143 0000          0
  822             
  823                     IFNZRO BILLNG <
  824 10144 7771  LOGACT, -BILLNG /BILLING SYSTEM ACCOUNT NUMBER
  825                     >

      /TSS/8 CONFIGURATION FOR UWM                                       Page 20


  826       0200          *200
  827             /FILE PHANTOM START
  828             /FIP'S FIRST JOB IS TO PICK UP THE IOT WHICH IT IS TO PERFORM
  829             /AND THE PARAMETERS WHICH GO ALONG WITH IT. (IF ANY) THESE
  830             /ARE MOVED INTO AN 8-WORD BLOCK CALLED 'FIOSTK'  THE FIRST REG-
  831             /ISTER IN THIS BLOCK CONTAINS THE IOT. PARAMETERS FOLLOW
  832             
  833 10200 7300  FIP0,   CLA CLL
  834 10201 3050          DCA SATSTA      /CLEAR SAT STATUS
  835 10202 3051          DCA TABSTA      /CLEAR TABLE STATUS
  836 10203 3047          DCA BUFWRT      /CLEAR THE 'WRITE BUFFER' SWITCH
  837             /
  838             /*****  NOTE!!! IF, FOR ANY REASON, SOME PROGRAM IN THE SYSTEM
  839             /       WRITES INTO ANY UFD (INCLUDING THE MFD), THE FOLLOWING
  840             /       BUFFER STATUS-CHECK 'ISZ' SHOULD BE NOP'ED OUT. THIS WILL
  841             /       HELP PREVENT THE CASE WHERE FIP READS A BLOCK, THE PROGRAM
  842             /       WRITES INTO IT, AND THEN FIP WRITES IT BACK OUT, THUS
  843             /       CLOBBERING WHAT THE PROGRAM JUST WROTE OUT. NOTE THAT THIS
  844             /       COULD HAPPEN IN REVERSE ALSO, THEREBY MESSING UP FIP.
  845             /
  846             /       NOTE ALSO THAT BY DISALLOWING FIP TO 'REMEMBER' WHAT'S IN
  847             /       ITS BUFFER CURRENTLY DOES NOT COMPLETELY PROTECT AGAINST
  848             /       THE ABOVE PROBLEM AND SHOULD NOT BE TAKEN LIGHTLY.
  849             /*****  *****   *****   *****   *****   *****   *****   *****   *****
  850 10204 2046          ISZ BUFSTA      /IS THERE ANYTHING IN THE BUFFER?
  851 10205 5211          JMP .+4         /NO - JUST CLEAR THE SWITCH
  852 10206 1714          TAD I RDCURA    /YES - RE-SET THE ADDRESS BECAUSE IT
  853 10207 4715          JMS I RD301     / MIGHT HAVE BEEN CLOBBERED AT LAST EXIT
  854 10210 7240          CLA CMA         /THEN RESET THE SWITCH
  855 10211 3046          DCA BUFSTA
  856 10212 6201          CDF
  857 10213 1560          TAD I JOB       /GLOBAL TO "JOB"
  858 10214 0016          AND P0037
  859 10215 7450          SNA             /IS EVERYTHING PROPER?
  860 10216 4500          REBOOT          /NO - ERROR *****
  861 10217 3042          DCA FIJOB       /SAVE IT
  862 10220 6221          CFLD
  863 10221 4472          FGETJT          /SAVE USER'S REGISTERS
  864 10222 0011           JOBREG
  865 10223 3227          DCA .+4
  866 10224 6202          CIF
  867 10225 4567          BLT
  868 10226 6211           DATFLD
  869 10227 0000  FITPTR,  0
  870 10230 6221           CFLD
  871 10231 0035           FIUSPC
  872 10232 7773           -5
  873 10233 4472          FGETJT
  874 10234 0007           JOBLNK         /IOT REQUEST WORD
  875 10235 3043          DCA FIOPTR      /POINTER TO IOT LINKAGE
  876 10236 6211          DATFLD          /CDF FIELD 0
  877 10237 1443          TAD I FIOPTR    /PICK UP LINKAGE
  878 10240 0027          AND C7000       /IS IT AN IOT? (IF IT IS, JOBDAT WILL HAVE BITS 0-2 CLEARED)
  879 10241 7650          SNA CLA
  880 10242 5306          JMP FIP2        /IS AN IOT, SO GO MOVE IT INTO FIOSTK (AC IS PARAMETER)
  881 10243 1443          TAD I FIOPTR    /IS A POINTER, PICK UP LINKAGE
  882 10244 3251          DCA FIP6        /POINTER TO LINKAGE TABLE

      /TSS/8 CONFIGURATION FOR UWM                                       Page 21


  883 10245 6221          CFLD
  884 10246 6202          CIF
  885 10247 4567          BLT             /MOVE IOT PARAMETERS INTO FIOSTK
  886 10250 6211           DATFLD
  887 10251 0000  FIP6,    0
  888 10252 6221           CFLD
  889 10253 0124           FIOSTK         /IOT LINKAGE BUFFER
  890 10254 7770           -10
  891 10255 1124          TAD FIOSTK
  892 10256 7710          SPA CLA         /WILL THE IOT PARAMETER BLOCK BE NEEDED TO RETURN PARS?
  893 10257 5263          JMP FIP4        /YES, SO DON'T RETURN IT
  894 10260 1251          TAD FIP6
  895 10261 4402          JMS I RETBK1    /RETURN THE IOT PARAMETER BLOCK TO FREE CORE
  896 10262 7300          CLA CLL
  897             /
  898             /COMES HERE WHEN IOT AND ITS PARAMETERS ARE COMFORTABLY
  899             /NESTLED IN FIOSTK
  900 10263 1316  FIP4,   TAD IOTABL
  901 10264 3227          DCA FITPTR      /TABLE POINTER
  902 10265 2227  FIP5,   ISZ FITPTR      /PICK UP IOT FROM TABLE
  903 10266 1627          TAD I FITPTR
  904 10267 7450          SNA             /END OF TABLE?
  905 10270 4500          REBOOT          /YES - ERROR *****
  906 10271 7041          CIA             /NO
  907 10272 1124          TAD FIOSTK      /IOT FROM USER
  908 10273 7640          SZA CLA         /DISPATCH?
  909 10274 5265          JMP FIP5        /NO
  910 10275 1227          TAD FITPTR      /YES - GET THE DISPATCH ADDRESS
  911 10276 1341          TAD IODSPA
  912 10277 3227          DCA FITPTR
  913 10300 1627          TAD I FITPTR
  914 10301 3227          DCA FITPTR
  915 10302 1124          TAD FIOSTK      /DOES THIS IOT REQUIRE PARAMETERS TO BE
  916                                     /RETURNED IN AN IOT PARAMETER BLOCK?
  917 10303 7700          SMA CLA         /...IF SO, USER AC CONTAINS A PTR. TO WHERE THEY WILL GO
  918 10304 3037          DCA FIUSAC      /CLEAR USER AC
  919 10305 5627          JMP I FITPTR    /DISPATCH
  920             
  921             /COMES HERE FOR A "SHORT" IOT. SAVED AC IS ONLY PARAMETER
  922             /PUT IT IN FIOSTK+1
  923 10306 1443  FIP2,   TAD I FIOPTR    /PICK UP IOT
  924 10307 3124          DCA FIOSTK      /PLACE ON STACK
  925 10310 1037          TAD FIUSAC      /USER ACCUMULATOR
  926 10311 3125          DCA FIOSTK+1    /SIMULATE LINKAGE
  927 10312 6221          CFLD            /CHANGE TO CURRENT FIELD
  928 10313 5263          JMP FIP4
  929             /
  930 10314 3042  RDCURA, RDCURR  /POINTER TO SEGMENT # IN BUFFER
  931 10315 3067  RD301,  RD30

      /TSS/8 CONFIGURATION FOR UWM                                       Page 22


  932 10316 0316  IOTABL, .               /TABLE OF USER FILE IOT'S
  933 10317 0440          ASD             /ASSIGN A DEVICE
  934 10320 0442          REL             /RELEASE A DEVICE
  935 10321 0600          REN             /RENAME A FILE
  936 10322 6601          OPEN            /OPEN A FILE
  937 10323 0602          CLOS            /CLOSE A FILE
  938 10324 6603          RFILE           /FILE READ (WINDOW MOVE)
  939 10325 0604          PROT            /FILE PROTECTION
  940 10326 6605          WFILE           /FILE WRITE (WINDOW MOVE)
  941 10327 6606          XOPEN           /OPEN A FILE WITH EXCLUSIVE USE
  942 10330 0607          CPASS           /CHANGE A USER'S PASSWORD
  943 10331 0610          CRF             /CREATE A FILE
  944 10332 0611          EXT             /EXTEND A FILE
  945 10333 0612          RED             /REDUCE A FILE
  946 10334 6613          FINF            /FILE INFORMATION
  947 10335 0614          LIN
  948 10336 0615          LOUT
  949 10337 0620          BCLR            /CLEAR ACCOUNT BILLING INFORMATION
  950 10340 0000          0
  951             
  952 10341 2432  IODSPA, IODISP-IOTABL-1

      /TSS/8 CONFIGURATION FOR UWM                                       Page 23


  953             /ROUTINE TO GET A DIRECTORY ENTRY INTO CORE
  954             
  955             /CALLING SEQUENCE:
  956             /       TAD (INTERNAL FILE NUMBER)
  957             /       JMS GD0
  958             /       RETURN (BUFFER POINTER IN AC, 0=ERROR)
  959             
  960 10342 0000  GD0,    0
  961 10343 4470          JMS I EBLD0
  962 10344 3357          DCA GDUFDP
  963 10345 1757          TAD I GDUFDP    /RELATIVE POSITION IN UFD TABLE
  964 10346 4461          JMS I BLDP1
  965 10347 3044          DCA GDRETP      /POINTER TO UFD RETRIEVAL INFORMATION
  966 10350 2357          ISZ GDUFDP
  967 10351 1757          TAD I GDUFDP    /PICK UP ENTRY ADDRESS WITHIN UFD
  968 10352 3355          DCA GD1
  969 10353 1044          TAD GDRETP
  970 10354 4475          JMS I GE01      /GET ENTRY INTO CORE
  971 10355 0000  GD1,    0
  972 10356 5742          JMP I GD0
  973 10357 0000  GDUFDP, 0
  974             
  975 10360 0000  IFN0,   0
  976 10361 1125          TAD FIOSTK+1
  977 10362 0011          AND P0003
  978 10363 3125          DCA FIOSTK+1
  979 10364 1125          TAD FIOSTK+1    /RETURN THE FILE INDEX
  980 10365 5760          JMP I IFN0
  981             
  982             /ROUTINE TO CALCULATE ADDRESS INTO 'ENTTBL'.
  983             /AC = [JOB # * 4 + FILE #] * 2 + 'ENTTBL'
  984 10366 0000  EBLD,   0
  985 10367 3116          DCA CFH
  986 10370 1042          TAD FIJOB
  987 10371 7106          CLL RTL
  988 10372 1116          TAD CFH
  989 10373 7004          RAL
  990 10374 1055          TAD ENTTBL
  991 10375 5766          JMP I EBLD

      /TSS/8 CONFIGURATION FOR UWM                                       Page 24


  992                     PAGE
  993             /THIS HANDLES THE 'OPEN' & 'XOPEN' IOTS.
  994             /THE 'XOPEN' WORKS EXACTLY LIKE THE NORMAL 'OPEN', EXCEPT
  995             /THAT THE USER GAINS EXCLUSIVE USE OVER THE FILE IF HE
  996             /IS ALLOWED TO WRITE IT. NO ONE ELSE MAY OPEN IT WHILE
  997             /HE HAS IT EXCLUSIVELY.
  998             /
  999             /THERE ARE SEVERAL SPECIAL CASES WHICH ARE HANDLED:
 1000             /
 1001             /A USER NO LONGER NEEDS HIS ACCT # & PASSWORD TO OPEN HIS UFD.
 1002             /ALL HE NEEDS IS THE OWNER'S ACCT BE 0001 AND THE FIRST
 1003             /WORD OF THE NAME BE 0 OR HIS ACCT #. IF HIS IS A SYSTEM
 1004             /ACCOUNT, HE MAY OPEN ANY UFD (EXCEPT THE MFD) BY SETTING
 1005             /THE FIRST WORD OF THE NAME TO THE DESIRED ACCOUNT.
 1006             /
 1007             /WHEN AN OPERATOR ACCOUNT TRIES TO OPEN A NON-EXISTENT
 1008             /UFD, HE IS RETURNED THE NUMBER OF THE NEXT UFD IN
 1009             /THE FOURTH WORD OF HIS OPEN PACKET.
 1010             /
 1011             /WHEN 'SI' OPENS A FILE FROM THE SYSTEM LIBRARY WHICH
 1012             /HAS THE ".SVP" EXTENSION, WE SET THE "JSPRIV" BIT IN
 1013             /THE USER'S JOB-STATUS WORD. THIS ALLOWS ONLY CERTAIN
 1014             /SYSTEM PROGRAMS TO USE THE "PEEK" IOT, THUS PREVENTING
 1015             /USERS FROM EXAMINING SYSTEM KEYBOARD BUFFERS AND
 1016             /STEALING PASSWORDS.
 1017             /
 1018             /THE SYSTEM MANAGER AND, IF CONFIGURED, THE BILLING SYSTEM
 1019             /ACCOUNT MAY OPEN ANY FILE IN THE SYSTEM AS IF THEY OWNED IT.
 1020             /NOTE THAT THIS IS ONLY NECESSARY FOR DELETING OTHER USERS'
 1021             /FILES WHEN BILLING OR REMOVING AN ACCOUNT NUMBER.
 1022             /
 1023             /THE SYSTEM LIBRARY FILE "BASIC" IS GIVEN ITS OWN PRIVATE
 1024             /RETRIEVAL WINDOW IN FIELD 1 ONLY IF IT IS WRITE-PROTECTED
 1025             /AND IT IS NOT TOO LARGE FOR THIS FIXED WINDOW.

      /TSS/8 CONFIGURATION FOR UWM                                       Page 25


 1026             /
 1027       0132  OPNACT= FIOSTK+6
 1028       0133  OPNBUF= FIOSTK+7
 1029             /
 1030 10400 7330  XOPN0,  CLA CLL CML RAR /SET THE 'EXCLUSIVE USE' BIT
 1031 10401 3371  OPN0,   DCA XOPNSW
 1032 10402 4477          JMS I IFN01     /CHECK FOR A LEGAL FILE #
 1033 10403 4464          JMS I CL01      /CLOSE THE FILE IF ANY OPEN
 1034 10404 1126          TAD FIOSTK+2
 1035 10405 7450          SNA             /IS IT ASSUMED TO BE THIS USER'S FILE?
 1036 10406 1041          TAD FIACCT      /YES - FILL IT IN
 1037 10407 3132          DCA OPNACT
 1038 10410 7240          CLA CMA
 1039 10411 1132          TAD OPNACT
 1040 10412 7640          SZA CLA         /IS IT A FILE-DIRECTORY?
 1041 10413 5243          JMP OPN2        /NO
 1042             /
 1043             /HE WANTS TO OPEN A DIRECTORY - WE CHECK TO SEE IF
 1044             /THE DIRECTORY HE WANTS IS HIS OR, IF NOT, IF HE
 1045             /IS THE MANAGER OR OTHER SYSTEM PERSONNEL OR THE
 1046             /BILLING SYSTEM ACCOUNT.
 1047 10414 1127          TAD FIOSTK+3
 1048 10415 7450          SNA             /IS IT ASSUMED TO BE HIS OWN?
 1049 10416 1041          TAD FIACCT      /YES - SET IT
 1050 10417 3127          DCA FIOSTK+3
 1051 10420 1041          TAD FIACCT
 1052 10421 7041          CIA
 1053 10422 1127          TAD FIOSTK+3
 1054 10423 7650          SNA CLA         /IS IT HIS OWN UFD?
 1055 10424 5242          JMP OPN1        /YES
 1056 10425 7344          CLA CLL CMA RAL
 1057 10426 1127          TAD FIOSTK+3
 1058 10427 7450          SNA             /IS IT THE LIBRARY UFD?
 1059 10430 5242          JMP OPN1        /YES - ANYONE CAN READ THAT
 1060 10431 7001          IAC
 1061 10432 7650          SNA CLA         /NO - IS IT THE MFD?
 1062 10433 5352          JMP OPNER2      /YES - "PROTECTION VIOLATION"
 1063 10434 4462          CHKACT          /IS THIS THE MANAGER OR BILLING SYSTEM?
 1064 10435 5242          JMP OPN1        /YES - THEY GET ANYTHING ELSE
 1065 10436 1041          TAD FIACCT
 1066 10437 0030          AND C7700
 1067 10440 7640          SZA CLA         /IS THIS A SYSTEM OPERATOR OR MANAGER?
 1068 10441 5352          JMP OPNER2      /NO - "PROTECTION VIOLATION"
 1069 10442 7240  OPN1,   CLA CMA         /SET NON-ZERO FOR ONE-WORD SEARCH
 1070 10443 3364  OPN2,   DCA OPNFLG      / OF FILE-DIRECTORY
 1071 10444 1127          TAD FIOSTK+3
 1072 10445 7650          SNA CLA         /IS IT A NULL FILENAME?
 1073 10446 5351          JMP OPNER1      /YES - "FILE NOT FOUND"
 1074 10447 1132          TAD OPNACT
 1075 10450 4510          JMS I UFO01     /OPEN THE OWNER'S UFD
 1076 10451 5351          JMP OPNER1      /NO SUCH USER - "FILE NOT FOUND"
 1077 10452 1371          TAD XOPNSW      /ADD IN THE 'EXCLUSIVE USE' BIT (4000)
 1078 10453 3371          DCA XOPNSW      / & SAVE FOR FIRST WORD OF 'ENTTBL' ENTRY
 1079 10454 1371          TAD XOPNSW
 1080 10455 4461          JMS I BLDP1     /GET THE 'RETTBL' ENTRY ADDRESS
 1081 10456 3126          DCA FIOSTK+2
 1082 10457 1364          TAD OPNFLG      /NOW GET THE SEARCH-TYPE AND DO

      /TSS/8 CONFIGURATION FOR UWM                                       Page 26


 1083 10460 4466          JMS I DS01      / A 1- OR 3-WORD DIRECTORY SEARCH
 1084 10461 0126           FIOSTK+2
 1085 10462 5343          JMP OPNER0      /NO FIND - "FILE NOT FOUND"
 1086 10463 1005          TAD P0004
 1087 10464 3133          DCA OPNBUF      /SAVE THE POINTER TO THE PROTECT-WORD
 1088             /
 1089             /HERE WE FIGURE OUT THE TYPE OF ACCOUNT THIS USER
 1090             /HAS & THEN SEE IF THE FILE IS PROTECTED AGAINST THAT
 1091             /TYPE OF ACCESS.
 1092 10465 4766          JMS I OPNPRT    /CALCULATE THE PROTECTION CHECK-MASK
 1093 10466 3364          DCA OPNFLG
 1094 10467 1364          TAD OPNFLG      /'AND' THE PROTECTION-CODE TO THE LOW-
 1095 10470 0014          AND P0007       / ORDER 3 BITS OF THE MASK
 1096 10471 0533          AND I OPNBUF
 1097 10472 7640          SZA CLA         /IS THE FILE READ PROTECTED?
 1098 10473 5352          JMP OPNER2      /YES - "PROTECTION VIOLATION"
 1099 10474 1364          TAD OPNFLG      /NO - CHECK FOR 'WRITE-PROTECT'
 1100 10475 7104          CLL RAL
 1101 10476 0533          AND I OPNBUF
 1102 10477 7650          SNA CLA         /IS IT WRITE-PROTECTED?
 1103 10500 5305          JMP OPN4        /NO
 1104 10501 1371          TAD XOPNSW
 1105 10502 7710          SPA CLA         /YES - DOES HE WANT EXCLUSIVE USE?
 1106 10503 5352          JMP OPNER2      /YES, TOO BAD - "PROTECTION VIOLATION"
 1107 10504 1005          TAD P0004       /NO - SET 'PROTECTED' BIT
 1108 10505 3364  OPN4,   DCA OPNFLG
 1109 10506 1404          TAD I ZDS1      /GET THE SEARCH-FIND ADDRESS
 1110 10507 3312          DCA .+3
 1111 10510 1126          TAD FIOSTK+2
 1112 10511 4471          JMS I ENS01     /NOW CHECK FOR OTHER OPENINGS
 1113 10512 0000           0
 1114 10513 7650          SNA CLA         /ANYONE ELSE HAVE IT OPEN?
 1115 10514 5324          JMP OPN5        /NO
 1116 10515 7360          CLA CLL CMA CML
 1117 10516 1765          TAD I OPNFND    /YES - GET THE LAST 'FIND' ENTRY (IN 'ENTTBL')
 1118 10517 3116          DCA CFH
 1119 10520 1516          TAD I CFH
 1120 10521 1371          TAD XOPNSW
 1121 10522 7730          SPA SZL CLA     /DOES SOMEONE ELSE HAVE 'EXCL. USE' OR DO WE WANT IT?
 1122 10523 5354          JMP OPNER3      /YES, TOO BAD - "ANOTHER USER HAS FILE"
 1123 10524 1125  OPN5,   TAD FIOSTK+1    /WE HAVE THE FILE - NOW FILL IN THE
 1124 10525 4470          JMS I EBLD0     / 'ENTTBL' ENTRY
 1125 10526 3116          DCA CFH
 1126 10527 1371          TAD XOPNSW      /FIRST THE 'UFDTBL' INDEX &
 1127 10530 3516          DCA I CFH       / THE 'EXCLUSIVE USE' BIT
 1128 10531 2116          ISZ CFH
 1129 10532 1404          TAD I ZDS1      /THEN THE UFD ENTRY-ADDRESS
 1130 10533 3516          DCA I CFH
 1131 10534 7240          CLA CMA
 1132 10535 3051          DCA TABSTA      /SET THE 'TABLES CHANGED' SWITCH
 1133 10536 4767          JMS I OPNPRV    /CHECK FOR SETTING THE 'PRIVILEGE' BIT
 1134 10537 2133          ISZ OPNBUF      / AND SET 'OPNBUF' TO POINT TO THE SIZE
 1135 10540 1364          TAD OPNFLG      /THEN PICK UP THE PROTECTION-WORD
 1136 10541 5742          JMP I .+1       / AND GO DO THE BOOKKEEPING
 1137 10542 0600          OPN6
 1138             
 1139             /COMES HERE TO RETURN VARIOUS ERROR STATUSES.

      /TSS/8 CONFIGURATION FOR UWM                                       Page 27


 1140 10543 7240  OPNER0, CLA CMA
 1141 10544 1132          TAD OPNACT
 1142 10545 7640          SZA CLA         /WAS THIS A DIRECTORY OPEN?
 1143 10546 5351          JMP OPNER1      /NO
 1144 10547 4463          CHKSRC          /YES - WAS IT PROGRAMMATIC?
 1145 10550 5770          JMP I OPNR0A    /YES - RETURN THE NEXT UFD NUMBER
 1146                                     /NO - JUST RETURN THE ERROR CODE
 1147 10551 7330  OPNER1, CLA CLL CML RAR /7000 = "FILE NOT FOUND"
 1148 10552 7130  OPNER2, CLL CML RAR     /6000 = "PROTECTION VIOLATION"
 1149 10553 7410          SKP
 1150 10554 1021  OPNER3, TAD P1000       /4400 = "ANOTHER USER HAS FILE OPEN"
 1151 10555 7130          CLL CML RAR
 1152 10556 3037  OPNEXT, DCA FIUSAC      /SET (OR CLEAR) HIS AC
 1153 10557 6211          DATFLD
 1154 10560 1443          TAD I FIOPTR
 1155 10561 4402          JMS I RETBK1    /RETURN THE PARAMETER BLOCK
 1156 10562 7300          CLA CLL
 1157 10563 5513          JMP I FIEXIT    /THEN EXIT FIP
 1158             /
 1159 10564 0000  OPNFLG, 0
 1160 10565 2165  OPNFND, ENSFND  /LOC. OF LAST 'FIND' IN ENS0
 1161 10566 0751  OPNPRT, OPNPR0  /CALCULATE CHECK-MASK
 1162 10567 5115  OPNPRV, OPNPV0  /CHECK FOR JOB PRIVILEGE
 1163 10570 5145  OPNR0A, OPNR01
 1164 10571 0000  XOPNSW, 0

      /TSS/8 CONFIGURATION FOR UWM                                       Page 28


 1165                     PAGE
 1166             /
 1167             /NOW WE CAN OPEN THE FILE - JUST BUILD THE FILE CONTROL-
 1168             /BLOCK AND THE SEGMENT RETRIEVAL WINDOW.
 1169 10600 3335  OPN6,   DCA OPNPRW      /SAVE THE FILE PROTECTION-WORD
 1170 10601 1533          TAD I OPNBUF    / AND THE FILE SIZE (FOR BASIC CHECK)
 1171 10602 3306          DCA OPNSIZ
 1172 10603 2133          ISZ OPNBUF
 1173 10604 2133          ISZ OPNBUF
 1174 10605 1533          TAD I OPNBUF    /GET THE RETRIEVAL WINDOW ADDRESS
 1175 10606 3211          DCA .+3
 1176 10607 1126          TAD FIOSTK+2
 1177 10610 4475          JMS I GE01      /NOW READ IN THE FIRST WINDOW
 1178 10611 0000           0
 1179 10612 3333          DCA OPNWND      / AND SAVE ITS IN-CORE ADDRESS
 1180 10613 1125          TAD FIOSTK+1
 1181 10614 1345          TAD OPNJF0      /FIND THE FILE STATUS WORD
 1182 10615 3217          DCA .+2
 1183 10616 4472          FGETJT          / & GET ITS ADDRESS
 1184 10617 0000  OPNPTR,  0
 1185 10620 4476          JMS I GTBLO1    /THEN GET A LINKED-BLOCK FOR FILE CONTROL
 1186 10621 3133          DCA OPNBUF      / (POINTS TO WINDOW-ADDRESS)
 1187 10622 7326          CLA CLL CML RTL /GET THE PROTECTION-WORD LOCATION
 1188 10623 1133          TAD OPNBUF
 1189 10624 3116          DCA CFH
 1190 10625 1335          TAD OPNPRW      / AND SET THE PROTECTION-WORD IN THE BLOCK
 1191 10626 3516          DCA I CFH       / 0=READ/WRITE; 4=READ ONLY
 1192             /
 1193             /NOW WE CHECK TO SEE IF THIS IS BASIC AND SHOULD HAVE ITS
 1194             /OWN PRIVATE RETRIEVAL WINDOW.
 1195 10627 7344          CLA CLL CMA RAL
 1196 10630 1132          TAD OPNACT
 1197 10631 7640          SZA CLA         /IS IT FROM THE SYSTEM LIBRARY?
 1198 10632 5324          JMP OPN11       /NO
 1199 10633 1346          TAD OPNBAS
 1200 10634 1127          TAD FIOSTK+3
 1201 10635 7640          SZA CLA         / "BA"?
 1202 10636 5324          JMP OPN11       /NO
 1203 10637 1347          TAD OPNBAS+1
 1204 10640 1130          TAD FIOSTK+4
 1205 10641 7640          SZA CLA         / "BASI"?
 1206 10642 5324          JMP OPN11       /NO
 1207 10643 1350          TAD OPNBAS+2
 1208 10644 1131          TAD FIOSTK+5
 1209 10645 7640          SZA CLA         / "BASIC "?
 1210 10646 5324          JMP OPN11       /NO
 1211 10647 1335          TAD OPNPRW
 1212 10650 7650          SNA CLA         /YES - CAN HE ALTER IT?
 1213 10651 5324          JMP OPN11       /YES - NO SPECIAL WINDOW
 1214 10652 1306          TAD OPNSIZ
 1215 10653 1117          TAD BASWIN
 1216 10654 7700          SMA CLA         /NO - IS IT TOO LARGE?
 1217 10655 5323          JMP OPN10       /YES - INVALIDATE THE SPECIAL WINDOW
 1218             /
 1219             /HERE WE BUILD THE SPECIAL WINDOW FOR BASIC. NOTE THAT WHEN BASIC
 1220             /IS TOO LARGE FOR THE WINDOW, WE INVALIDATE IT.  TO INSURE THAT
 1221             /THE SPECIAL WINDOW REFLECTS ANY CHANGES, WE ALWAYS REBUILD

      /TSS/8 CONFIGURATION FOR UWM                                       Page 29


 1222             /IT, SINCE WE (CURRENTLY) HAVE NO GRACEFUL WAY OF DETECTING
 1223             /A LONE USER CHANGING THE SIZE (SEVERAL USERS MAY NOW WRITE
 1224             /INTO A FILE SIMULTANEOUSLY.
 1225 10656 6221          CFLD
 1226 10657 1117          TAD BASWIN      /NO - SET THE WINDOW POINTER
 1227 10660 3217          DCA OPNPTR
 1228 10661 1333  OPN7,   TAD OPNWND      / AND THE RETRIEVAL-BLOCK BUFFER-ADDRESS
 1229 10662 3010          DCA INDEX
 1230 10663 1032          TAD C7771
 1231 10664 3116          DCA CFH         /SET THE SEGMENT/BLOCK COUNT (-7)
 1232 10665 1410  OPN8,   TAD I INDEX     /NOW GET A SEGMENT NUMBER
 1233 10666 7450          SNA             /AT THE END OF THE SEGMENTS?
 1234 10667 5311          JMP OPN9        /YES
 1235 10670 2217          ISZ OPNPTR      /NO - INCREMENT THE WINDOW POINTER
 1236 10671 7410          SKP
 1237 10672 7402          HLT             /OOPS!! ERROR IN SIZE CHECK *****
 1238 10673 6211          DATFLD
 1239 10674 3617          DCA I OPNPTR    /PLOP THE SEGMENT NUMBER INTO THE WINDOW
 1240 10675 6221          CFLD
 1241 10676 2116          ISZ CFH         /INCREMENT COUNT
 1242 10677 5265          JMP OPN8        / & CONTINUE
 1243 10700 1733          TAD I OPNWND    /GET THE NEXT BLOCK ADDRESS
 1244 10701 7450          SNA             /ARE WE DONE?
 1245 10702 5311          JMP OPN9        /YES
 1246 10703 3306          DCA .+3         /NO - SET NEXT ENTRY ADDRESS
 1247 10704 1126          TAD FIOSTK+2
 1248 10705 4475          JMS I GE01      /NOW GET THE NEXT WINDOW IN CHAIN
 1249 10706 0000  OPNSIZ,  0
 1250 10707 3333          DCA OPNWND      / & SAVE ITS CORE-ADDRESS
 1251 10710 5261          JMP OPN7        /OK - KEEP MOVING SEGMENT NUMBERS
 1252 10711 6211  OPN9,   DATFLD
 1253 10712 7240          CLA CMA         /ALL DONE - SET THE 'SET UP' SWITCH
 1254 10713 3517          DCA I BASWIN
 1255 10714 7410          SKP
 1256 10715 3617          DCA I OPNPTR    /CLEAR THE REST OF THE SPECIAL WINDOW
 1257 10716 2217          ISZ OPNPTR
 1258 10717 5315          JMP .-2
 1259 10720 1117          TAD BASWIN      /SET THE WINDOW ADDRESS IN THE
 1260 10721 3533          DCA I OPNBUF    / FILE CONTROL-BLOCK
 1261 10722 5337          JMP OPN12       /NOW FINISH UP
 1262             /
 1263             /HERE WE FETCH A FREE-CORE BLOCK AND COPY THE FIRST WINDOW
 1264             /INTO IT.
 1265 10723 3517  OPN10,  DCA I BASWIN    /CLEAR THE BASIC WINDOW FLAG
 1266 10724 1133  OPN11,  TAD OPNBUF      /GET THE WINDOW-ADDRESS POINTER
 1267 10725 4476          JMS I GTBLO1    / & AND LINK A BLOCK TO IT
 1268 10726 3335          DCA OPNPRW
 1269 10727 6221          CFLD
 1270 10730 6202          CIF
 1271 10731 4567          BLT             /NOW COPY OVER THE WINDOW
 1272 10732 6221           CFLD
 1273 10733 0000  OPNWND,  0      /SOURCE
 1274 10734 6211           DATFLD
 1275 10735 0000  OPNPRW,  0      /DESTINATION
 1276 10736 7770           -10    /WORD-COUNT
 1277             /
 1278             /ALL DONE - NOW JUST INCREMENT THE UFD-USAGE COUNT & EXIT.

      /TSS/8 CONFIGURATION FOR UWM                                       Page 30


 1279 10737 6221  OPN12,  CFLD
 1280 10740 7240          CLA CMA
 1281 10741 1515          TAD I UTPRNU    /INDICATE OUR UFD-USAGE
 1282 10742 3515          DCA I UTPRNU
 1283 10743 5744          JMP I .+1       /GO CLEAN UP & EXIT
 1284 10744 0556          OPNEXT
 1285             /
 1286 10745 0020  OPNJF0, JOBF0
 1287 10746 3537  OPNBAS, -4241   / (-) "BASIC " IN TSS/8 6-BIT
 1288 10747 1427          -6351
 1289 10750 3500          -4300
 1290             
 1291             /
 1292             /SUBROUTINE TO CALCULATE THE PROTECTION CHECK-MASK. THIS
 1293             /IS BASED ON WHO THE FILE OWNER IS COMPARED TO WHO IS
 1294             /REQUESTING THE FILE.
 1295 10751 0000  OPNPR0, 0
 1296 10752 1132          TAD OPNACT
 1297 10753 7041          CIA
 1298 10754 1041          TAD FIACCT
 1299 10755 7640          SZA CLA         /IS IT HIS OWN FILE?
 1300 10756 4462          CHKACT          /NO - IS THIS A PRIVILEGED USER?
 1301 10757 5373          JMP OPNPR1      /YES - HE OWNS EVERYTHING
 1302 10760 1132          TAD OPNACT      /NO - GET THE OWNER'S PROJECT
 1303 10761 0030          AND C7700
 1304 10762 7041          CIA
 1305 10763 3335          DCA OPNPRW
 1306 10764 1041          TAD FIACCT      / AND THE REQUESTOR'S PROJECT
 1307 10765 0030          AND C7700
 1308 10766 1335          TAD OPNPRW
 1309 10767 7650          SNA CLA         /DO THE PROJECT NUMBERS MATCH?
 1310 10770 1011          TAD P0003       /YES - MASK = 4
 1311 10771 7101          CLL IAC         /NO - MASK = 1
 1312 10772 7410          SKP
 1313 10773 1015  OPNPR1, TAD C0010       /OWNS FILE - MASK = 10
 1314 10774 5751          JMP I OPNPR0    /RETURN WITH AC = MASK

      /TSS/8 CONFIGURATION FOR UWM                                       Page 31


 1315                     PAGE
 1316             /ROUTINE TO CLOSE A FILE
 1317             
 1318 11000 3216  CLS0,   DCA CLSIFN      /INTERNAL FILE NUMBER
 1319 11001 1033          TAD C7774
 1320 11002 3217          DCA CLCNTR      /COUNTER FOR BIT SCAN
 1321 11003 1125  CLS1,   TAD FIOSTK+1    /PICK UP BIT PATTERN
 1322 11004 7004          RAL
 1323 11005 3125          DCA FIOSTK+1
 1324 11006 7420          SNL             /BIT SET FOR THIS FILE #?
 1325 11007 5212          JMP .+3
 1326 11010 1216          TAD CLSIFN      /YES - GET THE FILE #
 1327 11011 4220          JMS CL0         / AND CLOSE IT
 1328 11012 2216          ISZ CLSIFN      /NEXT FILE NUMBER
 1329 11013 2217          ISZ CLCNTR      /DONE ALL FOUR?
 1330 11014 5203          JMP CLS1        /NO, KEEP AT IT
 1331 11015 5513          JMP I FIEXIT    /THROUGH
 1332             
 1333 11016 0000  CLSIFN, 0
 1334 11017 0000  CLCNTR, 0
 1335             
 1336             /ROUTINE TO DO ACTUAL FILE CLOSE
 1337 11020 0000  CL0,    0
 1338 11021 4470          JMS I EBLD0
 1339 11022 3266          DCA ENR0        /SAVE THE 'ENTTBL' POINTER
 1340 11023 1116          TAD CFH
 1341 11024 4403          JMS I LNK01     /RETURNS WITH PTR. TO FILE CONTROL BLOCK FROM JOB STATUS BLOCK
 1342 11025 7450          SNA
 1343 11026 5263          JMP CL3         /FILE WAS NOT OPEN
 1344 11027 3277          DCA ENR1        /SAVE IT
 1345 11030 3516          DCA I CFH       /CLEAR POINTER  TO FILE CONTROL BLOCK---INDICATES FILE CLOSED
 1346 11031 6221          CFLD            /SET DATA FIELD TO THIS FIELD
 1347 11032 1277          TAD ENR1        /POINTER TO PARAMETER BLOCK
 1348 11033 4402          JMS I RETBK1    /RETURN THE CONTROL-BLOCK
 1349 11034 3277          DCA ENR1
 1350 11035 1277          TAD ENR1        /GET THE RETRIEVAL-WINDOW ADDR.
 1351 11036 7041          CIA
 1352 11037 1117          TAD BASWIN
 1353 11040 7650          SNA CLA         /IS IT THE SPECIAL BASIC WINDOW?
 1354 11041 5244          JMP .+3         /YES - DON'T FREE IT
 1355 11042 1277          TAD ENR1        /NO - RETURN IT TO FREE-CORE
 1356 11043 4402          JMS I RETBK1
 1357 11044 7340          CLA CLL CMA
 1358 11045 1666          TAD I ENR0      /RELATIVE POINTER TO UFD RETRIEVAL TABLE
 1359 11046 7104          CLL RAL         / * 2 (AND ZAP 'EXCLUSIVE USE' BIT)
 1360 11047 7001          IAC
 1361 11050 1053          TAD UFDTBL
 1362 11051 3265          DCA CLUFDP      /POINTER TO ACCESS COUNTER
 1363 11052 3666          DCA I ENR0      /CLEAR PTR. IN ENTTBL TO INDICATE FILE IS CLOSED
 1364 11053 7240          CLA CMA
 1365 11054 3051          DCA TABSTA      /SET TABLE STATUS TO WRITE OUT
 1366 11055 2665          ISZ I CLUFDP    /REMOVE THIS JOB FROM  ACCESS COUNT IN UFDTBL
 1367 11056 5620          JMP I CL0
 1368             /THIS WAS THE ONLY GUY USING THIS UFD, SO CLOSE IT OUT
 1369 11057 7240          CLA CMA         /NO ONE IS NOW ACCESSING THIS UFD
 1370 11060 1265          TAD CLUFDP
 1371 11061 4506          JMS I TF01      /FREE A TABLE ENTRY

      /TSS/8 CONFIGURATION FOR UWM                                       Page 32


 1372 11062 5620          JMP I CL0
 1373             
 1374 11063 6221  CL3,    CFLD
 1375 11064 5620          JMP I CL0
 1376             
 1377 11065 0000  CLUFDP, 0
 1378             
 1379             /FIND THE NUMBER OF PEOPLE ACCESSING THIS FILE
 1380             /SKIPS IF EXACTLY ONE USER IS
 1381 11066 0000  ENR0,   0
 1382 11067 1125          TAD FIOSTK+1
 1383 11070 4470          JMS I EBLD0
 1384 11071 3277          DCA ENR1        /PTR. INTO ENTTBL
 1385 11072 2277          ISZ ENR1
 1386 11073 1677          TAD I ENR1      /GET ADDRESS IN UFD
 1387 11074 3277          DCA ENR1
 1388 11075 1044          TAD GDRETP      /RTABLE
 1389 11076 4471          JMS I ENS01     /HOW MANY PEOPLE HAVE THIS FILE OPEN?
 1390 11077 0000  ENR1,    0
 1391 11100 7041          CIA             /RETURNS WITH # OF PEOPLE WHO HAVE THIS FILE OPEN
 1392 11101 7040          CMA
 1393 11102 7650          SNA CLA         /IS THE PERSON TRYING TO CHANGE THE FILE THE
 1394 11103 2266          ISZ ENR0        /...ONLY ONE WHO HAS IT OPEN?
 1395 11104 5666          JMP I ENR0      /YES, SO SKIP

      /TSS/8 CONFIGURATION FOR UWM                                       Page 33


 1396             
 1397             /CHANGE THE PROTECTION OF A FILE
 1398             
 1399 11105 1125  PRT0,   TAD FIOSTK+1    /PICK UP INTERNAL FILE NUMBER
 1400 11106 7012          RTR
 1401 11107 7012          RTR
 1402 11110 7010          RAR
 1403 11111 0011          AND P0003       /AND OFF PROTECTION BITS
 1404 11112 3336          DCA PRIFNU      /INTERNAL FILE NUMBER
 1405 11113 1336          TAD PRIFNU
 1406 11114 4507          JMS I UC01      /CHECK TO SEE IF USER IS OWNER
 1407 11115 5331          JMP PRT1        /ERROR RETURN, USER IS NOT OWNER
 1408 11116 1336          TAD PRIFNU
 1409 11117 4474          JMS I GD01      /GET THIS DIRECTORY ENTRY INTO CORE
 1410 11120 7450          SNA
 1411 11121 7402          HLT             /WHOOPS - ERROR *****
 1412 11122 1005          TAD P0004
 1413 11123 3337          DCA PRENTP      /POINTER TO PROTECTION BITS OF THIS FILE
 1414 11124 1340          TAD C7637
 1415 11125 0125          AND FIOSTK+1    /PICK UP NEW PROTECTION BITS
 1416 11126 3737          DCA I PRENTP    / AND SET INTO THE DIRECTORY ENTRY
 1417 11127 4504          SAVBUF          /THEN RE-WRITE THE BUFFER
 1418 11130 5513          JMP I FIEXIT
 1419             
 1420 11131 7640  PRT1,   SZA CLA         /ERROR
 1421 11132 7130          CLL CML RAR     /6000 - "PROTECTION VIOLATION"
 1422 11133 7130          CLL CML RAR     /4000 - "NO FILE OPEN"
 1423 11134 3037          DCA FIUSAC
 1424 11135 5513          JMP I FIEXIT
 1425             
 1426 11136 0000  PRIFNU, 0
 1427 11137 0000  PRENTP, 0
 1428 11140 7637  C7637,  7637

      /TSS/8 CONFIGURATION FOR UWM                                       Page 34


 1429             /ROUTINE TO BUILD A RETRIEVAL POINTER FROM THE RELATIVE
 1430             /POSITION IN RETTBL (WHICH IS ALSO THE ENTTBL POINTER).
 1431             
 1432             /CALLING SEQUENCE:
 1433             /       TAD (RELATIVE POSITION)
 1434             /       JMS I BLDP1
 1435             /       RETURN (POINTER IN AC)
 1436             
 1437 11141 0000  BLDP,   0
 1438 11142 0023          AND C3777       /ZAP THE 'EXCLUSIVE USE' BIT
 1439 11143 3116          DCA CFH
 1440 11144 7240          CLA CMA
 1441 11145 1116          TAD CFH         /POINTER = [(PTR - 1) * 8 + RETTBL]
 1442 11146 7104          CLL RAL; RTL
      11147 7006
 1443 11150 1054          TAD RETTBL
 1444 11151 5741          JMP I BLDP      /RETURN
 1445             
 1446             /ROUTINE TO WRITE OUT THE SEGMENT-BUFFER IF NECESSARY.
 1447             
 1448 11152 0000  WRITE,  0
 1449 11153 2047          ISZ BUFWRT      /NEED IT BE SAVED?
 1450 11154 5752          JMP I WRITE     /NO - JUST RETURN
 1451 11155 1026          TAD C6605       /YES - SET THE 'WRITE' IOT
 1452 11156 3134          DCA FLPARB
 1453 11157 4473          JMS I FIO01     /THEN DO THE I/O
 1454 11160 7402          HLT             /ERROR ON WRITE - JUST CRASH *****
 1455 11161 5752          JMP I WRITE     / OTHERWISE RETURN
 1456             
 1457             /ROUTINE TO CHECK THIS USER'S ACCOUNT NUMBER AND
 1458             /SKIP IF HE IS A NORMAL USER; RETURN IS TO THE NEXT
 1459             /INSTRUCTION IF HE IS EITHER THE SYSTEM MANAGER
 1460             /(ACCOUNT NUMBER 0001) OR THE BILLING SYSTEM.
 1461             
 1462 11162 0000  CHKAC0, 0
 1463 11163 7240          CLA CMA
 1464 11164 1041          TAD FIACCT
 1465 11165 7650          SNA CLA         /IS IT THE SYSTEM MANAGER?
 1466 11166 5762          JMP I CHKAC0    /YES - SPECIAL EXIT
 1467             
 1468                     IFNZRO BILLNG <
 1469 11167 1041          TAD FIACCT
 1470 11170 1144          TAD LOGACT
 1471 11171 7640          SZA CLA         /NO - IS IT THE BILLING SYSTEM?
 1472                     >
 1473 11172 2362          ISZ CHKAC0      /NO - NORMAL EXIT
 1474 11173 5762          JMP I CHKAC0

      /TSS/8 CONFIGURATION FOR UWM                                       Page 35


 1475                     PAGE
 1476             /ROUTINE TO MOVE THE RETRIEVAL WINDOW IN FIELD ZERO
 1477 11200 1126  WND0,   TAD FIOSTK+2    /PICK UP INTERNAL FILE NUMBER
 1478 11201 0011          AND P0003       /AND OFF FIELD BITS
 1479 11202 4470          JMS I EBLD0
 1480 11203 3340          DCA WNENTP      /POINTER TO RETRIEVAL INFORMATION POINTER
 1481 11204 1740          TAD I WNENTP
 1482 11205 4461          JMS I BLDP1     /GENERATE ABSOLUTE PTR. INTO RETTBL
 1483 11206 3341          DCA WNRETP      /RETRIEVAL POINTER
 1484 11207 1133          TAD FIOSTK+7
 1485 11210 3337          DCA WNFCBP      /PTR. TO THIS FILE'S FILE CONTROL BLOCK
 1486 11211 1131          TAD FIOSTK+5
 1487 11212 3324          DCA WND5        /LOW ORDER DISC ADDRESS
 1488 11213 3342          DCA WNDCNT      /GET INTO CORE
 1489 11214 7240          STA 
 1490 11215 1156          TAD SEGSIZ
 1491 11216 0125          AND FIOSTK+1    /GET HIGH ORDER FILE ADDRESS
 1492 11217 3276          DCA WNDIRP
 1493 11220 1156          TAD SEGSIZ      /GET RID OF ADDRESS WITHIN SEGMENT
 1494 11221 7041          CIA
 1495 11222 0324          AND WND5
 1496 11223 7104          CLL RAL
 1497 11224 1276          TAD WNDIRP      /WE NOW HAVE ALL THE NECESSARY BITS
 1498 11225 7006          RTL; RTL        / SO SHIFT THEM AROUND
      11226 7006
 1499 11227 3343          DCA WNSEGC      /SAVE AS SEGMENT # TO GET
 1500 11230 6211          DATFLD          /WNSEGC NOW HAS SEGMENT NUMBER TO GET
 1501 11231 1737          TAD I WNFCBP    /PICK UP FIELD 0 WINDOW POINTER
 1502 11232 3300          DCA WNDPTR      /PNTS TO FILE RETRIEVAL WINDOW FOR THIS FILE
 1503 11233 2337          ISZ WNFCBP
 1504 11234 1737          TAD I WNFCBP    /PICK UP NUMBER OF CURRENT SEGMENT IN WINDOW
 1505 11235 3344          DCA WNCURS      /CURRENT SEGMENT IN WINDOW
 1506 11236 1343          TAD WNSEGC      /SEGMENT TO GET
 1507 11237 4345          JMS WND20       /DIVIDE BY 7 (IGNORE REMAINDER)
 1508 11240 4327          JMS WND30       /MULTIPLY BY 7
 1509 11241 3343          DCA WNSEGC      /FIRST SEGMENT IN PROPER WINDOW
 1510 11242 7240          CLA CMA
 1511 11243 1700          TAD I WNDPTR    /GET FIRST WORD OF FILE RETIEVAL WINDOW
 1512 11244 7650          SNA CLA         / = 1?
 1513 11245 5311          JMP WND6        /INVALID WINDOW POINTER
 1514 11246 1344          TAD WNCURS      /CURRENT SEGMENT AT TOP OF CURRENT CORE WINDOW
 1515 11247 7041          CIA

      /TSS/8 CONFIGURATION FOR UWM                                       Page 36


 1516             /NOW SEE IF THE SEGMENT BEING SOUGHT IS ONE WHICH FOLLOWS
 1517             /THOSE WHICH ARE PRESENTLY IN THE CORE WINDOW. IF THE
 1518             /SOUGHT BLOCK DOES FOLLOW THE PRESENT ONE, WE CAN LOOK
 1519             /THROUGH THE RETRIEVAL INFORMATION BLOCKS STARTING AT THE ONE
 1520             /NOW IN CORE. OTHERWISE, WE MUST START AT THE VERY BEGINNING
 1521             /OF THE LIST OF FILE RETRIEVAL INFORMATION BLOCKS
 1522 11250 1343          TAD WNSEGC
 1523 11251 7550          SPA SNA
 1524 11252 5311          JMP WND6        /PREVIOUS BLOCK, SO MUST START AT BEGINNING OF STRING
 1525 11253 4345          JMS WND20       /DIVIDE BY 7
 1526 11254 7041          CIA
 1527 11255 3342          DCA WNDCNT      /MOVE FORWARD THIS MANY WINDOWS
 1528 11256 1300          TAD WNDPTR
 1529 11257 3276  WND10,  DCA WNDIRP
 1530 11260 1676          TAD I WNDIRP    /PICK UP ADDRESS OF NEXT WINDOW
 1531 11261 6221          CFLD            /CHANGE TO CURRENT FIELD
 1532 11262 7450          SNA
 1533 11263 5273          JMP WND13       /END OF STRING
 1534 11264 3267          DCA WND11
 1535 11265 1341          TAD WNRETP      /POINTER TO UFD RETRIEVAL INFORMATION
 1536 11266 4475          JMS I GE01      /GET ENTRY INTO CORE
 1537 11267 0000  WND11,   0
 1538 11270 2342          ISZ WNDCNT      /HAVE WE MOVED AHEAD ENOUGH BLOCKS?
 1539 11271 5257          JMP WND10       /NOT PROPER WINDOW, KEEP LOOKING
 1540 11272 3276          DCA WNDIRP
 1541 11273 6202  WND13,  CIF
 1542 11274 4567          BLT
 1543 11275 6221           CFLD   /SOURCE FIELD
 1544 11276 0000  WNDIRP,  0      /SOURCE
 1545 11277 6211           DATFLD /DESTINATION FIELD
 1546 11300 0000  WNDPTR,  0      /DESTINATION
 1547 11301 7770           -10    /(-) WORD COUNT
 1548 11302 1342          TAD WNDCNT      /CORRECT FOR WINDOWS THAT WEREN'T THERE
 1549 11303 4327          JMS WND30       /MULTIPLY BY 7
 1550 11304 1343          TAD WNSEGC      /SEGMENT NUMBER OF FIRST IN WINDOW
 1551 11305 6211          DATFLD
 1552 11306 3737          DCA I WNFCBP    /FILE CONTROL BLOCK POINTER
 1553 11307 5710          JMP I .+1       /GO SET "JSIOTC" BEFORE EXITTING
 1554 11310 2267          INF6
 1555             
 1556 11311 6221  WND6,   CFLD            /CHANGE TO CURRENT FIELD
 1557 11312 7300          CLA CLL
 1558 11313 1343          TAD WNSEGC      /SEGMENT TO GET INTO IN CORE WINDOW
 1559 11314 4345          JMS WND20       /DIVIDE BY 7
 1560 11315 7040          CMA
 1561 11316 3342          DCA WNDCNT      /WINDOW NUMBER TO GET INTO CORE
 1562 11317 2340          ISZ WNENTP
 1563 11320 1740          TAD I WNENTP    /UFD ENTRY ADDRESS OF OPEN FILE
 1564 11321 3324          DCA WND5
 1565 11322 1341          TAD WNRETP      /RETRIEVAL INFORMATION POINTER
 1566 11323 4475          JMS I GE01      /GET ENTRY INTO CORE
 1567 11324 0000  WND5,    0
 1568 11325 1014          TAD P0007
 1569 11326 5257          JMP WND10

      /TSS/8 CONFIGURATION FOR UWM                                       Page 37


 1570             /ROUTINE TO MULTIPLY A NUMBER BY 7
 1571             
 1572 11327 0000  WND30,  0
 1573 11330 3116          DCA CFH
 1574 11331 1116          TAD CFH
 1575 11332 7104          CLL RAL
 1576 11333 1116          TAD CFH
 1577 11334 7104          CLL RAL
 1578 11335 1116          TAD CFH
 1579 11336 5727          JMP I WND30
 1580             
 1581 11337 0000  WNFCBP, 0
 1582 11340 0000  WNENTP, 0
 1583 11341 0000  WNRETP, 0
 1584 11342 0000  WNDCNT, 0
 1585 11343 0000  WNSEGC, 0
 1586 11344 0000  WNCURS, 0
 1587             
 1588             /ROUTINE TO DIVIDE A NUMBER BY 7.
 1589             /QUOTIENT IS RETURNED IN THE AC; REMAINDER
 1590             /IS LEFT IN 'WNDREM' ON PAGE ZERO.
 1591             
 1592 11345 0000  WND20,  0
 1593 11346 3045          DCA WNDREM      /SAVE THE NUMBER
 1594 11347 3116          DCA CFH         /CLEAR THE QUOTIENT
 1595 11350 1045          TAD WNDREM
 1596 11351 1032          TAD C7771       /SUBTRACT 7
 1597 11352 7510          SPA             /DID WE GO TOO FAR?
 1598 11353 5356          JMP .+3         /YES - ALL DONE
 1599 11354 2116          ISZ CFH         /NO - INCREMENT THE QUOTIENT
 1600 11355 5351          JMP .-4         / & TRY ANOTHER SUBTRACTION
 1601 11356 1014          TAD P0007
 1602 11357 3045          DCA WNDREM      /SAVE THE REMAINDER
 1603 11360 1116          TAD CFH         /THEN RETURN WITH THE QUOTIENT
 1604 11361 5745          JMP I WND20
 1605             
 1606             /ROUTINE TO CHECK THE SOURCE OF THE FIP CALL
 1607             /AND SKIP IF WE WERE CALLED BY 'SI'.
 1608 11362 0000  CHKSR0, 0
 1609 11363 6201          CDF
 1610 11364 1434          TAD I FANFLD    /GET THE 'CORTBL' ENTRY
 1611 11365 6221          CFLD
 1612 11366 0156          AND FIPFIP
 1613 11367 7650          SNA CLA         /'FIP' BIT SET?
 1614 11370 2362          ISZ CHKSR0      /NO - MUST BE FROM 'SI'
 1615 11371 5762          JMP I CHKSR0
 1616             
 1617             /ROUTINE TO SET THE 'BUFFER CHANGED' SWITCH SO THAT THE
 1618             /SEGMENT BUFFER WILL BE WRITTEN BACK OUT BEFORE THE NEXT
 1619             /BLOCK IS READ OR WHEN FIP EXITS.
 1620 11372 0000  SAVBF0, 0
 1621 11373 7240          CLA CMA
 1622 11374 3047          DCA BUFWRT      /'BUFFER CHANGED' = -1
 1623 11375 5772          JMP I SAVBF0

      /TSS/8 CONFIGURATION FOR UWM                                       Page 38


 1624                     PAGE
 1625             /ROUTINE TO CREATE A NEW FILE
 1626             
 1627 11400 1125  CRF0,   TAD FIOSTK+1
 1628 11401 7650          SNA CLA         /IS THE NAME REASONABLE?
 1629 11402 5340          JMP CRFER2      /NO - NO POINT CONTINUING
 1630 11403 1041          TAD FIACCT      /GET USER'S ACCT #
 1631 11404 4511          JMS I UTS01     /SEARCH THE UFD TABLE
 1632 11405 7402          HLT             /MUST BE AN ENTRY IF WE'RE LOGGED-IN *****
 1633 11406 4461          JMS I BLDP1     /BUILD A POINTER INTO RETTBL
 1634 11407 3124          DCA FIOSTK      / FOR THE DIRECTORY-SEARCH
 1635 11410 7240  CRF1,   CLA CMA
 1636 11411 1041          TAD FIACCT
 1637 11412 7650          SNA CLA         /WILL THIS FILE BE A DIRECTORY?
 1638 11413 7240          CLA CMA         /YES - THEN NEW ACCOUNT NUMBER MUST BE UNIQUE
 1639 11414 4466          JMS I DS01      /SEARCH THE DIRECTORY FOR THIS NAME
 1640 11415 0124           FIOSTK
 1641 11416 5251          JMP CRF2        /COULD NOT FIND THIS NAME, CONTINUE
 1642 11417 3362          DCA CRBUFP      /FILE ALREADY EXISTS - SAVE POINTER
 1643 11420 7240          CLA CMA
 1644 11421 1041          TAD FIACCT
 1645 11422 7650          SNA CLA         /ARE WE THE MANAGER (I.E. IS THIS A DIRECTORY)?
 1646 11423 5341          JMP CRFER3      /YES - WE WON'T AUTOMATICALLY DELETE
 1647 11424 1404          TAD I ZDS1      /GET ITS RELATIVE UFD-ENTRY LOCATION
 1648 11425 3230          DCA CRFSEG      /UFD ADDRESS OF DIRECTORY ENTRY
 1649 11426 1124          TAD FIOSTK
 1650 11427 4471          JMS I ENS01     /SEARCH ENT TABLE FOR ACCESSES TO THIS FILE
 1651 11430 0000  CRFSEG,  0              /UFD ADDR. OF DIRECTORY ENTRY
 1652 11431 7640          SZA CLA         /RETURNS WITH # OF ACCESSES TO THIS FILE
 1653 11432 5345          JMP CRFER5      /ERROR - FILE IS IN USE
 1654             
 1655             /COMES HERE IF A FILE BY THIS NAME ALREADY EXISTS, BUT NOONE
 1656             /HAS OPENED IT
 1657 11433 1230          TAD CRFSEG
 1658 11434 3771          DCA I CRGD11    /SET DIRECTORY-ENTRY LOCATION FOR 'RED1'
 1659 11435 1124          TAD FIOSTK
 1660 11436 3044          DCA GDRETP      / ALONG WITH THE 'RETTBL' ENTRY ADDRESS
 1661 11437 1362          TAD CRBUFP
 1662 11440 1005          TAD P0004       /GET THE PROTECTION-WORD LOCATION
 1663 11441 3366          DCA CRFENT
 1664 11442 1766          TAD I CRFENT
 1665 11443 0007          AND C0020
 1666 11444 7640          SZA CLA         /IS THE FILE WRITE-PROTECTED AGAINST OWNER?
 1667 11445 5341          JMP CRFER3      /YES - SAY "PROTECTION VIOLATION"
 1668 11446 1362          TAD CRBUFP
 1669 11447 4773          JMS I RED11     /NO - DELETE THE FILE
 1670 11450 5210          JMP CRF1        / AND LOOK AGAIN FOR THE CHAIN END
 1671             
 1672             /NOW ALL SET TO CREATE THE FILE. TO DO THIS, WE NEED TWO BLOCKS OF
 1673             /THE UFD--ONE FOR A NAME BLOCK AND THE SECOND FOR A FILE RETRIEVAL INFORMATION
 1674             /BLOCK. THESE BLOCKS ARE OBTAINED BY TWO CALLLS TO DE0. AFTER THE FIRST,
 1675             /A DUMMY 7777 IS PUT IN THE FOUND BLOCK TO PREVENT THE SECOND CALL
 1676             /TO DE0 FROM FINDING THE SAME BLOCK. IF BOTH BLOCKS CANNOT BE OBTAINED,
 1677             /THE CREATE CANNOT BE EXECUTED.
 1678 11451 7450  CRF2,   SNA             /WERE WE PASSED THE LAST LINK-ADDRESS?
 1679 11452 1011          TAD P0003       /NO - MUST BE EMPTY DIRECTORY
 1680 11453 3367          DCA CRFLNK      /ADDR. OF LINK WORD OF LAST ENTRY IN UFD CHAIN

      /TSS/8 CONFIGURATION FOR UWM                                       Page 39


 1681 11454 1124          TAD FIOSTK      /POINTER TO RETRIEVAL INFORMATION
 1682 11455 4465          JMS I DE01      /FIND AN EMPTY DIRECTORY ENTRY
 1683 11456 5344          JMP CRFER4+1    /ERROR - "USER DIRECTORY FULL"
 1684 11457 3366          DCA CRFENT
 1685 11460 1366          TAD CRFENT
 1686 11461 4356          JMS CRFGET      /GET THE WORD INTO CORE
 1687 11462 7240          CLA CMA
 1688 11463 3762          DCA I CRBUFP    /SIMULATE A USED ENTRY
 1689 11464 1124          TAD FIOSTK
 1690 11465 4465          JMS I DE01      /NOW FIND AN ENTRY FOR THE RETRIEVAL-BLOCK
 1691 11466 5343          JMP CRFER4      /NONE AVAILABLE - "DIRECTORY FULL"
 1692 11467 3370          DCA CRFRET
 1693 11470 1370          TAD CRFRET
 1694 11471 4356          JMS CRFGET      /MAKE SURE THE ENTRY IS IN CORE
 1695 11472 4502          JMS I SATL1     /FIND A FREE SEGMENT IN THE SAT
 1696 11473 7450          SNA
 1697 11474 5336          JMP CRFER1      /NONE AVAILABLE - "DISC FULL"
 1698             
 1699             /AT THIS POINT, WE HAVE A DISC SEGMENT AND TWO BLOCKS FROM THE
 1700             /UFD. THIS IS ALL THAT IS NEEDED, SO GO AHEAD AND EXECUTE THE CREATE
 1701 11475 2362          ISZ CRBUFP
 1702 11476 3762          DCA I CRBUFP    /SAVE THE SEGMENT NUMBER IN THE RETRIEVAL BLOCK
 1703 11477 1762          TAD I CRBUFP
 1704 11500 3230          DCA CRFSEG      /SAVE THE INDEX FOR CLEARING LATER
 1705 11501 1366          TAD CRFENT
 1706 11502 4356          JMS CRFGET      /GET BACK THE DIRECTORY NAME-ENTRY
 1707 11503 7240          CLA CMA
 1708 11504 1362          TAD CRBUFP
 1709 11505 3010          DCA INDEX
 1710 11506 1125          TAD FIOSTK+1    /TRANSFER FILE NAME INTO DIRECTORY ENTRY
 1711 11507 3410          DCA I INDEX
 1712 11510 1126          TAD FIOSTK+2
 1713 11511 3410          DCA I INDEX
 1714 11512 1127          TAD FIOSTK+3
 1715 11513 3410          DCA I INDEX
 1716 11514 3410          DCA I INDEX     /LEAVE A WORD FOR THE NEXT FORWARD LINK
 1717 11515 1372          TAD CRPROT
 1718 11516 3410          DCA I INDEX     /SET THE INITIAL PROTECTION
 1719 11517 7301          CLA CLL IAC
 1720 11520 3410          DCA I INDEX     /INITIAL FILE-SIZE IS 1 SEGMENT
 1721 11521 6201          CDF
 1722 11522 1566          TAD I DATE      /PICK UP TODAY'S DATE
 1723 11523 6221          CFLD
 1724 11524 3410          DCA I INDEX     / & SAVE AS DATE OF CREATION
 1725 11525 1370          TAD CRFRET
 1726 11526 3410          DCA I INDEX     /SET THE RETRIEVAL-BLOCK LOCATION
 1727 11527 1367          TAD CRFLNK
 1728 11530 4356          JMS CRFGET      /GET THE DIRECTORY FORWARD-LINK INTO CORE
 1729 11531 1366          TAD CRFENT
 1730 11532 3762          DCA I CRBUFP    / & SET THIS ENTRY'S ADDRESS
 1731 11533 1230          TAD CRFSEG
 1732 11534 4505          JMS I SCL01     /NOW ZERO THE INITIAL SEGMENT
 1733 11535 5513          JMP I FIEXIT    / & EXIT
 1734             
 1735             /CODE TO RETURN THE VARIOUS 'CREATE' ERROR STATUSES.
 1736 11536 4351  CRFER1, JMS CRFCLR      /CLEAR THE 'DUMMY ENTRY' WORD
 1737 11537 7301          CLA CLL IAC     /7400 - "DISC IS FULL"

      /TSS/8 CONFIGURATION FOR UWM                                       Page 40


 1738 11540 7132  CRFER2, CLL CML RTR     /6400 - "INVALID FILE NAME"
 1739 11541 7130  CRFER3, CLL CML RAR     /6000 - "PROTECTION VIOLATION"
 1740 11542 5346          JMP .+4
 1741 11543 4351  CRFER4, JMS CRFCLR      /5000 - "USER DIRECTORY FULL"
 1742 11544 1021          TAD P1000
 1743 11545 1021  CRFER5, TAD P1000       /4400 - "ANOTHER USER HAS FILE OPEN"
 1744 11546 7130          CLL CML RAR
 1745 11547 3037          DCA FIUSAC      /RETURN THE CODE IN HIS AC
 1746 11550 5513          JMP I FIEXIT
 1747             
 1748             /ROUTINE TO CLEAR THE 'DUMMY ENTRY' WORD WE PLACE IN THE
 1749             /DIRECTORY ENTRY. WE HAVE TO DO THIS WHEN AN ERROR OCCURS.
 1750 11551 0000  CRFCLR, 0
 1751 11552 1366          TAD CRFENT
 1752 11553 4356          JMS CRFGET      /GET THE ENTRY INTO CORE
 1753 11554 3762          DCA I CRBUFP    / & CLEAR THE FIRST WORD
 1754 11555 5751          JMP I CRFCLR    /THEN JUST RETURN
 1755             
 1756             /ROUTINE TO READ IN A SEGMENT AND SET 'CRBUFP'. IT ALSO
 1757             /SETS THE 'BUFFER CHANGED' SWITCH.
 1758 11556 0000  CRFGET, 0
 1759 11557 3362          DCA .+3         /SET THE ENTRY-ADDRESS
 1760 11560 1124          TAD FIOSTK
 1761 11561 4475          JMS I GE01      /GET THE DIRECTORY WORD
 1762 11562 0000  CRBUFP,  0
 1763 11563 3362          DCA CRBUFP      /SAVE THE BUFFER-ADDRESS
 1764 11564 4504          SAVBUF          / AND SET THE 'SAVE BUFFER' SWITCH
 1765 11565 5756          JMP I CRFGET    /THEN RETURN
 1766             
 1767 11566 0000  CRFENT, 0
 1768 11567 0000  CRFLNK, 0
 1769 11570 0000  CRFRET, 0
 1770 11571 0355  CRGD11, GD1
 1771 11572 0012  CRPROT, 12      /INITIAL FILE PROTECTION-WORD
 1772 11573 2036  RED11,  RED1

      /TSS/8 CONFIGURATION FOR UWM                                       Page 41


 1773                     PAGE
 1774             /ROUTINE TO EXTEND A FILE
 1775 11600 4337  EXT0,   JMS EXT1        /MAKE SURE IT'S OKAY TO EXTEND THIS FILE
 1776 11601 1014          TAD P0007       /...EXT1 RETURNS WITH PTR. TO NAME BLOCK FOR THIS FILE
 1777 11602 3320          DCA EXBUFP      /SET THE RETRIEVAL-CHAIN POINTER
 1778             
 1779             /NOW TRACE THRU TO LAST RETRIEVAL INFORMATION BLOCK FOR THIS FILE
 1780 11603 1720  EXT4,   TAD I EXBUFP
 1781 11604 7450          SNA             /END OF CHAIN?
 1782 11605 5212          JMP EXT3        /YES
 1783 11606 3336          DCA EXWNDP      /WINDOW POINTER
 1784 11607 1336          TAD EXWNDP
 1785 11610 4314          JMS EXGE0       /GET WINDOW INTO CORE
 1786 11611 5203          JMP EXT4        /KEEP LOOKING FOR END
 1787             
 1788 11612 1126  EXT3,   TAD FIOSTK+2    /NUMBER OF SEGMENTS TO ADD
 1789 11613 7040          CMA
 1790 11614 3335          DCA EXSEGC
 1791 11615 3332          DCA EXLAST      /CLEAR THE 'NEW LINK' SWITCH
 1792 11616 2320  EXT5,   ISZ EXBUFP
 1793 11617 1720          TAD I EXBUFP    /PICK UP ENTRY IN WINDOW
 1794 11620 7650          SNA CLA         /IS IT THE FIRST FREE ENTRY?
 1795 11621 5226          JMP EXT6        /YES - START EXTENDING
 1796 11622 1320          TAD EXBUFP
 1797 11623 0014          AND P0007
 1798 11624 7640          SZA CLA         /NO - AT END OF BLOCK?
 1799 11625 5216          JMP EXT5        /NO - KEEP LOOKING
 1800             /
 1801             /NOW AT END OF LIST OF SEGMENTS MAKING UP THIS FILE
 1802 11626 2335  EXT6,   ISZ EXSEGC      /START EXTENDING
 1803 11627 5260          JMP EXT7        /GET ANOTHER SEGMENT
 1804 11630 1335  EXT20,  TAD EXSEGC
 1805 11631 7041          CIA
 1806 11632 3037          DCA FIUSAC      /NUMBER OF SEGMENTS WE FAILED TO FIND
 1807 11633 1332          TAD EXLAST      /GET THE LAST WINDOW ADDRESS
 1808 11634 7450          SNA             /IS IT LINKED TO NOTHINGNESS?
 1809 11635 5241          JMP EXT21       /NO - NO PROBLEM
 1810 11636 4314          JMS EXGE0       /YES - GET THE PREVIOUS BLOCK
 1811 11637 3720          DCA I EXBUFP    / AND CLEAR ITS FORWARD LINK
 1812 11640 4504          SAVBUF          /REMEMBER TO REWRITE THE BUFFER
 1813 11641 1125  EXT21,  TAD FIOSTK+1    /NOW UPDATE THE DIRECTORY ENTRY
 1814 11642 4474          JMS I GD01      /GET DIRECTORY ENTRY INTO CORE
 1815 11643 1012          TAD C0005
 1816             /HAVE A NEW BLOCK FOR RETRIEVAL
 1817 11644 3320          DCA EXBUFP      /POINTER TO SEGMENT COUNT
 1818 11645 1126          TAD FIOSTK+2    /NUMBER OF WORDS TO BE ADDED
 1819 11646 1720          TAD I EXBUFP    /NUMBER ALREADY IN FILE
 1820 11647 1335          TAD EXSEGC      /MINUS NUMBER WE FAILED TO GET
 1821 11650 3720          DCA I EXBUFP    /UPDATE ENTRY
 1822 11651 4504          SAVBUF          / AND SET 'BUFFER CHANGED' SWITCH
 1823 11652 6211  EXT8,   DATFLD          /SET DATA FIELD TO FIELD 1
 1824 11653 1731          TAD I EXFCBP
 1825 11654 3334          DCA EXPROP      /POINTER TO RETRIEVAL WINDOW
 1826 11655 7001          IAC
 1827 11656 3734          DCA I EXPROP    /INVALIDATE THE WINDOW
 1828 11657 5513          JMP I FIEXIT
 1829             

      /TSS/8 CONFIGURATION FOR UWM                                       Page 42


 1830 11660 1320  EXT7,   TAD EXBUFP
 1831 11661 0014          AND P0007
 1832 11662 7640          SZA CLA         /DO WE NEED A NEW BLOCK?
 1833 11663 5304          JMP EXT12       /NO
 1834 11664 1044          TAD GDRETP      /RETRIEVAL POINTER
 1835 11665 4465          JMS I DE01      /FIND AN EMPTY ENTRY
 1836 11666 5230          JMP EXT20       /PARTIALLY SATISFIED
 1837 11667 3333          DCA EXNFRE      /FREE SEGMENT ADDRESS
 1838 11670 1336          TAD EXWNDP      /CURRENT WINDOW POINTER
 1839 11671 4314          JMS EXGE0       /GET IT INTO CORE
 1840 11672 1333          TAD EXNFRE      /NEXT FREE WINDOW
 1841 11673 3720          DCA I EXBUFP    /LINK IT ONTO CHAIN
 1842 11674 4504          SAVBUF          / AND SET 'CHANGED' SWITCH
 1843 11675 1336          TAD EXWNDP      /SAVE PREVIOUS BLOCK LOCATION
 1844 11676 3332          DCA EXLAST      / IN CASE WE RUN OUT OF DISC NOW
 1845 11677 1333          TAD EXNFRE
 1846 11700 3336          DCA EXWNDP      /UPDATE CURRENT WINDOW POINTER
 1847 11701 1336          TAD EXWNDP
 1848 11702 4314          JMS EXGE0       /GET NEW WINDOW INTO CORE
 1849 11703 2320          ISZ EXBUFP      /POINTER TO FIRST ENTRY OF WINDOW
 1850 11704 4502  EXT12,  JMS I SATL1     /GET A FREE SEGMENT FROM SAT
 1851 11705 7450          SNA
 1852 11706 5230          JMP EXT20       /PARTIALLY SATISFIED
 1853 11707 3720          DCA I EXBUFP    /SET THE SEGMENT # IN THE WINDOW
 1854 11710 2320          ISZ EXBUFP
 1855 11711 4504          SAVBUF          /SET 'BUFFER CHANGED' SWITCH
 1856 11712 3332          DCA EXLAST      / AND CLEAR 'NEW LINK' SWITCH
 1857 11713 5226          JMP EXT6        /FILL NEXT WORD
 1858             
 1859             
 1860 11714 0000  EXGE0,  0               /GET WORD OF THIS UFD INTO CORE
 1861 11715 3320          DCA .+3         /STORE THE WORD NUMBER
 1862 11716 1044          TAD GDRETP
 1863 11717 4475          JMS I GE01      /FETCH THE WORD
 1864 11720 0000  EXBUFP,  0
 1865 11721 3320          DCA EXBUFP      /SET THE BUFFER POINTER
 1866 11722 5714          JMP I EXGE0
 1867             
 1868 11723 1021  EXT30,  TAD P1000       /4400 - "ANOTHER USER HAS FILE OPEN"
 1869 11724 7410          SKP
 1870 11725 7130  EXT10,  CLL CML RAR     /6000 - "PROTECTION VIOLATION"
 1871 11726 7130          CLL CML RAR     /4000 - "NO FILE OPEN"
 1872 11727 3037          DCA FIUSAC
 1873 11730 5513          JMP I FIEXIT
 1874             
 1875 11731 0000  EXFCBP, 0
 1876 11732 0000  EXLAST, 0
 1877 11733 0000  EXNFRE, 0
 1878 11734 0000  EXPROP, 0
 1879 11735 0000  EXSEGC, 0
 1880 11736 0000  EXWNDP, 0

      /TSS/8 CONFIGURATION FOR UWM                                       Page 43


 1881             /ROUTINE TO SET UP TO ALTER A FILE (BY EITHER EXTENDING IT OR
 1882             /REDUCING IT.)  CHECK PROTECTION CODE TO SEE IF THIS IS ALLOWED. MAKE SURE
 1883             /NOONE ELSE HAS THIS FILE OPEN. JMP TO ERROR EXIT ON EITHER OF THESE CON-
 1884             /DITIONS. IF ALL IS OKAY, RETURN WITH PTR. TO UFD NAME BLOCK ENTRY
 1885 11737 0000  EXT1,   0
 1886 11740 4477          JMS I IFN01
 1887 11741 4403          JMS I LNK01     /GET PTR. TO APPROPRIATE FILE CONTROL BLOCK
 1888 11742 7450          SNA
 1889 11743 5326          JMP EXT10+1     /ERROR, FILE NOT OPEN
 1890 11744 3331          DCA EXFCBP      /FILE CONTROL BLOCK POINTER
 1891 11745 1006          TAD FILPRP      /GLOBAL TO "FILPRO"
 1892 11746 1331          TAD EXFCBP
 1893 11747 3334          DCA EXPROP      /POINTER TO PROTECTION BIT IN FIELD 0
 1894 11750 6211          DATFLD          /CDF FIELD 0
 1895 11751 1734          TAD I EXPROP    /PICK UP PROTECTION BIT
 1896 11752 6221          CFLD            /CHANGE TO CURRENT FIELD
 1897 11753 0005          AND P0004       /STRAIN OFF ANY EXTRANEOUS BITS
 1898 11754 7640          SZA CLA
 1899 11755 5325          JMP EXT10       /WRITE PROTECTED
 1900 11756 1125          TAD FIOSTK+1    /INTERNAL FILE NUMBER
 1901 11757 4474          JMS I GD01      /GET DIRECTORY ENTRY INTO CORE
 1902 11760 3320          DCA EXBUFP      /POINTS TO WHERE UFD NAME BLOCK IS IN CORE
 1903 11761 4765          JMS I ENR01     /IS THIS THE ONLY USER WHO HAS THIS FILE OPEN?
 1904 11762 5323          JMP EXT30       /NO, SO ABORT AND RETURN ERROR CODE
 1905 11763 1320          TAD EXBUFP
 1906 11764 5737          JMP I EXT1
 1907             
 1908 11765 1066  ENR01,  ENR0

      /TSS/8 CONFIGURATION FOR UWM                                       Page 44


 1909                     PAGE
 1910             /ROUTINE TO REDUCE A FILE
 1911             
 1912 12000 4721  RED0,   JMS I EXT11     /MAKE SURE IT'S OKAY TO REDUCE THIS FILE
 1913 12001 3323          DCA REBUFP      /...IF OKAY, RETURNS WITH PTR. TO FILE NAME BLOCK
 1914 12002 1323          TAD REBUFP
 1915 12003 1012          TAD C0005
 1916 12004 3316          DCA RELINK      /NOW POINTS TO NUMBER OF SEGMENTS PRESENTLY IN FILE
 1917 12005 1126          TAD FIOSTK+2    /SEGMENTS TO BE REMOVED
 1918 12006 7510          SPA             /IS IT NEGATIVE?
 1919 12007 7350          CLA CLL CMA RAR /REPLACE THE NEGATIVE # BY 3777.
 1920 12010 7041          CIA
 1921 12011 1716          TAD I RELINK
 1922 12012 7540          SMA SZA         /DELETE THE FILE?
 1923 12013 5222          JMP RED6        /NO, REDUCE IT
 1924 12014 7300          CLA CLL         /YES, WIPE IT OUT AND CLOSE
 1925 12015 1323          TAD REBUFP
 1926 12016 4236          JMS RED1        /WIPE OUT THE FILE NAME BLOCK FROM THE UFD
 1927 12017 1125          TAD FIOSTK+1    /INTERNAL FILE NUMBER
 1928 12020 4464          JMS I CL01      /CLOSE THIS FILE SINCE IT NO LONGER EXISTS
 1929 12021 5513          JMP I FIEXIT
 1930 12022 3716  RED6,   DCA I RELINK    /UPDATE SEGMENT COUNT
 1931 12023 4504          SAVBUF          / & INDICATE BUFFER CHANGED
 1932 12024 1716          TAD I RELINK
 1933 12025 3116          DCA CFH
 1934 12026 2316          ISZ RELINK
 1935 12027 2316          ISZ RELINK
 1936 12030 1716          TAD I RELINK
 1937 12031 3316          DCA RELINK      /POINTER TO FIRST WINDOW ON CHAIN
 1938 12032 1116          TAD CFH
 1939 12033 4310          JMS RED40       /WIPE OUT REST OF FILE
 1940 12034 5635          JMP I .+1       /THEN GO INVALIDATE THE RETRIEVAL WINDOW
 1941 12035 1652          EXT8
 1942             
 1943             /ROUTINE TO DELETE A FILE
 1944 12036 0000  RED1,   0
 1945 12037 3323          DCA REBUFP      /PTR. TO THE UFD ENTRY FOR THE FILE
 1946 12040 1323          TAD REBUFP
 1947 12041 1011          TAD P0003
 1948 12042 3316          DCA RELINK      /LINK TO NEXT FILE NAME IN THIS UFD
 1949 12043 1716          TAD I RELINK
 1950 12044 3305          DCA RED3
 1951 12045 1707          TAD I REDGD1    /UFD ADDR. OF THIS DIRECTORY ENTRY
 1952 12046 3306          DCA RED4
 1953 12047 1323          TAD REBUFP
 1954 12050 1014          TAD P0007
 1955 12051 3316          DCA RELINK      /NOW POINTS TO A RETRIEVAL BLOCK FOR THIS FILE
 1956 12052 1716          TAD I RELINK
 1957 12053 3316          DCA RELINK
 1958 12054 3723  RED2,   DCA I REBUFP    /CLEAR OUT FIRST WORD OF ENTRY
 1959 12055 2323          ISZ REBUFP
 1960 12056 1323          TAD REBUFP
 1961 12057 0014          AND P0007
 1962 12060 7640          SZA CLA         /END OF CURRENT WINDOW?
 1963 12061 5254          JMP RED2        /NO, KEEP CLEARING
 1964 12062 4504          SAVBUF          /YES - SET 'BUFFER CHANGED'
 1965 12063 3266  RED5,   DCA .+3         /NOW SET THE ENTRY ADDRESS

      /TSS/8 CONFIGURATION FOR UWM                                       Page 45


 1966 12064 1044          TAD GDRETP
 1967 12065 4475          JMS I GE01      / AND GET A DIRECTORY ENTRY IN CORE
 1968 12066 0000  REDPTR, 0
 1969 12067 1011          TAD P0003       /GET TO THE LINK POINTER
 1970 12070 3266          DCA REDPTR
 1971 12071 1666          TAD I REDPTR    /GET THE LINK TO THE NEXT ENTRY
 1972 12072 7041          CIA
 1973 12073 1306          TAD RED4
 1974 12074 7650          SNA CLA         /IS IT THE ENTRY WE'RE DELETING?
 1975 12075 5300          JMP .+3         /YES
 1976 12076 1666          TAD I REDPTR    /NO - GET ITS ADDRESS
 1977 12077 5263          JMP RED5        / AND KEEP SEARCHING
 1978 12100 1305          TAD RED3        /SET THE NEW LINK TO NEXT ENTRY
 1979 12101 3666          DCA I REDPTR    / SO IT LINKS AROUND THE DELETED FILE
 1980 12102 4504          SAVBUF          /SET 'BUFFER CHANGED'
 1981 12103 4310          JMS RED40       / AND GO DELETE THE FILE ITSELF
 1982 12104 5636          JMP I RED1
 1983             
 1984 12105 0000  RED3,   0       /UFD ADDRESS OF NEXT ENTRY IN DIRECTORY CHAIN
 1985 12106 0000  RED4,   0       /UFD ADDRESS OF THIS DIRECTORY ENTRY
 1986 12107 0355  REDGD1, GD1
 1987             
 1988             /ROUTINE TO REDUCE A FILE - ENTER WITH THE NUMBER OF
 1989             /SEGMENTS WHICH ARE TO REMAIN.
 1990 12110 0000  RED40,  0
 1991 12111 3116          DCA CFH
 1992 12112 1044          TAD GDRETP      /RTABLE
 1993 12113 3317          DCA RERETP
 1994 12114 1116          TAD CFH         /# OF SEGMENTS TO REMAIN
 1995 12115 4722          JMS I RED302    /ROUTINE TO DO ACTUAL REDUCTION
 1996 12116 0000  RELINK, 0               /RETRIEVAL CHAIN PTR
 1997 12117 0000  RERETP, 0               /UFD RETRIEVAL PTR.
 1998 12120 5710          JMP I RED40
 1999             
 2000 12121 1737  EXT11,  EXT1
 2001 12122 2400  RED302, RED30
 2002 12123 0000  REBUFP, 0

      /TSS/8 CONFIGURATION FOR UWM                                       Page 46


 2003             /SEARCH ENTTBL FOR OPENINGS TO FILE
 2004             /CALLING SEQUENCE:
 2005             /       TAD (RETRIEVAL POINTER)
 2006             /       JMS I ENS01
 2007             /       UFD ADDRESS OF DIRECTORY ENTRY
 2008             /       RETURN (COUNT OF ACCESSES IN AC)
 2009             
 2010 12124 0000  ENS0,   0
 2011 12125 4365          JMS ENS3
 2012 12126 7040          CMA
 2013 12127 3363          DCA ENRETP      / (-) RELATIVE POINTER
 2014 12130 3364          DCA ENACNT      /CLEAR ACCESS COUNTER
 2015 12131 1055          TAD ENTTBL
 2016 12132 3362          DCA ENTPTR
 2017 12133 1762  ENS2,   TAD I ENTPTR    /GET THE UFD POINTER FOR THIS FILE
 2018 12134 0023          AND C3777       / ZAP THE 'EXCLUSIVE USE' BIT
 2019 12135 1363          TAD ENRETP      / AND SUBTRACT THE ONE WE WANT
 2020 12136 2362          ISZ ENTPTR
 2021 12137 7640          SZA CLA         /FILE IN SAME UFD?
 2022 12140 5351          JMP ENS1        /NO - KEEP LOOKING
 2023 12141 1762          TAD I ENTPTR
 2024 12142 7041          CIA
 2025 12143 1724          TAD I ENS0
 2026 12144 7640          SZA CLA         /YES - SAME FILE LOCATION?
 2027 12145 5351          JMP ENS1        /NO
 2028 12146 2364          ISZ ENACNT      /YES - INCREMENT ACCESS COUNT
 2029 12147 1362          TAD ENTPTR      / AND SAVE 'FIND' LOCATION
 2030 12150 3365          DCA ENSFND
 2031 12151 2362  ENS1,   ISZ ENTPTR
 2032 12152 1362          TAD ENTPTR
 2033 12153 7041          CIA
 2034 12154 1053          TAD ENTEND      /END OF ENT TABLE
 2035 12155 7640          SZA CLA
 2036 12156 5333          JMP ENS2        /KEEP LOOKING
 2037 12157 1364          TAD ENACNT      /PICK UP ACCUMULATED ACCESS COUNT
 2038 12160 2324          ISZ ENS0
 2039 12161 5724          JMP I ENS0
 2040             
 2041 12162 0000  ENTPTR, 0
 2042 12163 0000  ENRETP, 0
 2043 12164 0000  ENACNT, 0
 2044             
 2045             /CONVERT AN ABSOLUTE PTR INTO RETTBL TO A RELATIVE ENTRY NUMBER
 2046             ENSFND,         /LOCATION OF LAST 'FIND' IN ENTTBL
 2047 12165 0000  ENS3,   0
 2048 12166 7041          CIA
 2049 12167 1054          TAD RETTBL      /REL. PTR. TO ADDRESS WITHIN RETTBL
 2050 12170 7041          CIA
 2051 12171 0031          AND P7770
 2052 12172 7112          CLL RTR; RAR    / DIVIDED BY 8
      12173 7010
 2053 12174 5765          JMP I ENS3

      /TSS/8 CONFIGURATION FOR UWM                                       Page 47


 2054                     PAGE
 2055             /ROUTINE TO PROVIDE FILE INFORMATION
 2056             
 2057 12200 4477  INF0,   JMS I IFN01     /GET INTERNAL FILE NUMBER IN FIOSTK+1
 2058 12201 4470          JMS I EBLD0
 2059 12202 3116          DCA CFH         /RELATIVE POINTER TO UFD RETRIEVAL INFORMATION
 2060 12203 3124          DCA FIOSTK
 2061 12204 3126          DCA FIOSTK+2    /CLEAR OWNER JUST IN CASE
 2062 12205 1516          TAD I CFH       /GET PTR. TO RETTBL OUT OF ENTTBL
 2063 12206 7450          SNA             /DOES IT EXIST?
 2064 12207 5253          JMP INF5        /NO, SO FILE IS NOT OPEN
 2065 12210 7041          CIA
 2066 12211 7040          CMA
 2067 12212 7104          CLL RAL         / * 2 (AND ZAP 'EXCLUSIVE USE' BIT)
 2068 12213 1053          TAD UFDTBL
 2069 12214 3313          DCA INUFDP      /POINTER TO USER PROJ,PROG NUMBER
 2070 12215 7010          RAR             /GET BACK THE 'EXCLUSIVE USE' BIT
 2071 12216 1125          TAD FIOSTK+1    / AND SAVE IT WITH THE FILE #
 2072 12217 3264          DCA INF4
 2073 12220 1713          TAD I INUFDP
 2074 12221 3126          DCA FIOSTK+2    /SET THE OWNER'S ACCOUNT (ALSO FOR 'GD0')
 2075 12222 1125          TAD FIOSTK+1    /NOW GET THE INTERNAL FILE #
 2076 12223 4474          JMS I GD01      / AND GET THE FILE'S DIRECTORY ENTRY
 2077 12224 7041          CIA
 2078 12225 7040          CMA
 2079 12226 3010          DCA INDEX
 2080 12227 1264          TAD INF4        /SEND BACK THE 'EXCLUSIVE USE' BIT
 2081 12230 3125          DCA FIOSTK+1    / WITH THE FILE #
 2082 12231 1410          TAD I INDEX     /NOW THE
 2083 12232 3127          DCA FIOSTK+3
 2084 12233 1410          TAD I INDEX     /       FILE
 2085 12234 3130          DCA FIOSTK+4
 2086 12235 1410          TAD I INDEX     /               NAME
 2087 12236 3131          DCA FIOSTK+5
 2088 12237 2010          ISZ INDEX
 2089 12240 1410          TAD I INDEX
 2090 12241 3132          DCA FIOSTK+6    /RETURN THE PROTECTION-WORD
 2091 12242 1410          TAD I INDEX
 2092 12243 3133          DCA FIOSTK+7    / AND THE SIZE
 2093 12244 7240          CLA CMA
 2094 12245 1126          TAD FIOSTK+2
 2095 12246 7640          SZA CLA         /IS THIS FILE A DIRECTORY?
 2096 12247 5253          JMP INF5        /NO
 2097 12250 3130          DCA FIOSTK+4    /YES - CLEAR THE PASSWORD
 2098 12251 1410          TAD I INDEX     / AND RETURN THE DATE-WORD (CPU TIME)
 2099 12252 3131          DCA FIOSTK+5    / (THE SIZE-WORD IS THE DEVICE-TIME)
 2100 12253 6211  INF5,   DATFLD
 2101 12254 1443          TAD I FIOPTR    /PICK UP JOBLNK WORD FROM JOB STATUS BLOCK
 2102 12255 3264          DCA INF4        /DESTINATION IN FIELD 0
 2103 12256 6221          CFLD            /CHANGE TO PRESENT FIELD
 2104 12257 6202          CIF
 2105 12260 4567          BLT             /MOVE FIOSTK INFORMATION INTO IOT PARAMETER BLOCK
 2106 12261 6221           CFLD   /SOURCE FIELD
 2107 12262 0124           FIOSTK /SOURCE
 2108 12263 6211           DATFLD /DESTINATION FIELD 0
 2109 12264 0000  INF4,    0      /DESTINATION
 2110 12265 7770           -10    /WORD COUNT

      /TSS/8 CONFIGURATION FOR UWM                                       Page 48


 2111 12266 1014          TAD P0007       /GET THE NUMBER OF PARMS TO RETURN
 2112 12267 7106  INF6,   CLL RTL; RTL; RAL
      12270 7006
      12271 7004
 2113 12272 3314          DCA INSPTR
 2114 12273 1036          TAD FILINK      /GET THE LINK-SAVE WORD
 2115 12274 0312          AND C7037       / ZAP THE OLD COPY-COUNT
 2116 12275 1314          TAD INSPTR
 2117 12276 3036          DCA FILINK      / AND SET THE NEW COUNT
 2118 12277 6211          DATFLD
 2119 12300 1561          TAD I JOBDAT    /GLOBAL TO "JOBDAT"
 2120 12301 7001          IAC
 2121 12302 3314          DCA INSPTR      /NOW POINTS TO STATUS WORD
 2122 12303 1315          TAD INIOTC      /JSIOTC
 2123 12304 7040          CMA
 2124 12305 0714          AND I INSPTR    /SET JSIOTC TO INDICATE THAT FIP
 2125 12306 1315          TAD INIOTC      /...IS RETURNING INFORMATION IN THE IOT PAR. BLOCK
 2126 12307 3714          DCA I INSPTR
 2127 12310 6221          CFLD            /RETURN TO CURRENT FIELD
 2128 12311 5513          JMP I FIEXIT
 2129             
 2130 12312 7037  C7037,  7037
 2131 12313 0000  INUFDP, 0
 2132             LGIDDB,
 2133 12314 0000  INSPTR, 0
 2134 12315 0040  INIOTC, JSIOTC

      /TSS/8 CONFIGURATION FOR UWM                                       Page 49


 2135             /LOGIN ROUTINE
 2136             
 2137 12316 1054  LGI0,   TAD RETTBL      /MFD RETRIEVAL IS IN ENTRY 0
 2138 12317 3125          DCA FIOSTK+1
 2139 12320 1126          TAD FIOSTK+2
 2140 12321 7650          SNA CLA         /IS THE ACCOUNT # AT ALL REASONABLE?
 2141 12322 5370          JMP LGI20       /NO - CAN'T LOG IN
 2142 12323 4466          JMS I DS01      /SEARCH THE MFD (AC=0 TO INDICATE 3-WORD SEARCH)
 2143 12324 0125           FIOSTK+1
 2144 12325 5370          JMP LGI20       /COULD NOT FIND ENTRY IN MFD
 2145 12326 7300          CLA CLL         / (ENTRY ADDRESS RETURNED IN AC)
 2146 12327 1126          TAD FIOSTK+2    /GET THE ACCOUNT NUMBER
 2147 12330 4510          JMS I UFO01     / AND OPEN THE UFD (I.E. FETCH RETRIEVAL INFO)
 2148 12331 5370          JMP LGI20       /COULD NOT FIND ROOM ON TABLE
 2149 12332 7240          CLA CMA
 2150 12333 1515          TAD I UTPRNU
 2151 12334 3515          DCA I UTPRNU    /ACCOUNT FOR NEW ENTRY IN ACCESS COUNT
 2152 12335 1042          TAD FIJOB       /NOW GET THE KEYBOARD NUMBER
 2153 12336 1376          TAD TTYTBA      / FOR THIS JOB
 2154 12337 3314          DCA LGIDDB
 2155 12340 6211          DATFLD
 2156 12341 1714          TAD I LGIDDB
 2157 12342 7104          CLL RAL
 2158 12343 1163          TAD DEVTBA      /FIND ITS DDB ADDRESS
 2159 12344 3314          DCA LGIDDB
 2160 12345 1714          TAD I LGIDDB    /GET THE LOCATION OF THE
 2161 12346 1011          TAD P0003       / 'ASSIGNED TIME' WORD
 2162 12347 3314          DCA LGIDDB
 2163 12350 6201          CDF
 2164 12351 1774          TAD I CLK1A     /NOW CALCULATE THE VALUE FOR
 2165 12352 7006          RTL             / THE CURRENT TIME
 2166 12353 7006          RTL
 2167 12354 0014          AND P0007
 2168 12355 3116          DCA CFH
 2169 12356 1775          TAD I CLK2A
 2170 12357 7006          RTL
 2171 12360 7004          RAL
 2172 12361 0031          AND P7770
 2173 12362 1116          TAD CFH
 2174 12363 6211          DATFLD
 2175 12364 3714          DCA I LGIDDB    /THEN SET THE CURRENT TIME IN THE DDB
 2176 12365 6221          CFLD            / SO CONNECT-TIME FIGURE IS ACCURATE
 2177 12366 5767          JMP I .+1       /NOW WRITE OUT THE TABLES
 2178 12367 3353          TABOUT
 2179             
 2180 12370 6221  LGI20,  CFLD
 2181 12371 7240          CLA CMA         /COULD NOT LOGIN - RETURN WITH 7777
 2182 12372 3037          DCA FIUSAC      /INDICATE INABILITY TO LOGIN
 2183 12373 5513          JMP I FIEXIT
 2184             
 2185 12374 0051  CLK1A,  CLK1
 2186 12375 0050  CLK2A,  CLK2
 2187 12376 3330  TTYTBA, TTYTBL

      /TSS/8 CONFIGURATION FOR UWM                                       Page 50


 2188                     PAGE
 2189             /ROUTINE TO PERFORM ACTUAL FILE REDUCTION
 2190             
 2191             /CALLING SEQUENCE:
 2192             /       TAD (NUMBER OF SEGMENTS TO REMAIN)
 2193             /       JMS RED30
 2194             /       RETRIEVAL CHAIN POINTER
 2195             /       UFD RETRIEVAL POINTER
 2196             /       RETURN
 2197             
 2198             DSCNTR,
 2199 12400 0000  RED30,  0
 2200 12401 4674          JMS I WND201    /DIVIDE BY 7
 2201 12402 7040          CMA
 2202 12403 3273          DCA REWNDC      /WINDOW COUNT-- NUMBER OF WHOLE WINDOWS WHICH ARE TO REMAIN
 2203 12404 1600          TAD I RED30     /RETRIEVAL CHAIN POINTER
 2204 12405 2200          ISZ RED30
 2205             
 2206             /NOW TRACE THRU THE LINKED LIST OF FILE INFORMATION
 2207             /RETRIEVAL BLOCKS UNTIL WE GET TO THE ONE IN WHICH THE
 2208             /NEW LAST SEGMENT IS
 2209 12406 3211  RED32,  DCA RED31       /LINKAGE TO RETRIEVAL CHAIN
 2210 12407 1600          TAD I RED30     /PICK UP RETRIEVAL POINTER
 2211 12410 4475          JMS I GE01      /GET THIS WORD INTO CORE
 2212             DSENTP,
 2213 12411 0000  RED31,   0
 2214 12412 3271          DCA REBUFF
 2215 12413 1671          TAD I REBUFF    /PICK UP LINK TO NEXT
 2216 12414 3272          DCA RELINC      /SAVE LINK
 2217 12415 1045          TAD WNDREM
 2218 12416 7640          SZA CLA         /DELETING ENTIRE WINDOW?
 2219 12417 5226          JMP RED37       /NO
 2220 12420 7326          CLA CLL CML RTL
 2221 12421 1273          TAD REWNDC
 2222 12422 7640          SZA CLA         /YES - ARE WE ONE WINDOW FROM THE END YET?
 2223 12423 5226          JMP RED37       /NO
 2224 12424 3671          DCA I REBUFF    /YES - CLEAR THE LINK TO IT
 2225 12425 4504          SAVBUF          / AND SET 'BUFFER CHANGED'
 2226 12426 1272  RED37,  TAD RELINC
 2227 12427 2273          ISZ REWNDC      /AT END OF CHAIN?
 2228 12430 5206          JMP RED32       /NO, KEEP SAVING
 2229 12431 3272          DCA RELINC      /SAVE LINC
 2230 12432 3671          DCA I REBUFF    /YES, TERMINATE IT
 2231 12433 4504          SAVBUF          / AND SET 'BUFFER CHANGED' SWITCH
 2232             
 2233             /FOUND RETRIEVAL BLOCK IN WHICH TO CHOP OFF
 2234             /THE LIST OF SEGMENTS.
 2235             /START DELETING THE SEGMENT NUMBERS AND RETURNING
 2236             /THE ACTUAL DISC SEGMENTS TO THE POOL 
 2237 12434 1045          TAD WNDREM
 2238 12435 7001          IAC             /YES; GET POINTER TO FIRST SEGMENT TO BE DELETED
 2239 12436 1271          TAD REBUFF
 2240 12437 3271          DCA REBUFF      /POINTER TO FIRST SEGMENT TO REMOVE
 2241 12440 1671  RED33,  TAD I REBUFF    /PICK UP THE SEGMENT NUMBER
 2242 12441 7440          SZA
 2243 12442 4503          JMS I SATR1     /RELEASE IT ON SAT
 2244 12443 3671          DCA I REBUFF    /CLEAR THE CELL

      /TSS/8 CONFIGURATION FOR UWM                                       Page 51


 2245 12444 2271          ISZ REBUFF
 2246 12445 1271          TAD REBUFF
 2247 12446 0014          AND P0007
 2248 12447 7640          SZA CLA         /END OF WINDOW?
 2249 12450 5240          JMP RED33       /NO, CONTINUE
 2250 12451 1272          TAD RELINC      /YES, MOVE TO NEXT
 2251 12452 7440          SZA             /END OF CHAIN?
 2252 12453 5256          JMP RED34       /NO, GET NEXT WINDOW
 2253 12454 2200          ISZ RED30       /YES, EXIT
 2254 12455 5600          JMP I RED30
 2255 12456 3261  RED34,  DCA RED35
 2256 12457 1600          TAD I RED30
 2257 12460 4475          JMS I GE01      /GET NEXT WINDOW
 2258             DSKCNT,
 2259 12461 0000  RED35,   0
 2260 12462 3271          DCA REBUFF
 2261 12463 1671          TAD I REBUFF
 2262 12464 3272          DCA RELINC      /SET UP LINK TO NEXT
 2263 12465 3671          DCA I REBUFF    /WIPE OUT THIS LINK
 2264 12466 4504          SAVBUF          / AND INDICATE 'BUFFER CHANGED'
 2265 12467 2271          ISZ REBUFF
 2266 12470 5240          JMP RED33       /KEEP WIPING OUT
 2267             
 2268 12471 0000  REBUFF, 0
 2269 12472 0000  RELINC, 0
 2270 12473 0000  REWNDC, 0
 2271 12474 1345  WND201, WND20

      /TSS/8 CONFIGURATION FOR UWM                                       Page 52


 2272             /DIRECTORY SEARCH
 2273             
 2274             /CALLING SEQUENCE:
 2275             /       CLA OR CMA (3 OR 1 WORD SEARCH)
 2276             /       JMS DS0
 2277             /        POINTER--------------->RETRIEVAL STACK POINTER
 2278             /       RETURN IF NOT FOUND     NA
 2279             /       GOOD RETURN             ME
 2280             /       (POINTER IN AC)         XX
 2281             
 2282 12475 0000  DS0,    0
 2283 12476 7650          SNA CLA         /SKIP IF ONE WORD SEARCH
 2284 12477 7126          CLL CML RTL     /THREE WORD COMPARE
 2285 12500 7040          CMA
 2286 12501 3273          DCA DSWDNR      /MINUS NUMBER OF WORDS TO COMPARE
 2287 12502 1675          TAD I DS0       /PICK UP POINTER TO RETRIEVAL INFORMATION
 2288 12503 3272          DCA DSRETS      
 2289 12504 2275          ISZ DS0
 2290 12505 1374          TAD DSMAX       /SET UP COUNTER ON # ENTRIES CHECKED
 2291 12506 3261          DCA DSKCNT
 2292 12507 3375          DCA DSNEXT      /CLEAR OUR NEXT-HIGHEST
 2293 12510 3313  DS1,    DCA DSWORD
 2294 12511 1672          TAD I DSRETS    /GET PTR. TO RETRIEVAL INFORMATION BLOCK
 2295 12512 4475          JMS I GE01      /GET THE ENTRY INTO CORE
 2296 12513 0000  DSWORD,  0              /WORD NUMBER--I.E. THE ADDR. WITHIN THE DIRECTORY
 2297 12514 7450          SNA
 2298 12515 5675          JMP I DS0       /COULD NOT FIND ENTRY, NOT FOUND RETURN
 2299 12516 3211          DCA DSENTP      /STORE POINTER TO ENTRY
 2300 12517 1273          TAD DSWDNR      /NUMBER OF WORDS TO COMPARE
 2301 12520 3200          DCA DSCNTR
 2302 12521 1272          TAD DSRETS
 2303 12522 3271          DCA DSOBJT      /POINTER TO OBJECT NAME
 2304 12523 1211          TAD DSENTP
 2305 12524 3373          DCA DSENT       /POINTER TO NAME IN BUFFER
 2306 12525 1773  DS2,    TAD I DSENT
 2307 12526 2373          ISZ DSENT
 2308 12527 7041          CIA
 2309 12530 2271          ISZ DSOBJT
 2310 12531 1671          TAD I DSOBJT
 2311 12532 7640          SZA CLA
 2312 12533 5341          JMP DS3         /NOT FOUND
 2313 12534 2200          ISZ DSCNTR
 2314 12535 5325          JMP DS2         /LOOK AT NEXT WORD OF NAME
 2315             
 2316             /WE FOUND IT - JUST RETURN THE POINTER
 2317 12536 2275          ISZ DS0         /FOUND THE ENTRY
 2318 12537 1211          TAD DSENTP      /PICK UP POINTER
 2319 12540 5675          JMP I DS0       / & RETURN
 2320             
 2321             /THIS ENTRY IS NOT THE ONE WE'RE LOOKING FOR, SO WE MUST
 2322             /GO LOOK AT THE NEXT ONE.  UPDATE OUR 'NEXT UFD' WORD
 2323             /AND THEN PICK UP THE LINK TO THE NEXT ENTRY.
 2324 12541 2261  DS3,    ISZ DSKCNT      /BAD DIRECTORY?
 2325 12542 7410          SKP             /NOT YET
 2326 12543 7402          HLT             /LOOPING LINKS - ERROR *****
 2327 12544 1611          TAD I DSENTP    /GET THE LAST ENTRY
 2328 12545 7161          CLL CML CIA

      /TSS/8 CONFIGURATION FOR UWM                                       Page 53


 2329 12546 1671          TAD I DSOBJT
 2330 12547 7620          SNL CLA         /GREATER THAN THE ONE WE WANT?
 2331 12550 5362          JMP DS5         /NO
 2332 12551 1375          TAD DSNEXT
 2333 12552 7450          SNA             /YES - DO WE HAVE A NEXT YET?
 2334 12553 5360          JMP DS4         /NO - JUST TAKE THIS ONE
 2335 12554 7161          CLL CML CIA
 2336 12555 1611          TAD I DSENTP
 2337 12556 7620          SNL CLA         /SMALLER THAN OUR PREVIOUS 'NEXT'?
 2338 12557 5362          JMP DS5         /NO
 2339 12560 1611  DS4,    TAD I DSENTP    /YES - SAVE THIS ONE INSTEAD
 2340 12561 3375          DCA DSNEXT
 2341 12562 1011  DS5,    TAD P0003       /CREATE POINTER TO NEXT ENTRY
 2342 12563 1211          TAD DSENTP
 2343 12564 3200          DCA DSCNTR
 2344 12565 1600          TAD I DSCNTR
 2345 12566 7440          SZA             /IS THIS THE END OF THE DIRECTORY CHAIN?
 2346 12567 5310          JMP DS1         /NO, SO CONTINUE SEARCH
 2347 12570 1011          TAD P0003
 2348 12571 1313          TAD DSWORD      /YES - RETURN ADDRESS OF LAST LINK-WORD
 2349 12572 5675          JMP I DS0
 2350             
 2351 12573 0000  DSENT,  0
 2352 12574 7617  DSMAX,  -161    / - (MAX # OF FILES USER CAN OWN + 1)
 2353 12575 0000  DSNEXT, 0
 2354       2471  DSOBJT= REBUFF
 2355       2472  DSRETS= RELINC
 2356       2473  DSWDNR= REWNDC

      /TSS/8 CONFIGURATION FOR UWM                                       Page 54


 2357                     PAGE
 2358             /ROUTINE TO LOOK IN THE SAT FOR A FREE SEGMENT
 2359             
 2360             /CALLING SEQUENCE:
 2361             /       JMS SATLOK
 2362             /       RETURN (SEGMENT NUMBER IN AC, 0=NONE AVAILABLE)
 2363 12600 0000  SATLOK, 0
 2364 12601 1257          TAD SATTBL      /SET THE POINTER INTO THE TABLE
 2365 12602 3253          DCA SATPNT
 2366 12603 1654          TAD I SATCNT    /# OF AVAILABLE DISC SEGMENTS
 2367 12604 7450          SNA             /ARE THERE ANY?
 2368 12605 5600          JMP I SATLOK    /NO, SO SCREW IT
 2369 12606 7041          CIA
 2370 12607 7040          CMA
 2371 12610 3654          DCA I SATCNT    /DECREMENT SATCNT
 2372 12611 3255          DCA SATCT2
 2373 12612 7240          CLA CMA
 2374 12613 3050          DCA SATSTA      /SET SAT STATUS TO WRITE OUT
 2375             /LOOK FOR A WORD IN SAT TABLE WITH A ZERO BIT IN IT
 2376 12614 1653  SAT1,   TAD I SATPNT    /GET A WORD FROM SAT TABLE
 2377 12615 7040          CMA
 2378 12616 7640          SZA CLA         /ARE ALL BITS SET TO ONE?
 2379 12617 5225          JMP SAT2        /NO, SO WE'VE FOUND A SEGMENT
 2380 12620 2253          ISZ SATPNT      /WAS THIS THE LAST WORD IN THE SAT TABLE?
 2381 12621 5214          JMP SAT1        /NO, SO KEEP LOOKING
 2382 12622 7402          HLT             /YES, BUT WE SUPPOSEDLY HAD A SLOT *****
 2383 12623 3654          DCA I SATCNT    / (IF SYSTEM IS CONTINUED, WE'LL FIX THE COUNT)
 2384 12624 5600          JMP I SATLOK
 2385             
 2386             /WE FOUND A SAT WORD WITH A ZERO BIT. NOW FIND THAT BIT
 2387 12625 7130  SAT2,   CLL CML RAR     /4000 INTO ACC.
 2388 12626 3256          DCA SATMSK
 2389 12627 2255          ISZ SATCT2      /INCREMENT THE BIT POSITION COUNT
 2390 12630 1653          TAD I SATPNT    /GET WORD FROM SAT TABLE
 2391 12631 0256          AND SATMSK      /IS THE BIT CORRESPONDING TO THE ONE IN SATMSK SET?
 2392 12632 7450          SNA
 2393 12633 5236          JMP SAT3        /NO, SO WE FOUND THE ZERO BIT
 2394 12634 7010          RAR             /MOVE MASK BIT ONE TO THE RIGHT
 2395 12635 5226          JMP SAT2+1      /...AND LOOK AT THE NEXT BIT
 2396             
 2397             /FOUND THE BIT WITHIN THE WORD - SATCNT INDICATES WHICH ONE IT IS
 2398 12636 1256  SAT3,   TAD SATMSK
 2399 12637 1653          TAD I SATPNT    /SET THE BIT IN SATTBL TO INDICATE
 2400 12640 3653          DCA I SATPNT    / THAT THIS SEGMENT IS ALLOCATED
 2401 12641 1253          TAD SATPNT
 2402 12642 1252          TAD SATFIX
 2403 12643 3256          DCA SATMSK
 2404             /
 2405             /NOW CALCULATE THE NUMBER OF THE DISC SEGMENT
 2406             /WHICH CORRESPONDS TO THIS BIT IN THE SAT TABLE
 2407 12644 1256          TAD SATMSK      /THE WORD-NUMBER
 2408 12645 7104          CLL RAL
 2409 12646 1256          TAD SATMSK
 2410 12647 7006          RTL             / TIMES 12
 2411 12650 1255          TAD SATCT2      / PLUS THE BIT POSITION
 2412 12651 5600          JMP I SATLOK    /EXIT WITH DISC SEGMENT NUMBER IN ACC.
 2413             

      /TSS/8 CONFIGURATION FOR UWM                                       Page 55


 2414 12652 0526  SATFIX, SATSIZ-2
 2415 12653 0000  SATPNT, 0
 2416 12654 7251  SATCNT, -SATSIZ+1
 2417             SATEMP,
 2418 12655 0000  SATCT2, 0
 2419 12656 0000  SATMSK, 0
 2420 12657 7252  SATTBL, -SATSIZ+2

      /TSS/8 CONFIGURATION FOR UWM                                       Page 56


 2421             /ROUTINE TO RELEASE A SEGMENT IN SAT
 2422             
 2423             /CALLING SEQUENCE:
 2424             /       TAD (SEGMENT NUMBER)
 2425             /       JMS SATREL
 2426             
 2427 12660 0000  SATREL, 0
 2428 12661 7450          SNA             /REASONABLE SEGMENT NUMBER?
 2429 12662 7402          HLT             /NO - ERROR *****
 2430 12663 3255          DCA SATEMP      /SEGMENT NUMBER
 2431 12664 7360          CLA CLL CMA CML
 2432 12665 3050          DCA SATSTA      /MARK SAT STATUS AS HAVING BEEN CHANGED
 2433 12666 1255          TAD SATEMP
 2434 12667 1334          TAD SEGMAX
 2435 12670 7660          SZA SNL CLA     /LEGAL SEGMENT NUMBER?
 2436 12671 7402          HLT             /NO - ERROR *****
 2437 12672 3253          DCA SATPNT
 2438             /
 2439             /NOW DIVIDE SEGMENT NUMBER BY 12 DECIMAL
 2440             /QUOTIENT INDICATES WHICH WORD IN SAT TABLE CORRESPONDS
 2441             /TO THIS DISC SEGMENT. REMAINDER INDICATES WHICH BIT IN
 2442             /THAT WORD
 2443 12673 7240          CLA CMA         /SUBTRACT 1 SO SEGMENT TABLE STARTS AT 0
 2444 12674 1255  SATRL1, TAD SATEMP
 2445 12675 7500          SMA             /IS SEGMENT # > 3777?
 2446 12676 5306          JMP SATRL2      /NO
 2447 12677 1333          TAD CM3770      /YES - SUBTRACT 3770 FROM IT
 2448 12700 3255          DCA SATEMP
 2449 12701 1253          TAD SATPNT      /THEN PUSH THE POINTER BY 3770 SEGMENTS
 2450 12702 1331          TAD C0252       / WHICH IS 252 WORDS
 2451 12703 3253          DCA SATPNT
 2452 12704 5274          JMP SATRL1      /THEN CHECK AGAIN
 2453             
 2454             /NOW FIND THE WORD-ADDRESS OF THIS BIT NUMBER.
 2455 12705 2253          ISZ SATPNT
 2456 12706 1332  SATRL2, TAD C7764       /-14
 2457 12707 7500          SMA             /IS THIS THE WORD?
 2458 12710 5305          JMP .-3         /NO - ADVANCE THE POINTER & SUBTRACT AGAIN
 2459 12711 3255          DCA SATEMP      /YES - SAVE THE BIT-POSITION
 2460 12712 1253          TAD SATPNT
 2461 12713 1257          TAD SATTBL      /GET THE WORD-ADDRESS
 2462 12714 3253          DCA SATPNT
 2463 12715 7120          CLL CML
 2464 12716 7004          RAL
 2465 12717 2255          ISZ SATEMP      /SET UP A MASK CORRESPONDING TO PROPER BIT
 2466 12720 5316          JMP .-2
 2467 12721 0653          AND I SATPNT
 2468 12722 7450          SNA             /IS THIS SEGMENT REALLY ASSIGNED?
 2469 12723 7402          HLT             /NO - ERROR *****
 2470 12724 7040          CMA
 2471 12725 0653          AND I SATPNT    /CLEAR SAT TABLE BIT
 2472 12726 3653          DCA I SATPNT    / THE SEGMENT IS NOW AVAILABLE
 2473 12727 2654          ISZ I SATCNT    /UPDATE THE AVAILABLE SEGMENTS COUNT
 2474 12730 5660          JMP I SATREL
 2475             
 2476 12731 0252  C0252,  252     / [3770 WORDS / 14 BITS PER WORD (OCTAL)]
 2477 12732 7764  C7764,  -14

      /TSS/8 CONFIGURATION FOR UWM                                       Page 57


 2478 12733 4010  CM3770, -3770
 2479 12734 6621  SEGMAX, -DSKSIZ+JOBMAX+SWDEX^20+1       / (-) LARGEST SEGMENT NUMBER

      /TSS/8 CONFIGURATION FOR UWM                                       Page 58


 2480             /ROUTINE TO FETCH A LINKED-BLOCK (USED BY 'OPEN').
 2481 12735 0000  GTBLOK, 0
 2482 12736 3350          DCA GTB1
 2483 12737 6221          CFLD
 2484 12740 1350          TAD GTB1
 2485 12741 6202          CIF
 2486 12742 4571          GETBLK
 2487 12743 5747          JMP I GTBERR    /NO BLOCK AVAILABLE - SAY "PROTECTION VIOLATION"
 2488 12744 6211          DATFLD
 2489 12745 1750          TAD I GTB1
 2490 12746 5735          JMP I GTBLOK
 2491 12747 0552  GTBERR, OPNER2
 2492 12750 0000  GTB1,   0
 2493             
 2494             /DISPATCH TABLE FOR IOTS
 2495             
 2496 12751 4000  IODISP, ASD1
 2497 12752 4200          REL1
 2498 12753 4400          REN0
 2499 12754 0401          OPN0
 2500 12755 1000          CLS0
 2501 12756 1200          WND0
 2502 12757 1105          PRT0
 2503 12760 1200          WND0
 2504 12761 0400          XOPN0
 2505 12762 4464          CPASS0
 2506 12763 1400          CRF0
 2507 12764 1600          EXT0
 2508 12765 2000          RED0
 2509 12766 2200          INF0
 2510 12767 2316          LGI0
 2511 12770 3231          LGO0
 2512 12771 4541          BCLR0

      /TSS/8 CONFIGURATION FOR UWM                                       Page 59


 2513                     PAGE
 2514             /ROUTINE TO GET A DIRECTORY WORD INTO CORE
 2515             
 2516             /CALLING SEQUENCE:
 2517             /       TAD (POINTER TO RETRIEVAL INFORMATION)
 2518             /       JMS GE0
 2519             /       WORD NUMBER
 2520             /       RETURN (BUFFER POINTER IN AC, 0 IF NON-EXISTENT)
 2521             
 2522 13000 0000  GE0,    0
 2523 13001 3240          DCA GERETP      /STORE RETRIEVAL INFORMATION POINTER
 2524 13002 1600          TAD I GE0
 2525 13003 0243          AND K7400       /FIND UFD SEGMENT #
 2526 13004 7106          CLL RTL; RTL; RAL
      13005 7006
      13006 7004
 2527 13007 1240          TAD GERETP
 2528 13010 3240          DCA GERETP
 2529 13011 1640          TAD I GERETP    /GET THE PHYSICAL SEGMENT #
 2530 13012 7450          SNA
 2531 13013 5236          JMP GE3
 2532 13014 3241          DCA RDTEMP
 2533             
 2534             /FILE READ ROUTINE, CHECKS TO SEE IF BUFFER IS FULL.
 2535             /IF SO, IS IT THE SEGMENT WE ARE TRYING TO READ?
 2536             /IF YES, LEAVE, IF NO, WRITE OUT THE BUFFER
 2537             /BEFORE READING THE PROPER SEGMENT.
 2538 13015 2046          ISZ BUFSTA      /ANYTHING IN BUFFER?
 2539 13016 5225          JMP RD0         /NO, READ
 2540 13017 1242          TAD RDCURR      /YES, SAME AS SEGMENT WE ARE LOOKING FOR
 2541 13020 7041          CIA
 2542 13021 1241          TAD RDTEMP
 2543 13022 7650          SNA CLA         /IS THIS THE SEGMENT WE WANT?
 2544 13023 5231          JMP RD3         /YES - SEGMENT ALREADY IN CORE
 2545 13024 4512          JMS I WRT1      /NO - WRITE IT OUT IF NECESSARY
 2546 13025 1241  RD0,    TAD RDTEMP
 2547 13026 4267          JMS RD30        /SET UP PARAMETERS FOR A READ OPERATION
 2548 13027 4473          JMS I FIO01     /PERFORM THE READ
 2549 13030 5513          JMP I FIEXIT    /ERROR ON READ
 2550 13031 7240  RD3,    CLA CMA
 2551 13032 3046          DCA BUFSTA      /SET BUFFER STATUS TO FULL
 2552 13033 1244          TAD C0377
 2553 13034 0600          AND I GE0       /ADDRESS WITHIN SEGMENT
 2554 13035 1056          TAD BUFFER      /CREATE A POINTER
 2555 13036 2200  GE3,    ISZ GE0
 2556 13037 5600          JMP I GE0       /RETURN
 2557             
 2558 13040 0000  GERETP, 0
 2559 13041 0000  RDTEMP, 0
 2560 13042 0000  RDCURR, 0
 2561 13043 7400  K7400,  7400
 2562 13044 0377  C0377,  0377

      /TSS/8 CONFIGURATION FOR UWM                                       Page 60


 2563             /ROUTINE TO ZERO A DISC SEGMENT. WE DON'T ACTUALLY WRITE
 2564             /OUT ZEROES, ALL WE DO IS ZERO THE CORE-BUFFER AND SET 
 2565             /THINGS UP SO IT WILL BE WRITTEN OUT THE NEXT TIME A BLOCK
 2566             /IS NEEDED OR WHEN FIP EXITS.
 2567             
 2568 13045 0000  SCL0,   0
 2569 13046 3242          DCA SCLSEG      /SAVE THE SEGMENT NUMBER
 2570 13047 4512          JMS I WRT1      /WRITE OUT THE BUFFER IF NECESSARY
 2571 13050 1266          TAD MSEGSZ
 2572 13051 3116          DCA CFH         /SET THE BUFFER LENGTH
 2573 13052 1056          TAD BUFFER
 2574 13053 3241          DCA SCLPTR      / AND THE BUFFER POINTER
 2575 13054 3641  SCL1,   DCA I SCLPTR    /NOW CLEAR THE BUFFER TO ZEROES
 2576 13055 2241          ISZ SCLPTR
 2577 13056 2116          ISZ CFH
 2578 13057 5254          JMP SCL1
 2579 13060 1242          TAD SCLSEG
 2580 13061 4267          JMS RD30        /SET UP THE READ PARAMETERS
 2581 13062 7240          CLA CMA         / AND JUST INDICATE THE BUFFER IS FULL
 2582 13063 3046          DCA BUFSTA
 2583 13064 4504          SAVBUF          /ALSO SET 'BUFFER CHANGED'
 2584 13065 5645          JMP I SCL0      /THEN JUST RETURN
 2585             
 2586 13066 7400  MSEGSZ, -WRDSEG
 2587       3041  SCLPTR= RDTEMP
 2588       3042  SCLSEG= RDCURR
 2589             
 2590             /ROUTINE TO SET UP FOR A READ
 2591             /ENTER WITH SEGMENT NUMBER. THIS IS CONVERTED
 2592             /TO A PHYSICAL DISC ADDRESS
 2593 13067 0000  RD30,   0
 2594 13070 3242          DCA RDCURR      /SAVE AS CURRENT BUFFERED SEGMENT
 2595 13071 7240          CLA CMA
 2596 13072 1242          TAD RDCURR
 2597 13073 7112          CLL RTR
 2598 13074 7012          RTR
 2599 13075 3241          DCA RDTEMP
 2600 13076 1241          TAD RDTEMP
 2601 13077 7010          RAR
 2602 13100 0243          AND K7400
 2603 13101 3141          DCA FLPARB+5
 2604 13102 1241          TAD RDTEMP
 2605 13103 0244          AND C0377
 2606 13104 1157          TAD FIBASE
 2607 13105 7106          CLL RTL
 2608 13106 3135          DCA FLPARB+1
 2609 13107 6221          CFLD            /CHANGE TO CURRENT FIELD
 2610 13110 1243          TAD K7400
 2611 13111 3137          DCA FLPARB+3    /WORD COUNT (ONE BUFFER)
 2612 13112 7240          CLA CMA
 2613 13113 1056          TAD BUFFER
 2614 13114 3140          DCA FLPARB+4    /CORE ADDRESS
 2615 13115 1025          TAD C6603       /READ IOT
 2616 13116 3134          DCA FLPARB
 2617 13117 5667          JMP I RD30

      /TSS/8 CONFIGURATION FOR UWM                                       Page 61


 2618             /ACTUAL IO ROUTINE
 2619             /SET UP ALL IO PARAMETERS IN "FLPARB", AND JMS FIPIO
 2620             
 2621 13120 0000  FIPIO,  0
 2622 13121 1007          TAD FIPFLD
 2623 13122 7010          RAR
 2624 13123 3136          DCA FLPARB+2    /='S FIELD WE'RE IN TIMES 4
 2625 13124 6221          CFLD            /CHANGE TO CURRENT FIELD IF NECESSARY
 2626 13125 1373          TAD FIRETP      /POINTER TO FIORET
 2627 13126 3001          DCA 1           /RETURN ADDRESS - SET TO RETURN BELOW WHEN FIP IS RESTARTED
 2628 13127 1340          TAD FIO3        /GET FIPBLK
 2629 13130 6211          DATFLD
 2630 13131 3772          DCA I FIUTBA
 2631 13132 6221          CFLD
 2632 13133 6202          CIF
 2633 13134 4567          BLT             /MOVE DISC TRANSFER PARMS INTO DSUTBL BLOCK
 2634 13135 6221           CFLD
 2635 13136 0134           FLPARB
 2636 13137 6211           DATFLD         /DESTINATION FIELD
 2637 13140 7720  FIO3,    FIPBLK         /DESTINATION
 2638 13141 7770           -10            /WORD COUNT
 2639 13142 6203          CIF CDF
 2640 13143 2565          ISZ I DSBUSY    /GLOBAL TO "DSBUSY"
 2641 13144 5577          WAIT
 2642 13145 5774          JMP I OVER      /GO TO FIELD 0, LOCATION "OVERLA+5"
 2643             
 2644             /MONITOR RETURNS CONTROL HERE AFTER COMPLETING THE TRANSFER
 2645 13146 7200  FIORET, CLA             /RETURNS FROM DISC IO COME HERE
 2646 13147 1020          TAD C0200       /RESET THE FIP STARTING ADDRESS
 2647 13150 3001          DCA 1           /... TO 0200
 2648 13151 4472          FGETJT
 2649 13152 0000           JOBSTS
 2650 13153 6211          DATFLD
 2651 13154 3371          DCA FIPTR1
 2652 13155 1771          TAD I FIPTR1    /PICK UP "JOBSTS"
 2653 13156 6221          CFLD            /CHANGE TO CURRENT FIELD
 2654 13157 0014          AND P0007       /CHECK ERROR BITS
 2655 13160 7440          SZA
 2656 13161 5364          JMP FIO6        /SOME KIND OF ERROR OCCURRED
 2657 13162 2320          ISZ FIPIO       /NO ERROR, NORMAL RETURN
 2658 13163 5720          JMP I FIPIO
 2659 13164 1370  FIO6,   TAD C7773       /-5, DISC ERROR CODE
 2660 13165 7640          SZA CLA
 2661 13166 2320          ISZ FIPIO       /ERROR WAS NOT CAUSED BY DISC TRANSFER
 2662 13167 5720          JMP I FIPIO     /EXIT WITHOUT SKIPPING TO INDICATE DISC TRANSFER ERROR
 2663             
 2664 13170 7773  C7773,  -5
 2665 13171 0000  FIPTR1, 0
 2666 13172 3461  FIUTBA, DSUTBL+4+4
 2667 13173 3146  FIRETP, FIORET
 2668 13174 0576  OVER,   OVRLA1

      /TSS/8 CONFIGURATION FOR UWM                                       Page 62


 2669                     PAGE
 2670             /ROUTINE TO CHECK WHETHER THE FILE A USER
 2671             /IS ATTEMPTING TO ACCESS IS HIS.
 2672             
 2673             /CALLING SEQUENCE:
 2674             /       TAD (INTERNAL FILE NUMBER)
 2675             /       JMS UC0
 2676             /       ERROR RETURN (AC=0 IF FILE NOT OPEN)
 2677             /       NORMAL RETURN
 2678             
 2679 13200 0000  UC0,    0
 2680 13201 4470          JMS I EBLD0
 2681 13202 3227          DCA UCENTP
 2682 13203 1627          TAD I UCENTP    /PICK UP 'ENTTBL' ENTRY FOR THIS FILE
 2683 13204 7450          SNA
 2684 13205 5600          JMP I UC0       /FILE NOT OPEN
 2685 13206 7041          CIA
 2686 13207 7040          CMA
 2687 13210 7104          CLL RAL         / * 2 (AND ZAP 'EXCLUSIVE USE' BIT)
 2688 13211 1053          TAD UFDTBL
 2689 13212 3230          DCA UCUFDP      /POINTER TO OPEN UFD TABLE
 2690 13213 7240          CLA CMA
 2691 13214 1630          TAD I UCUFDP
 2692 13215 7650          SNA CLA         /IS THIS A DIRECTORY?
 2693 13216 5221          JMP UC1         /YES - ONLY OWNER GETS IT (NOT BILLING SYSTEM)
 2694 13217 4462          CHKACT          /NO - IS THIS A PRIVILEGED USER?
 2695 13220 5225          JMP UC2         /YES - HE GETS ANYTHING ELSE
 2696 13221 1041  UC1,    TAD FIACCT      /GET HIS ACCOUNT NUMBER
 2697 13222 7041          CIA
 2698 13223 1630          TAD I UCUFDP
 2699 13224 7450          SNA             /DOES HE OWN THIS?
 2700 13225 2200  UC2,    ISZ UC0         /YES - FIX RETURN ADDRESS
 2701 13226 5600          JMP I UC0
 2702             
 2703 13227 0000  UCENTP, 0
 2704 13230 0000  UCUFDP, 0

      /TSS/8 CONFIGURATION FOR UWM                                       Page 63


 2705             /THIS HANDLES THE 'LOGOUT' IOT - IF THE AC IS SET TO THE
 2706             /USER'S JOB NUMBER, WE LOG HIM OUT; IF THE AC IS 0, WE RETURN
 2707             /THE NUMBER OF ADDITIONAL USERS LOGGED-IN UNDER HIS ACCOUNT.
 2708             
 2709 13231 1125  LGO0,   TAD FIOSTK+1    /DID HE SET HIS AC= TO HIS JOB #?
 2710 13232 7041          CIA
 2711 13233 1042          TAD FIJOB
 2712 13234 7640          SZA CLA
 2713 13235 5761          JMP I LGO1A     /NO - SEE IF HE WANTS COUNT OF OTHER USERS
 2714 13236 4763          JMS I LNS01     /YES - FIRST RELEASE ALL HIS DEVICES
 2715 13237 5242          JMP .+3
 2716 13240 4501          JMS I REL01
 2717 13241 5236          JMP .-3         /KEEP GOING
 2718 13242 4464          JMS I CL01      /CLOSE FILE 0
 2719 13243 7001          IAC
 2720 13244 4464          JMS I CL01      /CLOSE FILE1
 2721 13245 7126          CLL CML RTL
 2722 13246 4464          JMS I CL01      /CLOSE FILE 2
 2723 13247 1011          TAD P0003
 2724 13250 4464          JMS I CL01      /CLOSE FILE3
 2725 13251 1041          TAD FIACCT      /GET USER'S ACCOUNT NUMBER
 2726 13252 3360          DCA LGOPRM+1    /DELIVER TO CALLING SEQUENCE FOR SEARCH
 2727 13253 7240          CLA CMA
 2728 13254 4466          JMS I DS01      /FIND MFD ENTRY; 1 WORD SEARCH
 2729 13255 3357           LGOPRM
 2730 13256 7402          HLT             /ERROR - MASTER DIRECTORY MAY BE LOST *****
 2731 13257 1013          TAD C0006
 2732 13260 3360          DCA LGOPTR      /POINTER TO CP TIME COUNTER
 2733 13261 1404          TAD I ZDS1      /PICK UP THE RELATIVE UFD-LOCATION
 2734 13262 3327          DCA LGOENT      / FOR CHECKING IF REDUCTION IS POSSIBLE
 2735 13263 4472          FGETJT
 2736 13264 0016           JOBRTM         /JOB RUN TIME IN STATUS
 2737 13265 3132          DCA FIOSTK+6    /INTS TO LOW ORDER RUN TIME
 2738 13266 6211          DATFLD
 2739 13267 1532          TAD I FIOSTK+6
 2740 13270 7012          RTR
 2741 13271 7012          RTR
 2742 13272 7012          RTR             /USE ONLY HI ORDER OF LOW ORDER RUN TIME
 2743 13273 0017          AND P0077
 2744 13274 3133          DCA FIOSTK+7
 2745 13275 4472          FGETJT          /NOW THE HI ORDER
 2746 13276 0017           JOBRTH
 2747 13277 3132          DCA FIOSTK+6
 2748 13300 6211          DATFLD
 2749 13301 1532          TAD I FIOSTK+6
 2750 13302 6221          CFLD            /BACK TO THIS FIELD
 2751 13303 0017          AND P0077
 2752 13304 7106          CLL RTL
 2753 13305 7006          RTL
 2754 13306 7006          RTL
 2755 13307 1133          TAD FIOSTK+7
 2756 13310 1760          TAD I LGOPTR    /UPDATE RUNTIME (CPU TIME : DATE WORD)
 2757 13311 3760          DCA I LGOPTR
 2758 13312 4504          SAVBUF          / & SET 'BUFFER CHANGED' SWITCH
 2759 13313 2360          ISZ LGOPTR      /NOW GET TO THE RETRIEVAL-BLOCK POINTER
 2760 13314 1760          TAD I LGOPTR
 2761 13315 3343          DCA LGORET      / & SAVE IT FOR POSSIBLE UFD REDUCTION

      /TSS/8 CONFIGURATION FOR UWM                                       Page 64


 2762 13316 1041          TAD FIACCT
 2763 13317 4511          JMS I UTS01     /FIND OUR ACCOUNT NUMBER IN 'UFDTBL'
 2764 13320 7402          HLT             /ERROR - NO 'UFDTBL' ENTRY FOR US *****
 2765 13321 4461          JMS I BLDP1     /CALCULATE THE 'ENTTBL' ENTRY LOCATION
 2766 13322 3360          DCA LGOPTR      / IN CASE WE'RE THE LAST USER OF THIS UFD
 2767 13323 2515          ISZ I UTPRNU    /DECREMENT THE ACCESS-COUNT FOR THIS UFD
 2768 13324 5350          JMP LGO3
 2769 13325 1054          TAD RETTBL      /LAST USER ACCESSING THIS UFD
 2770 13326 4471          JMS I ENS01     /FIND THE NUMBER OF USERS READING IT
 2771 13327 0000  LGOENT,  0
 2772 13330 7640          SZA CLA         /DOES ANYONE HAVE IT OPEN AS A FILE?
 2773 13331 5345          JMP LGO2        /YES - WE COULDN'T REDUCE IT NOW
 2774 13332 1360          TAD LGOPTR
 2775 13333 4475          JMS I GE01      /NO - GET THE INITIAL LINK-WORD IN THE UFD
 2776 13334 0003           3
 2777 13335 3327          DCA LGOENT
 2778 13336 1727          TAD I LGOENT
 2779 13337 7640          SZA CLA         /IS THE UFD COMPLETELY EMPTY?
 2780 13340 5345          JMP LGO2        /NO - CAN'T REDUCE IT THEN
 2781 13341 7301          CLA CLL IAC
 2782 13342 4764          JMS I RED301    /NOW REDUCE THE UFD TO ONE SEGMENT
 2783 13343 0000  LGORET,  0
 2784 13344 6160           RTABLE         / (FIRST RETTBL ENTRY IS ALWAYS MFD)
 2785 13345 7240  LGO2,   CLA CMA
 2786 13346 1115          TAD UTPRNU
 2787 13347 4506          JMS I TF01      /NOW FREE THE 'UFDTBL' ENTRY
 2788 13350 7200  LGO3,   CLA
 2789 13351 1362          TAD LGO4A       /KLUDGE FIEXIT TO RETURN TO LGO4
 2790 13352 3756          DCA I LGKLUJ
 2791 13353 7240  TABOUT, CLA CMA
 2792 13354 3051          DCA TABSTA      /FORCE TABLES OUT
 2793 13355 5513          JMP I FIEXIT
 2794             
 2795 13356 3642  LGKLUJ, FIX500
 2796 13357 6160  LGOPRM, RTABLE  /2-WORD PARAMETER BLOCK FOR 'DS01'
 2797 13360 0000  LGOPTR, 0
 2798 13361 4643  LGO1A,  LGO1
 2799 13362 4600  LGO4A,  LGO4
 2800 13363 4332  LNS01,  LNS0
 2801 13364 2400  RED301, RED30
 2802             
 2803             /ROUTINE TO RETURN A BLOCK TO FREE-CORE.
 2804 13365 0000  RETBKS, 0
 2805 13366 6221          CFLD
 2806 13367 6202          CIF
 2807 13370 4576          RETBLK          /JUST LINK TO FIELD 0
 2808 13371 5765          JMP I RETBKS    / AND RETURN
 2809             
 2810             /ROUTINE TO RETURN A LINKED LIST OF FREE-CORE BLOCKS.
 2811 13372 0000  RETBLS, 0
 2812 13373 7450          SNA             /AT END OF CHAIN?
 2813 13374 5772          JMP I RETBLS    /YES - RETURN
 2814 13375 4365          JMS RETBKS      /NO - RELEASE THE BLOCK
 2815 13376 5373          JMP .-3

      /TSS/8 CONFIGURATION FOR UWM                                       Page 65


 2816                     PAGE
 2817             /ROUTINE TO OPEN A UFD & LEAVE ZERO ACCESS COUNT
 2818             
 2819             /CALLING SEQUENCE:
 2820             /       TAD (PROJ,PROG NUMBER)
 2821             /       JMS UFO0
 2822             /       ERROR RETURN
 2823             /       NORMAL RETURN (POSITION ON TABLE IN AC)
 2824             
 2825 13400 0000  UFO0,   0
 2826 13401 4310          JMS UTS0        /SEARCH THE TABLE
 2827 13402 7610          SKP CLA         /NOT FOUND - BUILD NEW ENTRY
 2828 13403 5261          JMP UFOEXT      /GOT IT - JUST EXIT
 2829 13404 1341          TAD UTPR1
 2830 13405 4267          JMS UFO6        /GET THE RETRIEVAL INFO. FOR THIS UFD
 2831 13406 5263          JMP UFO5        /NO LUCK - TAKE ERROR EXIT
 2832 13407 3267          DCA UOBUFP      /POINTER TO RETRIEVAL INFORMATION
 2833 13410 1053          TAD UFDTBL
 2834 13411 3115          DCA UOUFDP      /UFD TABLE POINTER
 2835             /SEARCH FOR A FREE SLOT IN UFDTBL
 2836 13412 1515  UFO3,   TAD I UOUFDP
 2837 13413 7650          SNA CLA
 2838 13414 5233          JMP UFO2        /FOUND A FREE SLOT ON THE TABLE
 2839 13415 2115          ISZ UOUFDP
 2840 13416 1515          TAD I UOUFDP
 2841 13417 7650          SNA CLA         /IS IT REALLY EMPTY?
 2842 13420 5230          JMP UFO10       /YES - CLEAN UP
 2843             
 2844             /NO IT IS OCCUPIED
 2845 13421 2115          ISZ UOUFDP
 2846 13422 1115          TAD UOUFDP
 2847 13423 7041          CIA
 2848 13424 1054          TAD UFDEND
 2849 13425 7650          SNA CLA         /HAVE WE SEARCHED THE WHOLE TABLE?
 2850 13426 5600          JMP I UFO0      /NO ROOM ON TABLE
 2851 13427 5212          JMP UFO3        /LOOK AT NEXT SLOT
 2852             
 2853             /COMES HERE WITH UOUFDP POINTING TO A FREE SLOT IN UFDTBL
 2854 13430 7240  UFO10,  CLA CMA
 2855 13431 1115          TAD UOUFDP      /BACK UP THE POINTER
 2856 13432 3115          DCA UOUFDP
 2857 13433 1266  UFO2,   TAD UFORET+1
 2858 13434 3515          DCA I UOUFDP    /PUT PROJ,PROG NUMBER ON TABLE
 2859 13435 2115          ISZ UOUFDP
 2860 13436 3515          DCA I UOUFDP    /ACCOUNT FOR THIS ACCESS
 2861 13437 7240          CLA CMA
 2862 13440 1053          TAD UFDTBL
 2863 13441 7041          CIA
 2864 13442 1115          TAD UOUFDP
 2865 13443 7110          CLL RAR
 2866 13444 3305          DCA UFO1        /RELATIVE POSITION ON TABLE
 2867 13445 1305          TAD UFO1
 2868 13446 4461          JMS I BLDP1     /GENERATE A PTR. INTO RETTBL
 2869 13447 3265          DCA UFORET      /RETRIEVAL POINTER
 2870 13450 1032          TAD C7771
 2871 13451 3116          DCA CFH         /COUNTER FOR TRANSFER TO TABLE
 2872             /NOW MOVE RETRIEVAL INFORMATION FOR THIS GUY'S

      /TSS/8 CONFIGURATION FOR UWM                                       Page 66


 2873             /UFD INTO RETTBL
 2874 13452 2267  UFO4,   ISZ UOBUFP
 2875 13453 1667          TAD I UOBUFP
 2876 13454 3665          DCA I UFORET
 2877 13455 2265          ISZ UFORET
 2878 13456 2116          ISZ CFH         /ENTIRE RETRIEVAL BLOCK TRANSFERRED?
 2879 13457 5252          JMP UFO4        /NO, KEEP IT UP
 2880 13460 1305          TAD UFO1        /YES - PICK UP RELATIVE POSITION
 2881 13461 2200  UFOEXT, ISZ UFO0        /PREPARE FOR NORMAL RETURN
 2882 13462 5600          JMP I UFO0
 2883             
 2884 13463 7300  UFO5,   CLA CLL
 2885 13464 5600          JMP I UFO0
 2886             
 2887 13465 0000  UFORET, 0
 2888 13466 0000          0
 2889       0115  UOUFDP=UTPRNU
 2890             
 2891             /ROUTINE TO READ IN THE RETRIEVAL INFORMATION FOR THE
 2892             /UFD BELONGING TO THE ACCOUNT NUMBER PASSED IN THE AC.
 2893             UOBUFP,
 2894 13467 0000  UFO6,   0
 2895 13470 3266          DCA UFORET+1    /SET UP CALLING SEQUENCE FOR MFD SEARCH
 2896 13471 1054          TAD RETTBL
 2897 13472 3265          DCA UFORET
 2898 13473 7040          CMA
 2899 13474 4466          JMS I DS01      /ONE WORD MASTER FILE  DIRECTORY SEARCH FOR PROJ,PROG MATCH
 2900 13475 3465           UFORET
 2901 13476 5667          JMP I UFO6      /COULD NOT FIND UFD ENTRY
 2902 13477 1014          TAD P0007
 2903 13500 3265          DCA UFORET      /POINTER TO UFD RETRIEVAL INFORMATION
 2904 13501 1665          TAD I UFORET
 2905 13502 3305          DCA UFO1
 2906 13503 1054          TAD RETTBL      /GET POINTER TO RETRIEVAL INFO FOR THE MFD
 2907 13504 4475          JMS I GE01      /GET RETRIEVAL INFORMATION INTO CORE
 2908 13505 0000  UFO1,    0
 2909 13506 2267          ISZ UFO6
 2910 13507 5667          JMP I UFO6

      /TSS/8 CONFIGURATION FOR UWM                                       Page 67


 2911             /ROUTINE TO SEARCH UFD TABLE FOR PROJ,PROG NUMBER
 2912             
 2913             /CALLING SEQUENCE:
 2914             /       TAD (PROJ,PROG NUMBER)
 2915             /       JMS UTS0
 2916             /       NOT FOUND RETURN
 2917             /       NORMAL RETURN (RETRIEVAL POSITION IN AC)
 2918             
 2919             DVT1,
 2920 13510 0000  UTS0,   0
 2921 13511 3341          DCA UTPR1       /PROJ,PROG NUMBER
 2922 13512 1053          TAD UFDTBL      /PTR. TO HEAD OF UFDTBL
 2923 13513 3115          DCA UTUPTR
 2924 13514 1054  UTS1,   TAD UFDEND      /END OF UFD TABLE
 2925 13515 7041          CIA
 2926 13516 1115          TAD UTUPTR
 2927 13517 7650          SNA CLA
 2928 13520 5710          JMP I UTS0      /COULD NOT FIND PROJ,PROG NUMBER ON TABLE
 2929 13521 1515          TAD I UTUPTR
 2930 13522 7041          CIA
 2931 13523 1341          TAD UTPR1
 2932 13524 7650          SNA CLA
 2933 13525 5331          JMP UTS3        /FOUND ENTRY, GET POINTER
 2934 13526 2115          ISZ UTUPTR      /STEP UP ONE SLOT
 2935 13527 2115          ISZ UTUPTR
 2936 13530 5314          JMP UTS1        /LOOK IN THE NEXT ENTRY
 2937 13531 1053  UTS3,   TAD UFDTBL
 2938 13532 7041          CIA
 2939 13533 1115          TAD UTUPTR
 2940 13534 7110          CLL RAR         /RELATIVE POSITION ON TABLE
 2941 13535 7001          IAC             /THE RELATIVE POSITION
 2942 13536 2115          ISZ UTPRNU      /UTPRNU POINTS TO ACCESS COUNT OF THIS PROJ, PROG #
 2943 13537 2310          ISZ UTS0
 2944 13540 5710          JMP I UTS0
 2945             
 2946       0115  UTUPTR= UTPRNU

      /TSS/8 CONFIGURATION FOR UWM                                       Page 68


 2947             /ROUTINE TO ADD DEVICE TIME TO THE COUNTER IN
 2948             /THIS USER'S MFD ENTRY.
 2949             
 2950             UTPR1,
 2951 13541 0000  DVT0,   0               /COMPUTE DEVICE TIME AT RELEASE
 2952 13542 3310          DCA DVT1        /ELAPSED DEVICE TIME
 2953 13543 1041          TAD FIACCT
 2954 13544 3361          DCA DVT3        /PROJ,PROG NUMBER OF CURRENT USER
 2955 13545 7240          CLA CMA
 2956 13546 4466          JMS I DS01      /SEARCH MFD FOR PROJ,PROG NUMBER
 2957 13547 3560           DVT4
 2958 13550 7402          HLT             /MFD BLOWN - ERROR *****
 2959 13551 1012          TAD C0005
 2960 13552 3116          DCA CFH         /POINTER TO DEVICE TIME WORD
 2961 13553 1310          TAD DVT1
 2962 13554 1516          TAD I CFH       /UPDATE USER'S CUMULATIVE DEVICE TIME
 2963 13555 3516          DCA I CFH
 2964 13556 4504          SAVBUF          /INDICATE BUFFER WAS CHANGED
 2965 13557 5741          JMP I DVT0
 2966             
 2967 13560 6160  DVT4,   RTABLE
 2968 13561 0000  DVT3,   0
 2969             
 2970             /ROUTINE TO FIND THE ADDRESS OF A WORD IN THE
 2971             /JOB STATUS BLOCKS FOR THIS JOB.
 2972             
 2973 13562 0000  FGETJ0, 0
 2974 13563 6211          DATFLD
 2975 13564 1561          TAD I JOBDAT
 2976 13565 7650          SNA CLA         /IS EVERYTHING PROPER?
 2977 13566 4500          REBOOT          /NO - ERROR *****
 2978 13567 6221          CFLD
 2979 13570 1762          TAD I FGETJ0    /GET THE RELATIVE WORD NUMBER
 2980 13571 3375          DCA .+4
 2981 13572 1161          TAD JOBDAT      /NOW GET THE ADDRESS OF A 'JOBTBL' POINTER
 2982 13573 6202          CIF
 2983 13574 4574          GETJTA          / AND LET THE FIELD 0 ROUTINE DO THE WORK
 2984 13575 0000           0
 2985 13576 2362          ISZ FGETJ0
 2986 13577 5762          JMP I FGETJ0    /THEN JUST RETURN; AC=ADDRESS

      /TSS/8 CONFIGURATION FOR UWM                                       Page 69


 2987                     PAGE
 2988             /EXIT ROUTINE
 2989             /COMES HERE WHEN FIP HAS COMPLETED ITS TASK
 2990             /FIRST, SEE IF ANY INTERNAL FILE HAVE BEEN CHANGED
 2991             /THOSE THAT HAVE CHANGED MUST BE WRITTEN BACK OUT TO DISC
 2992             
 2993 13600 4512  FIX0,   JMS I WRT1      /MAKE SURE THE BUFFER IS EMPTY
 2994 13601 2051          ISZ TABSTA      /CHECK TABLE STATUS
 2995 13602 5205          JMP FIX1        /NOTHING CHANGED IN TABLES
 2996 13603 1275          TAD FIPTBS      /BOTTOM OF TABLE AREA
 2997 13604 5210          JMP FIX2        /SAVE TABLES BEFORE EXIT
 2998             
 2999 13605 2050  FIX1,   ISZ SATSTA      /CHECK SAT STATUS
 3000 13606 5217          JMP FIX20       /NOTHING TO BE SAVED, EXIT
 3001 13607 1057          TAD SATBOT      /BOTTOM OF SAT
 3002 13610 4264  FIX2,   JMS FIX40
 3003 13611 1005          TAD FIDEXP      /GLOBAL TO "FIPDEX"
 3004 13612 3135          DCA FLPARB+1    /MEMORY FIELD
 3005 13613 1026          TAD C6605
 3006 13614 3134          DCA FLPARB      /WRITE IOT
 3007 13615 4473          JMS I FIO01     /PERFORM THE WRITE
 3008 13616 7402          HLT             /ERROR ON WRITE, FATAL
 3009             /ALL DISC TABLES ARE NOW UP TO DATE
 3010 13617 4472  FIX20,  FGETJT
 3011 13620 0000           JOBSTS
 3012 13621 3043          DCA FIOPTR
 3013 13622 6211          DATFLD
 3014 13623 1443          TAD I FIOPTR
 3015 13624 0276          AND FISIOT      /CLEAR 'FIP IOT' BIT
 3016 13625 3443          DCA I FIOPTR
 3017 13626 6221          CFLD
 3018 13627 4472          FGETJT          /RESTORE USER REGISTERS
 3019 13630 0011           JOBREG
 3020 13631 3237          DCA FIX21
 3021 13632 6202          CIF
 3022 13633 4567          BLT
 3023 13634 6221           CFLD
 3024 13635 0035           FIUSPC
 3025 13636 6211           DATFLD
 3026 13637 0000  FIX21,   0
 3027 13640 7773           -5
 3028 13641 5642          JMP I .+1
 3029 13642 3643  FIX500, FIX50   /CHANGED TO 'LGO4' DURING LOGOUT PROCESSING
 3030 13643 6221  FIX50,  CFLD
 3031 13644 1700          TAD I SEGCNT
 3032 13645 6201          CDF
 3033 13646 3677          DCA I FIXCNT    /STORE # FREE SEGMENTS IN FIELD 0
 3034 13647 4463          CHKSRC          /WHO CALLED US?
 3035 13650 5256          JMP FIX30       /A USER - JUST CLEAR THE ENTRY
 3036 13651 1025          TAD C6603       /'SI' - SET UP TO READ IT IN
 3037 13652 3134          DCA FLPARB
 3038 13653 3135          DCA FLPARB+1    /SI IS IN THE TRACK 0 OF THE DISC
 3039 13654 4264          JMS FIX40
 3040 13655 4473          JMS I FIO01     /RETURN WILL BE TO SI
 3041             
 3042             /FIP WAS CALLED BY A USER - JUST CLEAR THE 'CORTBL' ENTRY
 3043 13656 6201  FIX30,  CDF

      /TSS/8 CONFIGURATION FOR UWM                                       Page 70


 3044 13657 1434          TAD I FANFLD    /A USER - GET THE 'CORTBL' ENTRY
 3045 13660 0274          AND FIPCLR      / AND CLEAR THE JOB NUMBER & LOCK BIT
 3046 13661 3434          DCA I FANFLD
 3047 13662 6202          CIF
 3048 13663 5577          WAIT            /NOW BACK TO MONITOR
 3049             
 3050             /ROUTINE TO SET UP THE PARAMETERS IN 'FLPARB'.
 3051 13664 0000  FIX40,  0
 3052 13665 3137          DCA FLPARB+3    /SET (-) WORD-COUNT
 3053 13666 1137          TAD FLPARB+3
 3054 13667 3141          DCA FLPARB+5    /SET DISC ADDRESS
 3055 13670 7240          CLA CMA
 3056 13671 1141          TAD FLPARB+5
 3057 13672 3140          DCA FLPARB+4    /SET CORE ADDRESS - 1
 3058 13673 5664          JMP I FIX40
 3059             
 3060 13674 5600  FIPCLR, FSWP+NOTRUN+FIP+SI
 3061       0156  FIPFIP= C0400
 3062 13675 5600  FIPTBS, ENTABL  /LOWEST TABLE IN FIP
 3063 13676 7677  FISIOT, -JSIOT-1
 3064 13677 5333  FIXCNT, NFSEGS          /VALUE FOR RESIDENT 'SEGS'
 3065 13700 7251  SEGCNT, -SATSIZ+1       /POINTER TO # FREE SEGMENTS

      /TSS/8 CONFIGURATION FOR UWM                                       Page 71


 3066             /ROUTINE TO DETERMINE IF A DEVICE IS ASSIGNED TO THIS JOB
 3067             /AND IF SO, TO RETURN WITH THE "SLAVE" BIT IN THE AC
 3068             
 3069             /CALLING SEQUENCE:
 3070             /       TAD (DEVICE NUMBER)
 3071             /       JMS DTE0
 3072             /       RETURN (DEVICE NOT ASSIGNED TO THIS JOB)
 3073             /       RETURN (DEVICE ASSIGNED) 
 3074             
 3075 13701 0000  DTE0,   0
 3076 13702 7510          SPA             /IS IT A TTY?
 3077 13703 5307          JMP .+4         /NO
 3078 13704 7104          CLL RAL         /YES - GET THE DEVTBL ENTRY-ADDRESS
 3079 13705 1163          TAD DEVTBA
 3080 13706 5311          JMP DTE1
 3081 13707 0017          AND P0077       /EXTRACT THE DEVICE NUMBER
 3082 13710 1052          TAD DEVEND      / & FIND THE DEVTBL ENTRY
 3083 13711 3342  DTE1,   DCA DTE2        /POINTER TO DEVTBL ENTRY
 3084 13712 1342          TAD DTE2
 3085 13713 7041          CIA
 3086 13714 1060          TAD DEVOVR
 3087 13715 7700          SMA CLA         /IS IT A LEGAL DEVICE NUMBER?
 3088 13716 5321          JMP .+3         /YES
 3089 13717 1343          TAD DTEBAD
 3090 13720 3342          DCA DTE2        /NO - FUDGE SO JOB=0 (CHANGED TO 7777)
 3091 13721 1342          TAD DTE2
 3092 13722 6221          CFLD
 3093 13723 3701          DCA I DTE0      /PASS BACK THE DEVTBL POINTER
 3094 13724 2301          ISZ DTE0
 3095 13725 6211          DATFLD
 3096 13726 1742          TAD I DTE2      /GET THE DDB ADDRESS
 3097 13727 7450          SNA             /IS THERE A DDB?
 3098 13730 5701          JMP I DTE0      /NO - DEVICE NOT ASSIGNED TO ANYONE
 3099 13731 3342          DCA DTE2
 3100 13732 2342          ISZ DTE2
 3101 13733 1742          TAD I DTE2
 3102 13734 0017          AND P0077       /EXTRACT JOB NUMBER
 3103 13735 7041          CIA
 3104 13736 1042          TAD FIJOB       /NUMBER OF CURRENT JOB
 3105 13737 7650          SNA CLA
 3106 13740 2301          ISZ DTE0        /"ASSIGNED" RETURN
 3107 13741 5701          JMP I DTE0      /NOT OWNED BY THIS JOB
 3108             
 3109 13742 0000  DTE2,   0
 3110 13743 3255  DTEBAD, JOBTBL-1

      /TSS/8 CONFIGURATION FOR UWM                                       Page 72


 3111             /ROUTINE TO FREE AN ENTRY ON THE UFD TABLE
 3112             
 3113             /CALLING SEQUENCE:
 3114             /       TAD (POSITION ON UFDTBL)
 3115             /       JMS TF0
 3116             /       RETURN
 3117             
 3118 13744 0000  TF0,    0
 3119 13745 3365          DCA TFUFDP      /POSITION ON TABLE
 3120 13746 3765          DCA I TFUFDP    /CLEAR OWNERS PROJ,PROG NUMBER
 3121 13747 1053          TAD UFDTBL      /BEGINNING OF TABLE
 3122 13750 7041          CIA
 3123 13751 1365          TAD TFUFDP
 3124 13752 7110          CLL RAR         /RELATIVE POSITION ON TABLE
 3125 13753 7001          IAC
 3126 13754 4461          JMS I BLDP1     /BUILD A PTR. TO ENTTBL
 3127 13755 3365          DCA TFUFDP      /POINTER TO RETRIEVAL INFORMATION
 3128 13756 1031          TAD P7770       /SET # WORDS PER ENTTBL ENTRY
 3129 13757 3371          DCA TFCNTR
 3130 13760 3765  TF1,    DCA I TFUFDP    /ZERO OUT THE ENTRY
 3131 13761 2365          ISZ TFUFDP
 3132 13762 2371          ISZ TFCNTR
 3133 13763 5360          JMP TF1
 3134 13764 5744          JMP I TF0
 3135             
 3136             
 3137             /ROUTINE TO GET THE FILE CONTROL-BLOCK FOR THE
 3138             /FILE WHOSE INTERNAL FILE NUMBER IS IN THE AC.
 3139             
 3140             TFUFDP,
 3141 13765 0000  LNK0,   0               /GET FILE LINKAGE
 3142 13766 1376          TAD LNKF
 3143 13767 3371          DCA LNK1
 3144 13770 4472          FGETJT
 3145             TFCNTR,
 3146 13771 0000  LNK1,    0
 3147 13772 3116          DCA CFH
 3148 13773 6211          DATFLD
 3149 13774 1516          TAD I CFH       /PTR TO FILE CONTROL BLOCK
 3150 13775 5765          JMP I LNK0
 3151 13776 0020  LNKF,   JOBF0

      /TSS/8 CONFIGURATION FOR UWM                                       Page 73


 3152                     PAGE
 3153             /ROUTINE TO ASSIGN A DEVICE
 3154             
 3155 14000 1125  ASD1,   TAD FIOSTK+1
 3156 14001 4467          JMS I DTE01     /IS THIS DEVICE ASSIGNED TO THIS JOB?
 3157 14002 0000  ASD2,    0              /SET BY DTE01 TO POINT TO PROPER ENTRY IN DEVTBL
 3158 14003 5210          JMP ASD6        /NO
 3159 14004 7300          CLA CLL         /YES, SO RELEASE IT
 3160 14005 1125          TAD FIOSTK+1    /...BEFORE REASSIGNING
 3161 14006 4501          JMS I REL01
 3162 14007 6211          DATFLD
 3163 14010 1602  ASD6,   TAD I ASD2      /GET THE DDB ADDRESS
 3164 14011 7440          SZA             /IS THERE A DDB?
 3165 14012 5235          JMP ASD11       /YES - SOMEONE ELSE HAS THE DEVICE
 3166             /
 3167             /COMES HERE IF OKAY TO MAKE THIS ASSIGNMENT
 3168 14013 1125          TAD FIOSTK+1
 3169 14014 7700          SMA CLA         /IS THE DEVICE BEING ASSIGNED A TELETYPE?
 3170 14015 5514          JMP I LGI201    /YES - THAT'S NOT ALLOWED
 3171 14016 6221          CFLD            /CHANGE TO CURRENT FIELD
 3172 14017 1202          TAD ASD2
 3173 14020 6202          CIF
 3174 14021 4572          GETDDB          /GET A BLOCK FROM THE FREE LIST AND LINK IT INTO DEVTBL
 3175 14022 5644          JMP I L2QB1A    /NO BLOCK.. REDO IN CASE OF USER OTHERWISE ERROR RETURN FOR SI
 3176 14023 6211          DATFLD
 3177 14024 1602          TAD I ASD2      /PICK DDB ADDRESS FROM DEVTBL
 3178 14025 3116          DCA CFH         /SAVE IT
 3179 14026 1125          TAD FIOSTK+1
 3180 14027 3516          DCA I CFH       /SET TO REFLECT THE DEVICE NUMBER
 3181 14030 1202          TAD ASD2        /PICK PTR TO DEVTBL
 3182 14031 4634          JMS I ASD3      /CHECK PTP/LPT CASE
 3183 14032 6221  ASD7,   CFLD
 3184 14033 5513          JMP I FIEXIT    /THEN JUST EXIT
 3185 14034 5020  ASD3,   ASDLPT
 3186             
 3187             /COMES HERE IF ONE JOB ATTEMPTS TO ASSIGN AN ALREADY ASSIGNED DEVICE
 3188 14035 7001  ASD11,  IAC
 3189 14036 3116          DCA CFH         /NOW POINTS TO JOB # (OR LOC 0, IF ILLEGAL)
 3190 14037 1516          TAD I CFH
 3191 14040 7450          SNA             /JOB NUMBER THERE?
 3192 14041 7040          CMA             /NO - RETURN 7777
 3193 14042 3037          DCA FIUSAC      /RETURN THE OWNER'S JOB NUMBER
 3194 14043 5232          JMP ASD7        /EXIT
 3195             
 3196 14044 4731  L2QB1A, L2QB1

      /TSS/8 CONFIGURATION FOR UWM                                       Page 74


 3197             /ROUTINE TO FIND AN EMPTY DIRECTORY ENTRY; THE UFD
 3198             /IS EXTENDED IF NECESSARY.
 3199             /CALL:  TAD (POINTER TO UFD RETRIEVAL INFORMATION)
 3200             /       JMS DE0
 3201             /       BAD RETURN (NO FREE ENTRY OR NO DISC FOR UFD)
 3202             /       NORMAL RETURN (POINTER TO ENTRY IN AC)
 3203             
 3204 14045 0000  DE0,    0
 3205 14046 3364          DCA DERETP      /SAVE THE RETRIEVAL POINTER
 3206 14047 3361          DCA DEBEGG      /CLEAR THE 'FROM BEGINNING' SWITCH
 3207 14050 1364          TAD DERETP
 3208 14051 3010          DCA INDEX
 3209             /
 3210             /IN ORDER TO SAVE DISC I/O, WE START THE SEARCH FROM THE
 3211             /MIDDLE OF THE UFD IF WE ALREADY HAVE ONE OF ITS SEGMENTS
 3212             /IN OUR SEGMENT BUFFER. IF WE DON'T FIND AN ENTRY FROM THE
 3213             /MIDDLE, WE RE-CHECK THE UFD FROM THE BEGINNING; IF WE STILL
 3214             /DON'T FIND AN ENTRY, WE EXTEND THE UFD.
 3215 14052 1156  DE1,    TAD SEGSIZ
 3216 14053 3273          DCA DEWORD      /SET INITIAL ADDRESS TO SECOND SEGMENT IN UFD
 3217 14054 1410          TAD I INDEX     /GET THE NEXT SEGMENT INDEX IN THE UFD
 3218 14055 7450          SNA             /IS THERE A NEXT?
 3219 14056 5265          JMP DE2         /NO - WE SEARCH FROM THE TOP
 3220 14057 7041          CIA
 3221 14060 1762          TAD I DECURR
 3222 14061 7650          SNA CLA         /YES - IS IT OUR BUFFERED SEGMENT?
 3223 14062 5271          JMP DE4         /YES - START SEARCH FROM WHERE WE ARE
 3224 14063 1273          TAD DEWORD      /NO - UPDATE OUR ADDRESS BY ONE SEGMENT
 3225 14064 5252          JMP DE1         / & CONTINUE CHECKING
 3226             /
 3227             /THE BUFFERED SEGMENT IS NOT ANY OF THIS UFD'S OR WE COULDN'T
 3228             /FIND A FREE ENTRY STARTING FROM THE MIDDLE OF THE UFD,
 3229             /SO WE SEARCH THE UFD FROM THE BEGINNING.
 3230 14065 7240  DE2,    CLA CMA
 3231 14066 3361          DCA DEBEGG      /SET THE 'FROM BEGINNING' SWITCH
 3232 14067 1015  DE3,    TAD C0010
 3233 14070 3273          DCA DEWORD      /SET THE NEW READ ADDRESS
 3234 14071 1364  DE4,    TAD DERETP
 3235 14072 4475          JMS I GE01      /GET THE NEXT ENTRY
 3236 14073 0000  DEWORD,  0
 3237 14074 7450          SNA             /WAS IT WITHIN THE UFD?
 3238 14075 5313          JMP DE6         /NO - GO TRY TO EXTEND IT
 3239 14076 3116          DCA CFH         /YES - SAVE ITS CORE LOCATION
 3240 14077 1516          TAD I CFH       /GET THE FIRST ENTRY-WORD
 3241 14100 7640          SZA CLA         /IS IT CLEAR?
 3242 14101 5311          JMP DE5         /NO - TRY THE NEXT
 3243 14102 2116          ISZ CFH
 3244 14103 1516          TAD I CFH       /YES - CHECK THE SECOND WORD
 3245 14104 7640          SZA CLA         /IS THAT OK ALSO?
 3246 14105 5311          JMP DE5         /NO
 3247 14106 1273          TAD DEWORD      /YES - WE HAVE AN EMPTY ENTRY
 3248 14107 2245          ISZ DE0         / SO SKIP TO INDICATE IT
 3249 14110 5645          JMP I DE0       / AND RETURN WITH ITS LOCATION IN THE AC
 3250 14111 1273  DE5,    TAD DEWORD      /NOT THIS ENTRY - UPDATE THE ADDRESS
 3251 14112 5267          JMP DE3         / AND CONTINUE SEARCH
 3252             /
 3253             /WE'VE RUN PAST THE END OF THE UFD - WE MAY HAVE TO EXTEND IT.

      /TSS/8 CONFIGURATION FOR UWM                                       Page 75


 3254 14113 2361  DE6,    ISZ DEBEGG      /WAS THIS SEARCH FROM THE FRONT OF THE UFD?
 3255 14114 5265          JMP DE2         /NO - SEARCH AGAIN, THIS TIME FROM THE FRONT
 3256 14115 1364          TAD DERETP
 3257 14116 3363          DCA DEPTR       /YES - FIND THE NEXT SEGMENT SLOT
 3258 14117 1032          TAD C7771
 3259 14120 3116          DCA CFH         /SET THE COUNTER (7 SEGMENTS MAXIMUM PER UFD)
 3260 14121 1763  DE7,    TAD I DEPTR     /GET THE NEXT SEGMENT POINTER
 3261 14122 7650          SNA CLA         /IS THERE A NEXT?
 3262 14123 5330          JMP DE8         /NO - WE HAVE ROOM FOR A SEGMENT
 3263 14124 2363          ISZ DEPTR       /YES - INCREMENT THE POINTER
 3264 14125 2116          ISZ CFH
 3265 14126 5321          JMP DE7         / & TRY AGAIN
 3266 14127 5645          JMP I DE0       /CAN'T EXTEND THE UFD - TAKE ERROR EXIT
 3267             /
 3268             /WE HAVE ROOM FOR ANOTHER SEGMENT - GET ONE FROM SAT.
 3269 14130 4502  DE8,    JMS I SATL1     /FIND A FREE SEGMENT
 3270 14131 7450          SNA             /WAS ONE AVAILABLE?
 3271 14132 5645          JMP I DE0       /NO - TAKE ERROR EXIT
 3272 14133 3763          DCA I DEPTR     /YES - SAVE IT IN THE RETRIEVAL TABLE
 3273 14134 1364          TAD DERETP
 3274 14135 4765          JMS I ENS31     /GET THE RELATIVE ENTRY NUMBER
 3275 14136 7104          CLL RAL
 3276 14137 1053          TAD UFDTBL      / & THE POINTER INTO 'UFDTBL'
 3277 14140 3116          DCA CFH
 3278 14141 1516          TAD I CFH       /GET THE OWNER'S ACCOUNT NUMBER
 3279 14142 4766          JMS I UFO61     / & FETCH THE UFD RETRIEVAL BLOCK
 3280 14143 7402          HLT             /ACCOUNT NOT FOUND - ERROR *****
 3281 14144 3116          DCA CFH         /SAVE THE BUFFER POINTER
 3282 14145 2116          ISZ CFH
 3283 14146 1516          TAD I CFH       /GET THE SEGMENT NUMBERS
 3284 14147 7640          SZA CLA         /IS THIS THE END OF THE POINTERS?
 3285 14150 5345          JMP .-3         /NO - KEEP LOOKING
 3286 14151 1763          TAD I DEPTR     /YES - SET OUR NEW SEGMENT NUMBER
 3287 14152 3516          DCA I CFH       / INTO THE RETRIEVAL BLOCK
 3288 14153 4504          SAVBUF          /NOW SET THE SWITCH TO WRITE BACK THE BUFFER
 3289 14154 7240          CLA CMA
 3290 14155 3051          DCA TABSTA      / AND INDICATE THE TABLES HAVE BEEN CHANGED
 3291 14156 1763          TAD I DEPTR
 3292 14157 4505          JMS I SCL01     /FINALLY WE ZERO THE NEW UFD SEGMENT
 3293 14160 5271          JMP DE4         / AND THEN FINISH OUR SEARCH
 3294             
 3295 14161 0000  DEBEGG, 0
 3296 14162 3042  DECURR, RDCURR
 3297 14163 0000  DEPTR,  0
 3298 14164 0000  DERETP, 0
 3299 14165 2165  ENS31,  ENS3
 3300 14166 3467  UFO61,  UFO6

      /TSS/8 CONFIGURATION FOR UWM                                       Page 76


 3301                     PAGE
 3302             /THIS HANDLES THE 'REL' IOT - RELEASE A DEVICE.
 3303 14200 1125  REL1,   TAD FIOSTK+1    /GET THE DEVICE NUMBER
 3304 14201 4203          JMS REL00
 3305 14202 5513          JMP I FIEXIT
 3306             
 3307             /ROUTINE WHICH ACTUALLY RELEASES THE DEVICE.
 3308 14203 0000  REL00,  0
 3309 14204 3122          DCA REL6        /# OF THE DEVICE TO BE RELEASED
 3310 14205 1122          TAD REL6
 3311 14206 4467          JMS I DTE01     /IS THIS DEVICE ASSIGNED TO THIS USER?
 3312 14207 0000  REL5,   0               /SET BY DTE0 TO POINT TO DEVTBL ENTRY FOR THIS DEVICE
 3313 14210 5267          JMP REL8        /NO - TAKE ERROR EXIT IF SI
 3314 14211 1207          TAD REL5
 3315 14212 4523          JMS I REL4      /SPECIAL CASE ....PTP/LPT
 3316 14213 7300          CLA CLL
 3317 14214 6211          DATFLD
 3318 14215 1522          TAD I REL6      /GET THE UNIT #
 3319 14216 7710          SPA CLA         /IS THIS A TTY?
 3320 14217 5224          JMP .+5         /NO
 3321 14220 1124          TAD FIOSTK
 3322 14221 1322          TAD RELLOG
 3323 14222 7640          SZA CLA         /YES - IS HE DOING A 'LOGOUT'?
 3324 14223 5267          JMP REL8        /NO - THEN IT'S ILLEGAL
 3325 14224 1122          TAD REL6
 3326 14225 1011          TAD P0003       /POSITION OF TIME IN DDB
 3327 14226 3315          DCA REL2
 3328 14227 1715          TAD I REL2      /GET TIME ASSIGNED
 3329 14230 7041          CIA
 3330 14231 3315          DCA REL2        /-TIME ASSIGNED
 3331 14232 6201          CDF
 3332 14233 1720          TAD I RELCK1    /GET TIME NOW
 3333 14234 7006          RTL
 3334 14235 7006          RTL
 3335 14236 0014          AND P0007       /JUST SIGNIFICANT PART OF LOW ORDER TIME
 3336 14237 3316          DCA REL3
 3337 14240 1721          TAD I RELCK2
 3338 14241 6221          CFLD            /BACK TO THIS FIELD
 3339 14242 7006          RTL
 3340 14243 7004          RAL             / (LINK WILL BE SET NOW)
 3341 14244 0031          AND P7770       /JUST INSIGNIFICANT PART OF HI ORDER
 3342 14245 1316          TAD REL3        /TIME AT  RELEASE
 3343 14246 1315          TAD REL2        /-TIME AT ASSIGNMENT (13-BIT SUBTRACT)
 3344 14247 3315          DCA REL2        /TIME WE OWNED IT
 3345 14250 1315          TAD REL2        /RECORD TIME FOR THIS DEVICE
 3346 14251 7430          SZL             /GONE THROUGH MIDNIGHT?
 3347 14252 1323          TAD RELCON      /YES - ADD FUDGE FACTOR
 3348 14253 7440          SZA             /ANYTHING TO RECORD?
 3349 14254 4714          JMS I DVT01     /YES - RECORD IT IN THE UFD BLOCK
 3350 14255 6211          DATFLD
 3351 14256 1522          TAD I REL6      /GET THE UNIT #
 3352 14257 7700          SMA CLA         /IS IT A TTY (I.E. NON-NEGATIVE)?
 3353 14260 5272          JMP REL11       /THIS IS A TTY; THUS TIME IS CONNECT TIME
 3354 14261 3607          DCA I REL5      /DDB FOR RELEASE
 3355 14262 1122          TAD REL6        /PICK UP THE DDB ... STORED HERE BY RELLPT
 3356 14263 4402          JMS I RETBK1    /RELEASE THE DDB
 3357 14264 7200          CLA

      /TSS/8 CONFIGURATION FOR UWM                                       Page 77


 3358 14265 6221  REL9,   CFLD            /AND NOW AWAY
 3359 14266 5603          JMP I REL00
 3360             
 3361 14267 4463  REL8,   CHKSRC          /WHERE DID WE COME FROM?
 3362 14270 5603          JMP I REL00     /A USER - JUST RETURN
 3363 14271 5514          JMP I LGI201    /SI - RETURN AN ERROR STATUS
 3364             
 3365             /HERE WE RELEASE A TELETYPE. THE INPUT DDB AND BUFFRS ARE RELEASED
 3366             /THE OUTPUT DDB IS KEPT, AS IS THE POINTER IN DEVTBL. ONLY THE JOB #
 3367             /IS SET TO ZERO. LATER OTHER ROUTINES WILL RETURN THE REST OF THE JUNK.
 3368 14272 6211  REL11,  DATFLD
 3369 14273 1607          TAD I REL5      /GET DDB ADDRESS
 3370 14274 1013          TAD C0006       /GET POINTER TO INPUT BUFFER
 3371 14275 3315          DCA REL2
 3372 14276 1715          TAD I REL2      /GET ADDRESS OF FIRST BLOCK
 3373 14277 4717          JMS I RELTBL    /RETURN LINKED BLOCKS
 3374 14300 6211          DATFLD
 3375 14301 1607          TAD I REL5      /GET INPUT DDB ADDRESS AGAIN
 3376 14302 4402          JMS I RETBK1    /RETURN THE DDB
 3377 14303 7200          CLA
 3378 14304 6211          DATFLD
 3379 14305 3607          DCA I REL5      /CLEAR THE DEVTBL ENTRY
 3380 14306 2207          ISZ REL5        /POINTS TO OUTPUT DDB POINTER
 3381 14307 1607          TAD I REL5
 3382 14310 7001          IAC
 3383 14311 3315          DCA REL2        /POINTS TO JOB # IN OUTPUT SIDE
 3384 14312 3715          DCA I REL2      /CLEAR JOB #
 3385 14313 5265          JMP REL9        /AND GO BACK
 3386             
 3387 14314 3541  DVT01,  DVT0
 3388 14315 0000  REL2,   0
 3389 14316 0000  REL3,   0
 3390 14317 3372  RELTBL, RETBLS
 3391 14320 0051  RELCK1, CLK1
 3392 14321 0050  RELCK2, CLK2
 3393 14322 7163  RELLOG, -LOUT           /LOGOUT IOT
 3394                     IFNZRO TICSPS-24        <GLITCH>
 3395 14323 6457  RELCON, 6457            /FUDGE FOR MIDNITE OVERFLOW
 3396             
 3397             /ROUTINE TO INITIATE AN AUTOMATIC SYSTEM RESTART.
 3398             /WE JUST USE THE FIELD 0 BOOTSTRAP CODE WITH THE
 3399             /AC SET TO THE ERROR ADDRESS. NOTE THAT MOST
 3400             /ERRORS DETECTED IN FIP INDICATE EITHER HARDWARE
 3401             /PROBLEMS OR THAT THE DISC IS MESSED UP, SO THEY
 3402             /HALT THE SYSTEM RATHER THAN TRYING TO REBOOT IT.
 3403             /
 3404 14324 0000  RBOOT,  0
 3405                     IFNZRO CPU-2    <CLA>
 3406 14325 6007          IFZERO CPU-2    <CAF>
 3407 14326 1324          TAD RBOOT       /AC MUST BE NON-ZERO
 3408 14327 6203          CIF CDF
 3409 14330 5731          JMP I .+1       /OFF TO FIELD 0
 3410 14331 3400          RELOAD

      /TSS/8 CONFIGURATION FOR UWM                                       Page 78


 3411             /ROUTINE TO GET THE NUMBER OF A DEVICE ATTACHED TO THIS JOB
 3412             
 3413             /CALLING SEQUENCE:
 3414             /       JMS LNS0
 3415             /       RETURN IF NONE AVAILABLE
 3416             /       NORMAL RETURN (LINE NUMBER IN AC)
 3417             
 3418 14332 0000  LNS0,   0
 3419 14333 1163          TAD DEVTBA      /GLOBAL TO "DEVTBL"
 3420 14334 3116          DCA CFH
 3421 14335 6211          DATFLD          /CDF FIELD 0
 3422 14336 1516  LNS4,   TAD I CFH       /PICK UP POINTER TO DDB
 3423 14337 7450          SNA 
 3424 14340 5351          JMP LNS2        /DEVICE UNASSIGNED
 3425 14341 7001          IAC
 3426 14342 3375          DCA LNS3        /POINTER TO SECOND WORD OF DDB
 3427 14343 1775          TAD I LNS3
 3428 14344 0016          AND P0037       /PICK OFF THE JOB NUMBER OF OWNER
 3429 14345 7041          CIA
 3430 14346 1042          TAD FIJOB       /NUMBER OF CURRENT JOB
 3431 14347 7650          SNA CLA
 3432 14350 5361          JMP LNS5        /THIS DEVICE IS OURS
 3433 14351 2116  LNS2,   ISZ CFH
 3434 14352 1116          TAD CFH
 3435 14353 7040          CMA
 3436 14354 1060          TAD DEVOVR      /GLOBAL TO "JOBTBL"
 3437 14355 7640          SZA CLA
 3438 14356 5336          JMP LNS4        /CONTINUE LOOKING DOWN TABLE
 3439 14357 6221  LNS7,   CFLD            /MAKE SURE WE ARE IN THIS FIELD
 3440 14360 5732          JMP I LNS0      /FOUND NO DEVICES
 3441             
 3442 14361 1052  LNS5,   TAD DEVEND
 3443 14362 7041          CIA
 3444 14363 1116          TAD CFH
 3445 14364 7500          SMA
 3446 14365 5372          JMP LNS6
 3447 14366 1374          TAD LNS10
 3448 14367 7110          CLL RAR
 3449 14370 2332  LNS8,   ISZ LNS0
 3450 14371 5357          JMP LNS7
 3451             
 3452 14372 1376  LNS6,   TAD C4000
 3453 14373 5370          JMP LNS8
 3454             
 3455 14374 0040  LNS10,  DEVTBE-DEVTBL
 3456 14375 0000  LNS3,   0
 3457 14376 4000  C4000,  4000

      /TSS/8 CONFIGURATION FOR UWM                                       Page 79


 3458                     PAGE
 3459             /RENAME ROUTINE
 3460             
 3461 14400 4477  REN0,   JMS I IFN01
 3462 14401 4507          JMS I UC01      /DOES HE OWN THE FILE?
 3463 14402 5252          JMP REN1        /NO - ERROR
 3464 14403 1125          TAD FIOSTK+1    /YES - SAVE THE INTERNAL FILE #
 3465 14404 3124          DCA FIOSTK
 3466 14405 1662          TAD I RENUCP    /GET THE OWNER'S ACCOUNT NUMBER
 3467 14406 3263          DCA REPRTP
 3468 14407 1663          TAD I REPRTP
 3469 14410 4511          JMS I UTS01     / AND FIND THE 'UFDTBL' ENTRY
 3470 14411 7402          HLT             /BAD - IF THE FILE'S OPEN, THERE MUST BE ONE *****
 3471 14412 4461          JMS I BLDP1     /GET THE 'RETTBL' ENTRY ADDRESS
 3472 14413 3125          DCA FIOSTK+1
 3473 14414 7240          CLA CMA
 3474 14415 1663          TAD I REPRTP    /CHECK THE OWNER'S ACCOUNT
 3475 14416 7650          SNA CLA         /IS IT A DIRECTORY (I.E. OWNED BY ACCT # 1)?
 3476 14417 7240          CLA CMA         /YES - THE FIRST WORD (ACCOUNT) MUST BE UNIQUE
 3477 14420 4466          JMS I DS01      /NOW CHECK IF THE NAME ALREADY EXISTS
 3478 14421 0125           FIOSTK+1
 3479 14422 7610          SKP CLA         /NOPE - OK TO RENAME
 3480 14423 5257          JMP REN2        /YES - "INVALID FILE NAME"
 3481 14424 1124          TAD FIOSTK
 3482 14425 4474          JMS I GD01      /GET THIS DIRECTORY ENTRY INTO CORE
 3483 14426 3261          DCA REENTP      / AND SAVE THE POINTER
 3484 14427 1261          TAD REENTP
 3485 14430 1005          TAD P0004
 3486 14431 3263          DCA REPRTP      /POINTER TO PROTECTION BITS
 3487 14432 1663          TAD I REPRTP    /PICK UP PROTECTION BITS
 3488 14433 0007          AND C0020
 3489 14434 7640          SZA CLA         /WRITE-PROTECTED AGAINST OWNER?
 3490 14435 5253          JMP REN1+1      /YES - "PROTECTION VIOLATION"
 3491 14436 1126          TAD FIOSTK+2    /TRANSFER NEW NAME TO DIRECTORY
 3492 14437 7450          SNA             /IS IT A NULL NAME?
 3493 14440 5257          JMP REN2        /YES, DON'T RENAME
 3494 14441 3661          DCA I REENTP
 3495 14442 2261          ISZ REENTP
 3496 14443 1127          TAD FIOSTK+3
 3497 14444 3661          DCA I REENTP
 3498 14445 2261          ISZ REENTP
 3499 14446 1130          TAD FIOSTK+4
 3500 14447 3661          DCA I REENTP
 3501 14450 4504          SAVBUF          /SET 'BUFFER CHANGED' SWITCH
 3502 14451 5513          JMP I FIEXIT    /EXIT FROM FILE PHANTOM
 3503             
 3504 14452 7640  REN1,   SZA CLA         /WHICH ERROR?
 3505 14453 7130  CPERR2, CLL CML RAR     /6000 - PROTECTION VIOLATION
 3506 14454 7130          CLL CML RAR     /4000 - NO FILE OPEN
 3507 14455 3037          DCA FIUSAC
 3508 14456 5513          JMP I FIEXIT
 3509             
 3510 14457 7332  REN2,   CLA CLL CML RTR /6400 - INVALID FILE NAME
 3511 14460 5253          JMP REN1+1
 3512             
 3513 14461 0000  REENTP, 0
 3514 14462 3230  RENUCP, UCUFDP

      /TSS/8 CONFIGURATION FOR UWM                                       Page 80


 3515 14463 0000  REPRTP, 0

      /TSS/8 CONFIGURATION FOR UWM                                       Page 81


 3516             /THIS HANDLES THE 'CPASS' IOT - CHANGE PASSWORD.
 3517             /IF THE SYSTEM MANAGER OR THE BILLING SYSTEM PASS THE
 3518             /INCORRECT CURRENT PASSWORD, THEY ARE SIMPLY RETURNED AN
 3519             /ERROR CODE; IF ANYONE ELSE PASSES US AN INCORRECT CURRENT
 3520             /PASSWORD, THEY ARE AUTOMATICALLY LOGGED-OUT.
 3521             
 3522 14464 1125  CPASS0, TAD FIOSTK+1
 3523 14465 7650          SNA CLA         /RATIONAL ACCOUNT NUMBER?
 3524 14466 5253          JMP CPERR2      /NO - RETURN ERROR CODE
 3525 14467 7240          CLA CMA
 3526 14470 1041          TAD FIACCT
 3527 14471 7650          SNA CLA         /IS THIS THE MANAGER?
 3528 14472 5300          JMP CPASS1      /YES
 3529 14473 1041          TAD FIACCT
 3530 14474 7041          CIA
 3531 14475 1125          TAD FIOSTK+1
 3532 14476 7640          SZA CLA         /NO - IS THIS HIS OWN PASSWORD?
 3533 14477 5253          JMP CPERR2      /NO - JUST SAY "PROTECTION VIOLATION"
 3534 14500 1054  CPASS1, TAD RETTBL
 3535 14501 3124          DCA FIOSTK      /MFD IS ALWAYS FIRST ENTRY
 3536 14502 4466          JMS I DS01      /SEARCH FOR ACCT & PASSWORD IN MFD
 3537 14503 0124           FIOSTK
 3538 14504 5325          JMP CPERR1      /NOT THERE - ERROR!
 3539 14505 3010          DCA INDEX       /SAVE THE ENTRY CORE-ADDRESS
 3540 14506 4462          CHKACT          /IS THIS USER PRIVILEGED?
 3541 14507 5317          JMP CPASS2      /YES - HE CAN CHANGE ANYONE'S PASSWORD
 3542 14510 1010          TAD INDEX       /NO - GET THE UFD PROTECTION
 3543 14511 1005          TAD P0004
 3544 14512 3116          DCA CFH
 3545 14513 1516          TAD I CFH
 3546 14514 0337          AND CPBIT       /CHECK THE 'CHANGE PASSWORD DISABLE' BIT
 3547 14515 7640          SZA CLA         /CAN HE CHANGE HIS OWN PASSWORD?
 3548 14516 5253          JMP CPERR2      /NO - "PROTECTION VIOLATION"
 3549 14517 1130  CPASS2, TAD FIOSTK+4    /YES - SET THE NEW PASSWORD
 3550 14520 3410          DCA I INDEX
 3551 14521 1131          TAD FIOSTK+5
 3552 14522 3410          DCA I INDEX
 3553 14523 4504          SAVBUF          /SET THE 'BUFFER CHANGED' SWITCH
 3554 14524 5513          JMP I FIEXIT    / AND EXIT
 3555             
 3556 14525 7240  CPERR1, CLA CMA
 3557 14526 1041          TAD FIACCT
 3558 14527 7650          SNA CLA         /IS THIS THE MANAGER?
 3559 14530 5253          JMP CPERR2      /YES - JUST RETURN ERROR CODE
 3560 14531 1340          TAD CPLOUT      /NO - SET UP THE 'LOGOUT' PARMS
 3561 14532 3124          DCA FIOSTK
 3562 14533 1042          TAD FIJOB
 3563 14534 3125          DCA FIOSTK+1
 3564 14535 5736          JMP I .+1       /THEN LOG HIM OUT
 3565 14536 3231          LGO0
 3566             
 3567 14537 2000  CPBIT,  2000    /BIT IN UFD PROTECTION - IF SET, PROHIBITS CPASS
 3568 14540 0615  CPLOUT, LOUT

      /TSS/8 CONFIGURATION FOR UWM                                       Page 82


 3569             /THIS HANDLES THE 'BCLR' IOT - THIS ALLOWS THE SYSTEM MANAGER
 3570             /AND THE BILLING SYSTEM TO CLEAR THE BILLING INFORMATION IN
 3571             /THE MFD TO ZEROES. BY USING AN IOT FOR THIS, WE AVOID THE
 3572             /NEED FOR ANY USER PROGRAM TO WRITE INTO THE MFD OR ANY UFD
 3573             /DIRECTLY (THUS AVOIDING ANY CONFLICT WITH FIP). WE THEREFORE
 3574             /NORMALLY SET THE PROTECTION CODES TO PREVENT ANYONE FROM
 3575             /WRITING ANY UFD.
 3576             
 3577 14541 4462  BCLR0,  CHKACT          /IS THIS A PRIVILEGED ACCOUNT?
 3578 14542 7410          SKP             /YES
 3579 14543 5253          JMP CPERR2      /NO - SAY "PROTECTION VIOLATION"
 3580 14544 1125          TAD FIOSTK+1
 3581 14545 7650          SNA CLA         /DID HE PASS US AN ACCOUNT NUMBER?
 3582 14546 5257          JMP REN2        /NO - BOO, HISS!!
 3583 14547 1054          TAD RETTBL      /YES - THE MFD IS ALWAYS THE FIRST ENTRY
 3584 14550 3124          DCA FIOSTK
 3585 14551 7240          CLA CMA         /NOW DO A ONE-WORD SEARCH FOR THE ACCOUNT
 3586 14552 4466          JMS I DS01
 3587 14553 0124           FIOSTK
 3588 14554 5257          JMP REN2        /NO FIND - ERROR!!
 3589 14555 1005          TAD P0004
 3590 14556 3010          DCA INDEX       /SET THE POINTER TO THE INFORMATION
 3591 14557 3410          DCA I INDEX     / AND ZERO THE DEVICE TIME
 3592 14560 3410          DCA I INDEX     / AND THE CPU TIME
 3593 14561 4504          SAVBUF          /NOW SET THE 'BUFFER CHANGED' SWITCH
 3594 14562 5513          JMP I FIEXIT    / AND EXIT

      /TSS/8 CONFIGURATION FOR UWM                                       Page 83


 3595                     PAGE
 3596             /COMPLETION OF LOGOUT ROUTINE
 3597             /REMOVES JOB FROM PERMANENT MONITOR TABLES
 3598             /MUST BE DONE LAST, SINCE WE NEED THE JOB STATUS BLOCKS
 3599             /TO INDICATE ANY ERRORS IN THE FIP I/O
 3600             
 3601 14600 1236  LGO4,   TAD LGO500      /RESTORE THE FIP EXIT
 3602 14601 6221          CFLD
 3603 14602 3641          DCA I LGOFIX
 3604 14603 1042          TAD FIJOB       /SEE IF HE OWNS ANY CORE FIELDS
 3605 14604 6202          CIF
 3606 14605 4570          CORE            /SEARCH CORE TABLE FOR HIM
 3607 14606 0737           737
 3608 14607 5215          JMP LGO5        /NO; NOTHING TO RELEASE
 3609 14610 0014          AND P0007       /YES; RELEASE THE FIELD
 3610 14611 1162          TAD CORTBA
 3611 14612 3116          DCA CFH         /POINTS TO ENTRY IN CORTBL
 3612 14613 6201          CDF
 3613 14614 3516          DCA I CFH       /ZERO THE ENTRY
 3614 14615 1042  LGO5,   TAD FIJOB       /RETURN STATUS BLOCKS
 3615 14616 1060          TAD DEVOVR      /START OF JOB TABLE (END OF DEVTBL)
 3616 14617 3242          DCA LGO6        /POINTS TO JOB TABLE ENTRY
 3617 14620 6211          DATFLD
 3618 14621 1642          TAD I LGO6      /GET ADDRESS OF JOB STATUS
 3619 14622 4637          JMS I LGOBLS    /RETURN STATUS
 3620 14623 6211          DATFLD
 3621 14624 3561          DCA I JOBDAT    /CLEAR JOBDAT
 3622 14625 3642          DCA I LGO6      /CLEAR POINTER IN 'JOBTBL'
 3623 14626 1042          TAD FIJOB
 3624 14627 1240          TAD LGOCLK
 3625 14630 3242          DCA LGO6
 3626 14631 3642          DCA I LGO6      /CLEAR ANY 'CLKTBL' ENTRY
 3627 14632 6201          CDF
 3628 14633 3560          DCA I JOB       /CLEAR JOB (SO SAVJOB WON'T SAVE US)
 3629 14634 3042          DCA FIJOB       / AND AVOID MISTAKING US FOR LOGGED-IN
 3630 14635 5636          JMP I .+1       /AND NOW GO DO FIX50
 3631 14636 3643  LGO500, FIX50
 3632 14637 3372  LGOBLS, RETBLS
 3633 14640 3303  LGOCLK, CLKTBL
 3634 14641 3642  LGOFIX, FIX500
 3635 14642 0000  LGO6,   0

      /TSS/8 CONFIGURATION FOR UWM                                       Page 84


 3636 14643 1125  LGO1,   TAD FIOSTK+1    /LOGOUT WITH AC = 0?
 3637 14644 7640          SZA CLA
 3638 14645 5514          JMP I LGI201    /NO, SO IT'S AN ERROR
 3639 14646 1305          TAD LGOMAX      /YES - COUNT # OF OTHER USERS
 3640 14647 3306          DCA LGOCNT      / OF HIS ACCOUNT #
 3641 14650 1161          TAD JOBDAT
 3642 14651 3242          DCA LGO6        /SAVE 'JOBDAT'
 3643 14652 1060          TAD DEVOVR      /ADDRESS OF JOBTBL
 3644 14653 3161          DCA JOBDAT      /INITIALIZE 'JOBDAT' TO LOOK AT ALL JOBS
 3645 14654 3037          DCA FIUSAC      /ZERO 'FIND' COUNTER
 3646 14655 2161  LGOLP,  ISZ JOBDAT
 3647 14656 6211          DATFLD
 3648 14657 1561          TAD I JOBDAT
 3649 14660 6221          CFLD
 3650 14661 7650          SNA CLA         /IS THE JOB SLOT IN USE?
 3651 14662 5275          JMP LGOLPE      /NO - ON TO THE NEXT
 3652 14663 4472          FGETJT          /GET LOCATION OF USER'S ACCOUNT NUMBER
 3653 14664 0015           JOBACT
 3654 14665 3116          DCA CFH
 3655 14666 6211          DATFLD
 3656 14667 1516          TAD I CFH       /PICK UP THE ACCOUNT NUMBER
 3657 14670 6221          CFLD
 3658 14671 7041          CIA
 3659 14672 1041          TAD FIACCT
 3660 14673 7650          SNA CLA         /SAME AS OURS?
 3661 14674 2037          ISZ FIUSAC      /YES - INCREMENT COUNT
 3662 14675 2306  LGOLPE, ISZ LGOCNT
 3663 14676 5255          JMP LGOLP       /CONTINUE
 3664 14677 7240          CLA CMA
 3665 14700 1037          TAD FIUSAC      /NOW DISCOUNT OUR OWN JOB
 3666 14701 3037          DCA FIUSAC
 3667 14702 1242          TAD LGO6        /THEN RESTORE JOBDAT
 3668 14703 3161          DCA JOBDAT
 3669 14704 5513          JMP I FIEXIT
 3670             
 3671 14705 7754  LGOMAX, -JOBMAX
 3672 14706 0000  LGOCNT, 0

      /TSS/8 CONFIGURATION FOR UWM                                       Page 85


 3673             /JIM CHANGED HIS MIND AS USUAL
 3674             /SO RELLPT WAS CHANGED SO LATE IN THE GAME
 3675             /HOPE THIS IS THE LAST CHANGE
 3676             
 3677 14707 0000  RELLPT, 0
 3678 14710 3361          DCA LPT1        /SAVE PTR TO DEVTBL ENTRY
 3679 14711 1122          TAD REL6        /GET THE DEVICE CODE
 3680 14712 1120          TAD MPUNCH
 3681 14713 7640          SZA CLA         /IS IT THE PUNCH?
 3682 14714 5353          JMP LPT2        / (JUST LEAVE LPT CODE ACTIVE FOR NOW)
 3683 14715 7001          IAC             /AC =1
 3684 14716 3362  LPT6,   DCA LPT4        /SAVE 1 OR -1 FOR DEVTBL PTR ADJUSTMENT
 3685 14717 6201          CDF
 3686 14720 1763          TAD I FILBUF    /FILL PTR OF PTP/LPT BUFFER
 3687 14721 7041          CIA
 3688 14722 1764          TAD I EMPBUF    /EMP PTR OF PTP/LPT BUFFER
 3689 14723 7700          SMA CLA         /ARE THEY EQUAL
 3690 14724 5342          JMP LPT5        /YES - OK TO RELEASE
 3691 14725 1124          TAD FIOSTK
 3692 14726 1366          TAD RELLG2
 3693 14727 7650          SNA CLA         /NO - IS THIS A 'LOGOUT' IOT?
 3694 14730 5342          JMP LPT5        /YES
 3695 14731 4463  L2QB1,  CHKSRC          /NO - WAS THIS FROM SI?
 3696 14732 7410          SKP
 3697 14733 5514          JMP I LGI201    /IT IS SI CALLING RETURN THAT WAY
 3698 14734 7240          CLA CMA         /N0, IT IS USER IOT. 
 3699 14735 1035          TAD FIUSPC      /BACK UP HIS PC AND REDO IT
 3700 14736 3035          DCA FIUSPC
 3701 14737 1125          TAD FIOSTK+1    /PUT THE PARAMETER BACK IN HIS AC
 3702 14740 3037          DCA FIUSAC
 3703 14741 5513          JMP I FIEXIT    /RETURN THIS WAY
 3704 14742 1362  LPT5,   TAD LPT4
 3705 14743 1361          TAD LPT1        /ZERO OUT THE EXTRA PTR IN THIS SPECIAL CASE
 3706 14744 3362          DCA LPT4        /IN DEVTBL
 3707 14745 6211          DATFLD
 3708 14746 3762          DCA I LPT4
 3709 14747 6667          LCP             /CLEAR THE INTERRUPT-ENABLE
 3710 14750 1761  LPT3,   TAD I LPT1      /PICK UP DDB ADDRESS
 3711 14751 3122          DCA REL6        / AND SAVE IT FOR POSSIBLE LATER USE
 3712 14752 5707          JMP I RELLPT
 3713             
 3714 14753 1122  LPT2,   TAD REL6
 3715 14754 1121          TAD MLPT
 3716 14755 7640          SZA CLA         /IS IT THE LINE PRINTER?
 3717 14756 5350          JMP LPT3        /NO
 3718 14757 7240          CLA CMA         /YES, AC = -1
 3719 14760 5316          JMP LPT6
 3720 14761 0000  LPT1,   0
 3721 14762 0000  LPT4,   0
 3722             
 3723 14763 7457  FILBUF, PTPFIL
 3724 14764 7420  EMPBUF, PTPEMP
 3725 14765 0000  LPT7,   0
 3726 14766 7163  RELLG2, -LOUT

      /TSS/8 CONFIGURATION FOR UWM                                       Page 86


 3727                     PAGE
 3728 15000 6021  PUNCHA, PSF     /H.S. PUNCH IOTS
 3729 15001 6026          PLS
 3730 15002 6026          PLS
 3731 15003 6021          PSF
 3732 15004 6022          PCF
 3733 15005 6661  LPTA,   LSF     /PRINTER IOTS
 3734 15006 6666          LPC
 3735 15007 6666          LPC
 3736 15010 6661          LSF
 3737 15011 6662          LCF 
 3738 15012 0211  CAF0,   PTP1    /ADDRESS FOR PUNCH ROUTINE
 3739 15013 7477          PTP2
 3740 15014 7531          PTP3
 3741 15015 7533          PTP4
 3742 15016 7537          PTP5
 3743 15017 7773  ASDCNT, CAF0-.  /# OF IOTS TO BE OVERLAYED
 3744             
 3745 15020 0000  ASDLPT, 0
 3746 15021 3244          DCA LPTA1       /SAVE PTR TO DEVTBL
 3747 15022 2116          ISZ CFH
 3748 15023 1042          TAD FIJOB       /JOB NUMBER OF THE OWNER
 3749 15024 3516          DCA I CFH
 3750 15025 1125          TAD FIOSTK+1    /GET DEVICE #
 3751 15026 1120          TAD MPUNCH      /IS IT PUNCH
 3752 15027 7640          SZA CLA
 3753 15030 5232          JMP LPTA2       /NO,CHECK FOR LPT
 3754                     IFNZRO LPT <
 3755                     IAC             /GET PTR TO LPT DEVICE IN DEVTBL
 3756                     JMS PROB1       /CHECK IF LPT/PTP IS ASSIGNED ERROR
 3757                     TAD PUNCHL
 3758                     JMS LPTA6
 3759                     >
 3760 15031 5620  LPTA4,  JMP I ASDLPT    /RETURN
 3761             LPTA2,
 3762                     IFNZRO LPT <
 3763                     TAD FIOSTK+1    /IS DEVICE LPT?
 3764                     TAD MLPT
 3765                     SZA CLA
 3766                     >
 3767 15032 5231          JMP LPTA4       /NO - RETURN
 3768 15033 7240          CLA CMA         /AC =-1
 3769 15034 4250          JMS PROB1       /IS THE TWIN ASSIGNED?
 3770 15035 6022          PCF             /CLEAR THE PUNCH FLAG, JUST TO BE SURE
 3771 15036 1245          TAD LPTL
 3772 15037 4272          JMS LPTA6       /SET THE LPT IOTS IN PUNCH ROUTINE
 3773 15040 7201          CLA IAC
 3774 15041 6665          LSP             /ENABLE THE PROG. INTERRUPT
 3775 15042 7200          CLA
 3776 15043 5231          JMP LPTA4
 3777 15044 0000  LPTA1,  0
 3778 15045 5005  LPTL,   LPTA
 3779 15046 5000  PUNCHL, PUNCHA
 3780 15047 0000  PROB2,  0
 3781 15050 0000  PROB1,  0
 3782 15051 1244          TAD LPTA1       /GET THE PTR TO DEVTBL OF THE TWIN
 3783 15052 3116          DCA CFH

      /TSS/8 CONFIGURATION FOR UWM                                       Page 87


 3784 15053 1516          TAD I CFH
 3785 15054 7440          SZA
 3786 15055 5261          JMP PROB1A      /TWIN IS ASSIGNED  SO ERROR
 3787 15056 1644          TAD I LPTA1     /ALL IS FINE PROCEED
 3788 15057 3516          DCA I CFH       /MAKE BOTH PTP &LPT SLOTS POINT TO SAME DDB
 3789 15060 5650          JMP I PROB1     /RETURN
 3790 15061 3116  PROB1A, DCA CFH
 3791 15062 1644          TAD I LPTA1     /RETURN THE DDB SET UP IN ANTICIPATION
 3792 15063 4402          JMS I RETBK1
 3793 15064 7200          CLA
 3794 15065 6211          DATFLD
 3795 15066 3644          DCA I LPTA1     /ZERO THE NON ZERO ENTRY IN DEVTBL
 3796 15067 1116          TAD CFH         /GET THE DDB OF DEVICE TO FIND OUT THE OWNER
 3797 15070 5671          JMP I .+1
 3798 15071 4035          ASD11           /DEVICE ASSIGNED TO JOB N MESSAGE
 3799             
 3800 15072 0000  LPTA6,  0
 3801 15073 3247          DCA PROB2
 3802 15074 1314          TAD PROB2A      /COMMON ROUTINE TO PUT PROPER IOTS IN PLACE
 3803 15075 3010          DCA INDEX
 3804 15076 1217          TAD ASDCNT
 3805 15077 3116          DCA CFH         /6 IOTS TO BE CHANGED
 3806 15100 6002          IOF             /A SPURIOUS INTERRUPT COULD KILL US HERE
 3807 15101 6221  LOPLPT, CFLD
 3808 15102 1410          TAD I INDEX
 3809 15103 3250          DCA PROB1
 3810 15104 1647          TAD I PROB2     /GET THE IOT
 3811 15105 6201          CDF
 3812 15106 3650          DCA I PROB1     /STORE IT
 3813 15107 2247          ISZ PROB2       /NEXT IOT ADDRESS
 3814 15110 2116          ISZ CFH         /KEEP TRACK OF COUNT
 3815 15111 5301          JMP LOPLPT      /KEEP GOING
 3816 15112 6001          ION
 3817 15113 5672          JMP I LPTA6
 3818 15114 5011  PROB2A, CAF0-1

      /TSS/8 CONFIGURATION FOR UWM                                       Page 88


 3819             /SUBROUTINE TO CHECK THE FILE EXTENSION AND POSSIBLY
 3820             /SET THE PRIVILEGE BIT FOR THIS JOB.
 3821             
 3822 15115 0000  OPNPV0, 0
 3823 15116 1533          TAD I OPNBUF    /GET THE FILE PROTECTION CODE
 3824 15117 0030          AND C7700
 3825 15120 1343          TAD OPNCHK
 3826 15121 7640          SZA CLA         /IS EXTENSION .SVP (24)?
 3827 15122 5715          JMP I OPNPV0    /NO - JUST RETURN
 3828 15123 7344          CLA CLL CMA RAL
 3829 15124 1132          TAD OPNACT
 3830 15125 7650          SNA CLA         /IS THE FILE FROM THE SYSTEM LIBRARY?
 3831 15126 4463          CHKSRC          /YES - WHO CALLED US?
 3832 15127 5715          JMP I OPNPV0    /A USER - CAN'T SET 'PRIVILEGE'
 3833 15130 4472          FGETJT          /'SI' - GET THE JOB STATUS-WORD
 3834 15131 0000           JOBSTS
 3835 15132 3116          DCA CFH
 3836 15133 6211          DATFLD
 3837 15134 1344          TAD OPNJSP
 3838 15135 7040          CMA
 3839 15136 0516          AND I CFH       /CLEAR THE 'PRIVILEGE' BIT
 3840 15137 1344          TAD OPNJSP      / AND THEN SET IT
 3841 15140 3516          DCA I CFH
 3842 15141 6221          CFLD
 3843 15142 5715          JMP I OPNPV0    /THEN JUST RETURN
 3844             
 3845 15143 5400  OPNCHK, -2400           /.SVP FILE EXTENSION
 3846 15144 0200  OPNJSP, JSPRIV
 3847             
 3848             /WE GET HERE WHEN THE 'UFD' HE TRIED TO OPEN DIDN'T
 3849             /EXIST. WE GIVE HIM THE NUMBER OF THE NEXT 'UFD'.
 3850             
 3851 15145 6211  OPNR01, DATFLD
 3852 15146 1443          TAD I FIOPTR    /GET THE PARAMETER BLOCK
 3853 15147 3133          DCA OPNBUF
 3854 15150 1027          TAD C7000
 3855 15151 3533          DCA I OPNBUF    /SET THE FINAL AC CONTENTS
 3856 15152 1133          TAD OPNBUF
 3857 15153 1005          TAD P0004
 3858 15154 3133          DCA OPNBUF
 3859 15155 6221          CFLD
 3860 15156 1764          TAD I OPNNXT    /GET THE NEXT ACCOUNT
 3861 15157 6211          DATFLD
 3862 15160 3533          DCA I OPNBUF
 3863 15161 1005          TAD P0004       /GET THE NUMBER OF PARAMETERS
 3864 15162 5763          JMP I .+1       / TO RETURN TO THE USER
 3865 15163 2267          INF6
 3866             
 3867 15164 2575  OPNNXT, DSNEXT  /WORD IN 'DS0'
 3868             
 3869                     IFZERO .-5200&4000 <GLITCH>
 3870       5200          *5200
 3871       15200  SEGBUF= .                       /SEGMENT-SIZE BUFFER
 3872       5600  ENTABL= WRDSEG+SEGBUF           /4 2-WORD ENTRIES PER JOB
 3873       6040  UTABLE= JOBMAX^10+ENTABL        /2-WORD ENTRIES
 3874       6160  RTABLE= JOBMAX^4+UTABLE         /1 8-WORD ENTRY FOR EACH 'UTABLE' ENTRY
 3875       6660  FIPTOP= JOBMAX^20+RTABLE        /END OF FIP TABLES (EXC. 'SAT')

      /TSS/8 CONFIGURATION FOR UWM                                       Page 89


 3876             /////   $$$$$

      No detected errors
